#pragma once
#include "aumMonitorableAudioUnit.h"

/******************************************************************************/
/* WARNING: THIS CLASS WAS GENERATED BY THE FOLLOWING FUNCTION:               */
/*                                                                            */
/*     aumUnit_Generic::generateClassFileForAudioUnit(string deviceName);     */
/*                                                                            */
/* IF YOU EDIT THIS FILE, YOU RISK HAVING YOUR CHANGES OVERWRITTEN THE NEXT   */
/* TIME THE FILE IS RE-WRITTEN BY THIS FUNCTION. TO EDIT THIS FILE, PLEASE    */
/* COPY IT TO ANY OTHER FOLDER, RENAME THE CLASS, AND THEN MAKE EDITS.        */
/******************************************************************************/

class aumUnit_Fm8 : public aumMonitorableAudioUnit
{
public:
    //Easy Edit Effect Strength
    //min: -99, max: 100, default: 0
    const static int easy_edit_effect_strength = 0;

    //Easy Edit Timbre Brightness
    //min: -99, max: 100, default: 0
    const static int easy_edit_timbre_brightness = 1;

    //Easy Edit Timbre Harmonic
    //min: -99, max: 100, default: 0
    const static int easy_edit_timbre_harmonic = 2;

    //Easy Edit Timbre Detune
    //min: -99, max: 100, default: 0
    const static int easy_edit_timbre_detune = 3;

    //Easy Edit Timbre Env Amount
    //min: -99, max: 100, default: 0
    const static int easy_edit_timbre_env_amount = 4;

    //Easy Edit Timbre Velocity Sens.
    //min: -99, max: 100, default: 0
    const static int easy_edit_timbre_velocity_sens_ = 5;

    //Easy Edit Timbre Envelope Attack
    //min: -99, max: 100, default: 0
    const static int easy_edit_timbre_envelope_attack = 6;

    //Easy Edit Timbre Envelope Decay
    //min: -99, max: 100, default: 0
    const static int easy_edit_timbre_envelope_decay = 7;

    //Easy Edit TimbreEnvelope Sustain
    //min: -99, max: 100, default: 0
    const static int easy_edit_timbreenvelope_sustain = 8;

    //Easy Edit TimbreEnvelope Release
    //min: -99, max: 100, default: 0
    const static int easy_edit_timbreenvelope_release = 9;

    //Easy Edit LFO Rate
    //min: -99, max: 100, default: 0
    const static int easy_edit_lfo_rate = 10;

    //Easy Edit LFO Vibrato
    //min: -99, max: 100, default: 0
    const static int easy_edit_lfo_vibrato = 11;

    //Easy Edit LFO Timbre
    //min: -99, max: 100, default: 0
    const static int easy_edit_lfo_timbre = 12;

    //Easy Edit LFO Tremolo
    //min: -99, max: 100, default: 0
    const static int easy_edit_lfo_tremolo = 13;

    //Easy Edit Output Volume
    //min: -99, max: 100, default: 0
    const static int easy_edit_output_volume = 14;

    //Easy Edit Output Stereo Width
    //min: -99, max: 100, default: 0
    const static int easy_edit_output_stereo_width = 15;

    //Easy Edit Output Velocity Sens.
    //min: -99, max: 100, default: 0
    const static int easy_edit_output_velocity_sens_ = 16;

    //Easy Edit Volume Envelope Attack
    //min: -99, max: 100, default: 0
    const static int easy_edit_volume_envelope_attack = 17;

    //Easy Edit Volume Envelope Decay
    //min: -99, max: 100, default: 0
    const static int easy_edit_volume_envelope_decay = 18;

    //Easy Edit VolumeEnvelope Sustain
    //min: -99, max: 100, default: 0
    const static int easy_edit_volumeenvelope_sustain = 19;

    //Easy Edit VolumeEnvelope Release
    //min: -99, max: 100, default: 0
    const static int easy_edit_volumeenvelope_release = 20;

    //Morph X
    //min: 0, max: 1, default: 0
    const static int morph_x = 21;

    //Morph Y
    //min: 0, max: 1, default: 0
    const static int morph_y = 22;

    //Morph Random X
    //min: 0, max: 1, default: 0
    const static int morph_random_x = 23;

    //Morph Random Y
    //min: 0, max: 1, default: 0
    const static int morph_random_y = 24;

    //Morph Random Seed
    //min: 1, max: 100, default: 0
    const static int morph_random_seed = 25;

    //Effects Amount BL
    //min: 0, max: 100, default: 50
    const static int effects_amount_bl = 26;

    //Effects Amount BR
    //min: 0, max: 100, default: 50
    const static int effects_amount_br = 27;

    //Effects Amount TR
    //min: 0, max: 100, default: 50
    const static int effects_amount_tr = 28;

    //Effects Amount TL
    //min: 0, max: 100, default: 50
    const static int effects_amount_tl = 29;

    //Overdrive: On/Off
    //min: 0, max: 1, default: 0
    const static int overdrive_on_off = 30;

    //Overdrive: Drive
    //min: 0, max: 1, default: 0.5
    const static int overdrive_drive = 31;

    //Overdrive: Tone
    //min: 0, max: 1, default: 0.5
    const static int overdrive_tone = 32;

    //Overdrive: Bass
    //min: 0, max: 1, default: 0.5
    const static int overdrive_bass = 33;

    //Overdrive: Volume
    //min: 0, max: 1, default: 0.5
    const static int overdrive_volume = 34;

    //TubeAmp: On/Off
    //min: 0, max: 1, default: 0
    const static int tubeamp_on_off = 35;

    //TubeAmp: Drive
    //min: 0, max: 1, default: 0.5
    const static int tubeamp_drive = 36;

    //TubeAmp: Volume
    //min: 0, max: 1, default: 0.5
    const static int tubeamp_volume = 37;

    //Cabinet: On/Off
    //min: 0, max: 1, default: 0
    const static int cabinet_on_off = 38;

    //Cabinet: Type
    //min: 0, max: 9, default: 0
    const static int cabinet_type = 39;

    //Cabinet: Size
    //min: -50, max: 50, default: 0
    const static int cabinet_size = 40;

    //Cabinet: Air
    //min: 0, max: 1, default: 0.5
    const static int cabinet_air = 41;

    //Cabinet: Bass
    //min: -50, max: 50, default: 0
    const static int cabinet_bass = 42;

    //Cabinet: Treble
    //min: -50, max: 50, default: 0
    const static int cabinet_treble = 43;

    //ShelfEQ: On/Off
    //min: 0, max: 1, default: 0
    const static int shelfeq_on_off = 44;

    //ShelfEQ: Low Frequency
    //min: 0, max: 1, default: 0.4
    const static int shelfeq_low_frequency = 45;

    //ShelfEQ: Low Gain
    //min: 0, max: 1, default: 0.5
    const static int shelfeq_low_gain = 46;

    //ShelfEQ: High Frequency
    //min: 0, max: 1, default: 0.6
    const static int shelfeq_high_frequency = 47;

    //ShelfEQ: High Gain
    //min: 0, max: 1, default: 0.5
    const static int shelfeq_high_gain = 48;

    //ShelfEQ: Volume
    //min: 0, max: 1, default: 0.5
    const static int shelfeq_volume = 49;

    //PeakEQ: On/Off
    //min: 0, max: 1, default: 0
    const static int peakeq_on_off = 50;

    //PeakEQ: Frequency 1
    //min: 0, max: 1, default: 0.4
    const static int peakeq_frequency_1 = 51;

    //PeakEQ: Gain 1
    //min: 0, max: 1, default: 0.5
    const static int peakeq_gain_1 = 52;

    //PeakEQ: Quality 1
    //min: 0, max: 1, default: 0.5
    const static int peakeq_quality_1 = 53;

    //PeakEQ: Frequency 2
    //min: 0, max: 1, default: 0.6
    const static int peakeq_frequency_2 = 54;

    //PeakEQ: Gain 2
    //min: 0, max: 1, default: 0.5
    const static int peakeq_gain_2 = 55;

    //PeakEQ: Quality 2
    //min: 0, max: 1, default: 0.5
    const static int peakeq_quality_2 = 56;

    //PeakEQ: Volume
    //min: 0, max: 1, default: 0.5
    const static int peakeq_volume = 57;

    //TalkWah: On/Off
    //min: 0, max: 1, default: 0
    const static int talkwah_on_off = 58;

    //TalkWah: Mouth
    //min: 0, max: 1, default: 0.5
    const static int talkwah_mouth = 59;

    //TalkWah: ModWheel
    //min: 0, max: 1, default: 0
    const static int talkwah_modwheel = 60;

    //TalkWah: Size
    //min: 0, max: 1, default: 0.5
    const static int talkwah_size = 61;

    //TalkWah: Bright
    //min: 0, max: 1, default: 0
    const static int talkwah_bright = 62;

    //Phaser: On/Off
    //min: 0, max: 1, default: 0
    const static int phaser_on_off = 63;

    //Phaser: Modulation Rate
    //min: 0, max: 1, default: 0.5
    const static int phaser_modulation_rate = 64;

    //Phaser: Color
    //min: 0, max: 4, default: 1
    const static int phaser_color = 65;

    //Phaser: Rotate
    //min: -50, max: 50, default: 0
    const static int phaser_rotate = 66;

    //Phaser: Sweep Minimum
    //min: 0, max: 1, default: 0.5
    const static int phaser_sweep_minimum = 67;

    //Phaser: Sweep Maximum
    //min: 0, max: 1, default: 0.5
    const static int phaser_sweep_maximum = 68;

    //Phaser: MIDI Tempo Sync
    //min: 0, max: 1, default: 0
    const static int phaser_midi_tempo_sync = 69;

    //Phaser: Dry/Wet
    //min: 0, max: 1, default: 0.5
    const static int phaser_dry_wet = 70;

    //Phaser: Invert
    //min: 0, max: 1, default: 0
    const static int phaser_invert = 71;

    //Phaser: Notches
    //min: 1, max: 5, default: 2
    const static int phaser_notches = 72;

    //Flanger: On/Off
    //min: 0, max: 1, default: 0
    const static int flanger_on_off = 73;

    //Flanger: Modulation Rate
    //min: 0, max: 1, default: 0.5
    const static int flanger_modulation_rate = 74;

    //Flanger: Static
    //min: 0, max: 1, default: 0
    const static int flanger_static = 75;

    //Flanger: Modulation Depth
    //min: 0, max: 1, default: 0.5
    const static int flanger_modulation_depth = 76;

    //Flanger: Color
    //min: 0, max: 1, default: 0.5
    const static int flanger_color = 77;

    //Flanger: Rotate
    //min: -50, max: 50, default: 0
    const static int flanger_rotate = 78;

    //Flanger: MIDI Tempo Sync
    //min: 0, max: 1, default: 0
    const static int flanger_midi_tempo_sync = 79;

    //Flanger: Invert
    //min: 0, max: 1, default: 0
    const static int flanger_invert = 80;

    //Flanger: Dry/Wet
    //min: 0, max: 1, default: 0.5
    const static int flanger_dry_wet = 81;

    //Tremolo: On/Off
    //min: 0, max: 1, default: 0
    const static int tremolo_on_off = 82;

    //Tremolo: Rate
    //min: 0, max: 1, default: 0.5
    const static int tremolo_rate = 83;

    //Tremolo: Intensity
    //min: 0, max: 1, default: 0.5
    const static int tremolo_intensity = 84;

    //Tremolo: MIDI Tempo Sync
    //min: 0, max: 1, default: 0
    const static int tremolo_midi_tempo_sync = 85;

    //Tremolo: Stereo Panning
    //min: 0, max: 1, default: 0
    const static int tremolo_stereo_panning = 86;

    //Tremolo: Pulse Width
    //min: 0, max: 1, default: 0.5
    const static int tremolo_pulse_width = 87;

    //Tremolo: Attack
    //min: 0, max: 1, default: 0.5
    const static int tremolo_attack = 88;

    //Tremolo: Decay
    //min: 0, max: 1, default: 0.5
    const static int tremolo_decay = 89;

    //Reverb: On/Off
    //min: 0, max: 1, default: 0
    const static int reverb_on_off = 90;

    //Reverb: Dry/Wet
    //min: 0, max: 1, default: 0.5
    const static int reverb_dry_wet = 91;

    //Reverb: Bright
    //min: 0, max: 1, default: 0.5
    const static int reverb_bright = 92;

    //Reverb: Roomsize
    //min: 0, max: 1, default: 0.5
    const static int reverb_roomsize = 93;

    //Reverb: Treble
    //min: 0, max: 1, default: 0.5
    const static int reverb_treble = 94;

    //PsycheDelay: On/Off
    //min: 0, max: 1, default: 0
    const static int psychedelay_on_off = 95;

    //PsycheDelay: Dry/Wet
    //min: 0, max: 1, default: 0.5
    const static int psychedelay_dry_wet = 96;

    //PsycheDelay: Delay Time
    //min: 0, max: 1, default: 0.5
    const static int psychedelay_delay_time = 97;

    //PsycheDelay: Reverse Delay
    //min: 0, max: 1, default: 0
    const static int psychedelay_reverse_delay = 98;

    //PsycheDelay: Delay Detune
    //min: -50, max: 50, default: 0
    const static int psychedelay_delay_detune = 99;

    //PsycheDelay: Feedback
    //min: 0, max: 1, default: 0.5
    const static int psychedelay_feedback = 100;

    //PsycheDelay: Delay Pitch Shift
    //min: -12, max: 12, default: 0
    const static int psychedelay_delay_pitch_shift = 101;

    //PsycheDelay: MIDI Tempo Sync
    //min: 0, max: 1, default: 0
    const static int psychedelay_midi_tempo_sync = 102;

    //PsycheDelay: Stereo
    //min: 0, max: 1, default: 0.5
    const static int psychedelay_stereo = 103;

    //Delay: Delay Time
    //min: 0, max: 100, default: 50
    const static int delay_delay_time = 104;

    //Delay: Diffusion
    //min: 0, max: 100, default: 50
    const static int delay_diffusion = 105;

    //Delay: Modulation Depth
    //min: 0, max: 100, default: 50
    const static int delay_modulation_depth = 106;

    //Delay: Feedback
    //min: 0, max: 100, default: 50
    const static int delay_feedback = 107;

    //Delay: High Cut
    //min: 0, max: 100, default: 50
    const static int delay_high_cut = 108;

    //Delay: Low Cut
    //min: 0, max: 100, default: 50
    const static int delay_low_cut = 109;

    //Delay: Invert
    //min: 0, max: 1, default: 0
    const static int delay_invert = 110;

    //Delay: On/Off
    //min: 0, max: 1, default: 0
    const static int delay_on_off = 111;

    //Delay: Dry/Wet
    //min: 0, max: 100, default: 50
    const static int delay_dry_wet = 112;

    //Delay: Modulation Rate
    //min: 0, max: 100, default: 50
    const static int delay_modulation_rate = 113;

    //Delay: Sync Delays
    //min: 0, max: 1, default: 0
    const static int delay_sync_delays = 114;

    //Delay: MIDI Tempo Sync
    //min: 0, max: 1, default: 0
    const static int delay_midi_tempo_sync = 115;

    //Master Volume
    //min: 0, max: 100, default: 80
    const static int master_volume = 116;

    //Input Volume
    //min: 0, max: 100, default: 80
    const static int input_volume = 117;

    //Master Tune
    //min: -99, max: 100, default: 0
    const static int master_tune = 118;

    //Pitch Transpose
    //min: -24, max: 24, default: 0
    const static int pitch_transpose = 119;

    //Unison Detune
    //min: 0, max: 100, default: 50
    const static int unison_detune = 120;

    //Unison Mono
    //min: 0, max: 1, default: 0
    const static int unison_mono = 121;

    //Unison Pan
    //min: 0, max: 100, default: 0
    const static int unison_pan = 122;

    //Portamento On/Off
    //min: 0, max: 1, default: 0
    const static int portamento_on_off = 123;

    //Portamento Auto
    //min: 0, max: 1, default: 0
    const static int portamento_auto = 124;

    //Portamento Time
    //min: 0, max: 100, default: 50
    const static int portamento_time = 125;

    //Analog Quality BL
    //min: 0, max: 100, default: 50
    const static int analog_quality_bl = 126;

    //Analog Quality BR
    //min: 0, max: 100, default: 50
    const static int analog_quality_br = 127;

    //Analog Quality TR
    //min: 0, max: 100, default: 50
    const static int analog_quality_tr = 128;

    //Analog Quality TL
    //min: 0, max: 100, default: 50
    const static int analog_quality_tl = 129;

    //Digital Quality BL
    //min: 0, max: 100, default: 50
    const static int digital_quality_bl = 130;

    //Digital Quality BR
    //min: 0, max: 100, default: 50
    const static int digital_quality_br = 131;

    //Digital Quality TR
    //min: 0, max: 100, default: 50
    const static int digital_quality_tr = 132;

    //Digital Quality TL
    //min: 0, max: 100, default: 50
    const static int digital_quality_tl = 133;

    //Arpeggiator On
    //min: 0, max: 1, default: 0
    const static int arpeggiator_on = 134;

    //Arpeggiator Note Length
    //min: 0, max: 100, default: 50
    const static int arpeggiator_note_length = 135;

    //Arpeggiator Fixed Velocity
    //min: 0, max: 1, default: 0
    const static int arpeggiator_fixed_velocity = 136;

    //Arpeggiator Velocity
    //min: 0, max: 127, default: 64
    const static int arpeggiator_velocity = 137;

    //Arpeggiator Accent
    //min: 0, max: 127, default: 50
    const static int arpeggiator_accent = 138;

    //Arpeggiator Shuffle
    //min: -100, max: 100, default: 0
    const static int arpeggiator_shuffle = 139;

    //Arpeggiator Hold
    //min: 0, max: 1, default: 0
    const static int arpeggiator_hold = 140;

    //Arpeggiator Rotate Right
    //min: 0, max: 1, default: 0
    const static int arpeggiator_rotate_right = 141;

    //Arpeggiator Rotate Left
    //min: 0, max: 1, default: 0
    const static int arpeggiator_rotate_left = 142;

    //Arpeggiator Number of Steps
    //min: 1, max: 32, default: 8
    const static int arpeggiator_number_of_steps = 143;

    //Arpeggiator Mode
    //min: 0, max: 8, default: 0
    const static int arpeggiator_mode = 144;

    //Arpeggiator Down
    //min: 0, max: 1, default: 0
    const static int arpeggiator_down = 145;

    //Arpeggiator 1 Shot
    //min: 0, max: 1, default: 0
    const static int arpeggiator_1_shot = 146;

    //Arpeggiator Tempo
    //min: 0, max: 4, default: 3
    const static int arpeggiator_tempo = 147;

    //Arpeggiator Tripplets
    //min: 0, max: 2, default: 0
    const static int arpeggiator_tripplets = 148;

    //Arpeggiator Dotted
    //min: 0, max: 2, default: 0
    const static int arpeggiator_dotted = 149;

    //Arpeggiator Key Sync
    //min: 0, max: 1, default: 0
    const static int arpeggiator_key_sync = 150;

    //Arpeggiator BPM Sync
    //min: 0, max: 1, default: 1
    const static int arpeggiator_bpm_sync = 151;

    //Arpeggiator BPM
    //min: 10, max: 500, default: 120
    const static int arpeggiator_bpm = 152;

    //Arpeggiator Split On
    //min: 0, max: 1, default: 0
    const static int arpeggiator_split_on = 153;

    //Arpeggiator Split Note
    //min: 1, max: 126, default: 60
    const static int arpeggiator_split_note = 154;

    //Arpeggiator Split Bass
    //min: 0, max: 1, default: 1
    const static int arpeggiator_split_bass = 155;

    //Microtune Root Note
    //min: 0, max: 11, default: 0
    const static int microtune_root_note = 156;

    //Microtuning of Note C 
    //min: -99, max: 100, default: 0
    const static int microtuning_of_note_c_ = 157;

    //Microtuning of Note C#
    //min: -99, max: 100, default: 0
    const static int microtuning_of_note_c_sharp = 158;

    //Microtuning of Note D 
    //min: -99, max: 100, default: 0
    const static int microtuning_of_note_d_ = 159;

    //Microtuning of Note D#
    //min: -99, max: 100, default: 0
    const static int microtuning_of_note_d_sharp = 160;

    //Microtuning of Note E 
    //min: -99, max: 100, default: 0
    const static int microtuning_of_note_e_ = 161;

    //Microtuning of Note F 
    //min: -99, max: 100, default: 0
    const static int microtuning_of_note_f_ = 162;

    //Microtuning of Note F#
    //min: -99, max: 100, default: 0
    const static int microtuning_of_note_f_sharp = 163;

    //Microtuning of Note G 
    //min: -99, max: 100, default: 0
    const static int microtuning_of_note_g_ = 164;

    //Microtuning of Note G#
    //min: -99, max: 100, default: 0
    const static int microtuning_of_note_g_sharp = 165;

    //Microtuning of Note A 
    //min: -99, max: 100, default: 0
    const static int microtuning_of_note_a_ = 166;

    //Microtuning of Note A#
    //min: -99, max: 100, default: 0
    const static int microtuning_of_note_a_sharp = 167;

    //Microtuning of Note H 
    //min: -99, max: 100, default: 0
    const static int microtuning_of_note_h_ = 168;

    //FM-Matrix Op. A -> Op. A BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_a_bl = 169;

    //FM-Matrix Op. A -> Op. A BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_a_br = 170;

    //FM-Matrix Op. A -> Op. A TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_a_tr = 171;

    //FM-Matrix Op. A -> Op. A TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_a_tl = 172;

    //FM-Matrix Op. A -> Op. B BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_b_bl = 173;

    //FM-Matrix Op. A -> Op. B BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_b_br = 174;

    //FM-Matrix Op. A -> Op. B TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_b_tr = 175;

    //FM-Matrix Op. A -> Op. B TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_b_tl = 176;

    //FM-Matrix Op. A -> Op. C BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_c_bl = 177;

    //FM-Matrix Op. A -> Op. C BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_c_br = 178;

    //FM-Matrix Op. A -> Op. C TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_c_tr = 179;

    //FM-Matrix Op. A -> Op. C TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_c_tl = 180;

    //FM-Matrix Op. A -> Op. D BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_d_bl = 181;

    //FM-Matrix Op. A -> Op. D BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_d_br = 182;

    //FM-Matrix Op. A -> Op. D TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_d_tr = 183;

    //FM-Matrix Op. A -> Op. D TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_d_tl = 184;

    //FM-Matrix Op. A -> Op. E BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_e_bl = 185;

    //FM-Matrix Op. A -> Op. E BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_e_br = 186;

    //FM-Matrix Op. A -> Op. E TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_e_tr = 187;

    //FM-Matrix Op. A -> Op. E TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_e_tl = 188;

    //FM-Matrix Op. A -> Op. F BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_f_bl = 189;

    //FM-Matrix Op. A -> Op. F BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_f_br = 190;

    //FM-Matrix Op. A -> Op. F TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_f_tr = 191;

    //FM-Matrix Op. A -> Op. F TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_f_tl = 192;

    //FM-Matrix Op. A -> Op. X BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_x_bl = 193;

    //FM-Matrix Op. A -> Op. X BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_x_br = 194;

    //FM-Matrix Op. A -> Op. X TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_x_tr = 195;

    //FM-Matrix Op. A -> Op. X TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_x_tl = 196;

    //FM-Matrix Op. A -> Op. Z BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_z_bl = 197;

    //FM-Matrix Op. A -> Op. Z BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_z_br = 198;

    //FM-Matrix Op. A -> Op. Z TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_z_tr = 199;

    //FM-Matrix Op. A -> Op. Z TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_op_z_tl = 200;

    //FM-Matrix Op. A -> Out   BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_out_bl = 201;

    //FM-Matrix Op. A -> Out   BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_out_br = 202;

    //FM-Matrix Op. A -> Out   TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_out_tr = 203;

    //FM-Matrix Op. A -> Out   TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_out_tl = 204;

    //FM-Matrix Op. A -> Pan   BL
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_a_GT_pan_bl = 205;

    //FM-Matrix Op. A -> Pan   BR
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_a_GT_pan_br = 206;

    //FM-Matrix Op. A -> Pan   TR
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_a_GT_pan_tr = 207;

    //FM-Matrix Op. A -> Pan   TL
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_a_GT_pan_tl = 208;

    //FM-Matrix Op. A -> In    BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_in_bl = 209;

    //FM-Matrix Op. A -> In    BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_in_br = 210;

    //FM-Matrix Op. A -> In    TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_in_tr = 211;

    //FM-Matrix Op. A -> In    TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_a_GT_in_tl = 212;

    //FM-Matrix Op. B -> Op. A BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_a_bl = 213;

    //FM-Matrix Op. B -> Op. A BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_a_br = 214;

    //FM-Matrix Op. B -> Op. A TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_a_tr = 215;

    //FM-Matrix Op. B -> Op. A TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_a_tl = 216;

    //FM-Matrix Op. B -> Op. B BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_b_bl = 217;

    //FM-Matrix Op. B -> Op. B BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_b_br = 218;

    //FM-Matrix Op. B -> Op. B TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_b_tr = 219;

    //FM-Matrix Op. B -> Op. B TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_b_tl = 220;

    //FM-Matrix Op. B -> Op. C BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_c_bl = 221;

    //FM-Matrix Op. B -> Op. C BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_c_br = 222;

    //FM-Matrix Op. B -> Op. C TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_c_tr = 223;

    //FM-Matrix Op. B -> Op. C TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_c_tl = 224;

    //FM-Matrix Op. B -> Op. D BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_d_bl = 225;

    //FM-Matrix Op. B -> Op. D BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_d_br = 226;

    //FM-Matrix Op. B -> Op. D TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_d_tr = 227;

    //FM-Matrix Op. B -> Op. D TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_d_tl = 228;

    //FM-Matrix Op. B -> Op. E BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_e_bl = 229;

    //FM-Matrix Op. B -> Op. E BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_e_br = 230;

    //FM-Matrix Op. B -> Op. E TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_e_tr = 231;

    //FM-Matrix Op. B -> Op. E TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_e_tl = 232;

    //FM-Matrix Op. B -> Op. F BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_f_bl = 233;

    //FM-Matrix Op. B -> Op. F BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_f_br = 234;

    //FM-Matrix Op. B -> Op. F TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_f_tr = 235;

    //FM-Matrix Op. B -> Op. F TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_f_tl = 236;

    //FM-Matrix Op. B -> Op. X BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_x_bl = 237;

    //FM-Matrix Op. B -> Op. X BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_x_br = 238;

    //FM-Matrix Op. B -> Op. X TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_x_tr = 239;

    //FM-Matrix Op. B -> Op. X TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_x_tl = 240;

    //FM-Matrix Op. B -> Op. Z BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_z_bl = 241;

    //FM-Matrix Op. B -> Op. Z BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_z_br = 242;

    //FM-Matrix Op. B -> Op. Z TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_z_tr = 243;

    //FM-Matrix Op. B -> Op. Z TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_op_z_tl = 244;

    //FM-Matrix Op. B -> Out   BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_out_bl = 245;

    //FM-Matrix Op. B -> Out   BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_out_br = 246;

    //FM-Matrix Op. B -> Out   TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_out_tr = 247;

    //FM-Matrix Op. B -> Out   TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_out_tl = 248;

    //FM-Matrix Op. B -> Pan   BL
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_b_GT_pan_bl = 249;

    //FM-Matrix Op. B -> Pan   BR
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_b_GT_pan_br = 250;

    //FM-Matrix Op. B -> Pan   TR
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_b_GT_pan_tr = 251;

    //FM-Matrix Op. B -> Pan   TL
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_b_GT_pan_tl = 252;

    //FM-Matrix Op. B -> In    BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_in_bl = 253;

    //FM-Matrix Op. B -> In    BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_in_br = 254;

    //FM-Matrix Op. B -> In    TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_in_tr = 255;

    //FM-Matrix Op. B -> In    TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_b_GT_in_tl = 256;

    //FM-Matrix Op. C -> Op. A BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_a_bl = 257;

    //FM-Matrix Op. C -> Op. A BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_a_br = 258;

    //FM-Matrix Op. C -> Op. A TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_a_tr = 259;

    //FM-Matrix Op. C -> Op. A TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_a_tl = 260;

    //FM-Matrix Op. C -> Op. B BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_b_bl = 261;

    //FM-Matrix Op. C -> Op. B BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_b_br = 262;

    //FM-Matrix Op. C -> Op. B TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_b_tr = 263;

    //FM-Matrix Op. C -> Op. B TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_b_tl = 264;

    //FM-Matrix Op. C -> Op. C BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_c_bl = 265;

    //FM-Matrix Op. C -> Op. C BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_c_br = 266;

    //FM-Matrix Op. C -> Op. C TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_c_tr = 267;

    //FM-Matrix Op. C -> Op. C TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_c_tl = 268;

    //FM-Matrix Op. C -> Op. D BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_d_bl = 269;

    //FM-Matrix Op. C -> Op. D BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_d_br = 270;

    //FM-Matrix Op. C -> Op. D TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_d_tr = 271;

    //FM-Matrix Op. C -> Op. D TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_d_tl = 272;

    //FM-Matrix Op. C -> Op. E BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_e_bl = 273;

    //FM-Matrix Op. C -> Op. E BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_e_br = 274;

    //FM-Matrix Op. C -> Op. E TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_e_tr = 275;

    //FM-Matrix Op. C -> Op. E TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_e_tl = 276;

    //FM-Matrix Op. C -> Op. F BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_f_bl = 277;

    //FM-Matrix Op. C -> Op. F BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_f_br = 278;

    //FM-Matrix Op. C -> Op. F TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_f_tr = 279;

    //FM-Matrix Op. C -> Op. F TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_f_tl = 280;

    //FM-Matrix Op. C -> Op. X BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_x_bl = 281;

    //FM-Matrix Op. C -> Op. X BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_x_br = 282;

    //FM-Matrix Op. C -> Op. X TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_x_tr = 283;

    //FM-Matrix Op. C -> Op. X TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_x_tl = 284;

    //FM-Matrix Op. C -> Op. Z BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_z_bl = 285;

    //FM-Matrix Op. C -> Op. Z BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_z_br = 286;

    //FM-Matrix Op. C -> Op. Z TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_z_tr = 287;

    //FM-Matrix Op. C -> Op. Z TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_op_z_tl = 288;

    //FM-Matrix Op. C -> Out   BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_out_bl = 289;

    //FM-Matrix Op. C -> Out   BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_out_br = 290;

    //FM-Matrix Op. C -> Out   TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_out_tr = 291;

    //FM-Matrix Op. C -> Out   TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_out_tl = 292;

    //FM-Matrix Op. C -> Pan   BL
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_c_GT_pan_bl = 293;

    //FM-Matrix Op. C -> Pan   BR
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_c_GT_pan_br = 294;

    //FM-Matrix Op. C -> Pan   TR
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_c_GT_pan_tr = 295;

    //FM-Matrix Op. C -> Pan   TL
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_c_GT_pan_tl = 296;

    //FM-Matrix Op. C -> In    BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_in_bl = 297;

    //FM-Matrix Op. C -> In    BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_in_br = 298;

    //FM-Matrix Op. C -> In    TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_in_tr = 299;

    //FM-Matrix Op. C -> In    TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_c_GT_in_tl = 300;

    //FM-Matrix Op. D -> Op. A BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_a_bl = 301;

    //FM-Matrix Op. D -> Op. A BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_a_br = 302;

    //FM-Matrix Op. D -> Op. A TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_a_tr = 303;

    //FM-Matrix Op. D -> Op. A TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_a_tl = 304;

    //FM-Matrix Op. D -> Op. B BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_b_bl = 305;

    //FM-Matrix Op. D -> Op. B BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_b_br = 306;

    //FM-Matrix Op. D -> Op. B TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_b_tr = 307;

    //FM-Matrix Op. D -> Op. B TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_b_tl = 308;

    //FM-Matrix Op. D -> Op. C BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_c_bl = 309;

    //FM-Matrix Op. D -> Op. C BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_c_br = 310;

    //FM-Matrix Op. D -> Op. C TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_c_tr = 311;

    //FM-Matrix Op. D -> Op. C TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_c_tl = 312;

    //FM-Matrix Op. D -> Op. D BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_d_bl = 313;

    //FM-Matrix Op. D -> Op. D BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_d_br = 314;

    //FM-Matrix Op. D -> Op. D TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_d_tr = 315;

    //FM-Matrix Op. D -> Op. D TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_d_tl = 316;

    //FM-Matrix Op. D -> Op. E BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_e_bl = 317;

    //FM-Matrix Op. D -> Op. E BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_e_br = 318;

    //FM-Matrix Op. D -> Op. E TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_e_tr = 319;

    //FM-Matrix Op. D -> Op. E TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_e_tl = 320;

    //FM-Matrix Op. D -> Op. F BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_f_bl = 321;

    //FM-Matrix Op. D -> Op. F BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_f_br = 322;

    //FM-Matrix Op. D -> Op. F TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_f_tr = 323;

    //FM-Matrix Op. D -> Op. F TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_f_tl = 324;

    //FM-Matrix Op. D -> Op. X BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_x_bl = 325;

    //FM-Matrix Op. D -> Op. X BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_x_br = 326;

    //FM-Matrix Op. D -> Op. X TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_x_tr = 327;

    //FM-Matrix Op. D -> Op. X TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_x_tl = 328;

    //FM-Matrix Op. D -> Op. Z BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_z_bl = 329;

    //FM-Matrix Op. D -> Op. Z BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_z_br = 330;

    //FM-Matrix Op. D -> Op. Z TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_z_tr = 331;

    //FM-Matrix Op. D -> Op. Z TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_op_z_tl = 332;

    //FM-Matrix Op. D -> Out   BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_out_bl = 333;

    //FM-Matrix Op. D -> Out   BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_out_br = 334;

    //FM-Matrix Op. D -> Out   TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_out_tr = 335;

    //FM-Matrix Op. D -> Out   TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_out_tl = 336;

    //FM-Matrix Op. D -> Pan   BL
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_d_GT_pan_bl = 337;

    //FM-Matrix Op. D -> Pan   BR
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_d_GT_pan_br = 338;

    //FM-Matrix Op. D -> Pan   TR
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_d_GT_pan_tr = 339;

    //FM-Matrix Op. D -> Pan   TL
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_d_GT_pan_tl = 340;

    //FM-Matrix Op. D -> In    BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_in_bl = 341;

    //FM-Matrix Op. D -> In    BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_in_br = 342;

    //FM-Matrix Op. D -> In    TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_in_tr = 343;

    //FM-Matrix Op. D -> In    TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_d_GT_in_tl = 344;

    //FM-Matrix Op. E -> Op. A BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_a_bl = 345;

    //FM-Matrix Op. E -> Op. A BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_a_br = 346;

    //FM-Matrix Op. E -> Op. A TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_a_tr = 347;

    //FM-Matrix Op. E -> Op. A TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_a_tl = 348;

    //FM-Matrix Op. E -> Op. B BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_b_bl = 349;

    //FM-Matrix Op. E -> Op. B BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_b_br = 350;

    //FM-Matrix Op. E -> Op. B TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_b_tr = 351;

    //FM-Matrix Op. E -> Op. B TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_b_tl = 352;

    //FM-Matrix Op. E -> Op. C BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_c_bl = 353;

    //FM-Matrix Op. E -> Op. C BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_c_br = 354;

    //FM-Matrix Op. E -> Op. C TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_c_tr = 355;

    //FM-Matrix Op. E -> Op. C TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_c_tl = 356;

    //FM-Matrix Op. E -> Op. D BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_d_bl = 357;

    //FM-Matrix Op. E -> Op. D BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_d_br = 358;

    //FM-Matrix Op. E -> Op. D TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_d_tr = 359;

    //FM-Matrix Op. E -> Op. D TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_d_tl = 360;

    //FM-Matrix Op. E -> Op. E BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_e_bl = 361;

    //FM-Matrix Op. E -> Op. E BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_e_br = 362;

    //FM-Matrix Op. E -> Op. E TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_e_tr = 363;

    //FM-Matrix Op. E -> Op. E TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_e_tl = 364;

    //FM-Matrix Op. E -> Op. F BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_f_bl = 365;

    //FM-Matrix Op. E -> Op. F BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_f_br = 366;

    //FM-Matrix Op. E -> Op. F TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_f_tr = 367;

    //FM-Matrix Op. E -> Op. F TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_f_tl = 368;

    //FM-Matrix Op. E -> Op. X BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_x_bl = 369;

    //FM-Matrix Op. E -> Op. X BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_x_br = 370;

    //FM-Matrix Op. E -> Op. X TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_x_tr = 371;

    //FM-Matrix Op. E -> Op. X TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_x_tl = 372;

    //FM-Matrix Op. E -> Op. Z BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_z_bl = 373;

    //FM-Matrix Op. E -> Op. Z BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_z_br = 374;

    //FM-Matrix Op. E -> Op. Z TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_z_tr = 375;

    //FM-Matrix Op. E -> Op. Z TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_op_z_tl = 376;

    //FM-Matrix Op. E -> Out   BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_out_bl = 377;

    //FM-Matrix Op. E -> Out   BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_out_br = 378;

    //FM-Matrix Op. E -> Out   TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_out_tr = 379;

    //FM-Matrix Op. E -> Out   TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_out_tl = 380;

    //FM-Matrix Op. E -> Pan   BL
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_e_GT_pan_bl = 381;

    //FM-Matrix Op. E -> Pan   BR
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_e_GT_pan_br = 382;

    //FM-Matrix Op. E -> Pan   TR
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_e_GT_pan_tr = 383;

    //FM-Matrix Op. E -> Pan   TL
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_e_GT_pan_tl = 384;

    //FM-Matrix Op. E -> In    BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_in_bl = 385;

    //FM-Matrix Op. E -> In    BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_in_br = 386;

    //FM-Matrix Op. E -> In    TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_in_tr = 387;

    //FM-Matrix Op. E -> In    TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_e_GT_in_tl = 388;

    //FM-Matrix Op. F -> Op. A BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_a_bl = 389;

    //FM-Matrix Op. F -> Op. A BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_a_br = 390;

    //FM-Matrix Op. F -> Op. A TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_a_tr = 391;

    //FM-Matrix Op. F -> Op. A TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_a_tl = 392;

    //FM-Matrix Op. F -> Op. B BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_b_bl = 393;

    //FM-Matrix Op. F -> Op. B BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_b_br = 394;

    //FM-Matrix Op. F -> Op. B TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_b_tr = 395;

    //FM-Matrix Op. F -> Op. B TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_b_tl = 396;

    //FM-Matrix Op. F -> Op. C BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_c_bl = 397;

    //FM-Matrix Op. F -> Op. C BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_c_br = 398;

    //FM-Matrix Op. F -> Op. C TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_c_tr = 399;

    //FM-Matrix Op. F -> Op. C TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_c_tl = 400;

    //FM-Matrix Op. F -> Op. D BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_d_bl = 401;

    //FM-Matrix Op. F -> Op. D BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_d_br = 402;

    //FM-Matrix Op. F -> Op. D TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_d_tr = 403;

    //FM-Matrix Op. F -> Op. D TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_d_tl = 404;

    //FM-Matrix Op. F -> Op. E BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_e_bl = 405;

    //FM-Matrix Op. F -> Op. E BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_e_br = 406;

    //FM-Matrix Op. F -> Op. E TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_e_tr = 407;

    //FM-Matrix Op. F -> Op. E TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_e_tl = 408;

    //FM-Matrix Op. F -> Op. F BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_f_bl = 409;

    //FM-Matrix Op. F -> Op. F BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_f_br = 410;

    //FM-Matrix Op. F -> Op. F TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_f_tr = 411;

    //FM-Matrix Op. F -> Op. F TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_f_tl = 412;

    //FM-Matrix Op. F -> Op. X BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_x_bl = 413;

    //FM-Matrix Op. F -> Op. X BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_x_br = 414;

    //FM-Matrix Op. F -> Op. X TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_x_tr = 415;

    //FM-Matrix Op. F -> Op. X TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_x_tl = 416;

    //FM-Matrix Op. F -> Op. Z BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_z_bl = 417;

    //FM-Matrix Op. F -> Op. Z BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_z_br = 418;

    //FM-Matrix Op. F -> Op. Z TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_z_tr = 419;

    //FM-Matrix Op. F -> Op. Z TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_op_z_tl = 420;

    //FM-Matrix Op. F -> Out   BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_out_bl = 421;

    //FM-Matrix Op. F -> Out   BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_out_br = 422;

    //FM-Matrix Op. F -> Out   TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_out_tr = 423;

    //FM-Matrix Op. F -> Out   TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_out_tl = 424;

    //FM-Matrix Op. F -> Pan   BL
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_f_GT_pan_bl = 425;

    //FM-Matrix Op. F -> Pan   BR
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_f_GT_pan_br = 426;

    //FM-Matrix Op. F -> Pan   TR
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_f_GT_pan_tr = 427;

    //FM-Matrix Op. F -> Pan   TL
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_f_GT_pan_tl = 428;

    //FM-Matrix Op. F -> In    BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_in_bl = 429;

    //FM-Matrix Op. F -> In    BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_in_br = 430;

    //FM-Matrix Op. F -> In    TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_in_tr = 431;

    //FM-Matrix Op. F -> In    TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_f_GT_in_tl = 432;

    //FM-Matrix Op. X -> Op. A BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_a_bl = 433;

    //FM-Matrix Op. X -> Op. A BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_a_br = 434;

    //FM-Matrix Op. X -> Op. A TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_a_tr = 435;

    //FM-Matrix Op. X -> Op. A TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_a_tl = 436;

    //FM-Matrix Op. X -> Op. B BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_b_bl = 437;

    //FM-Matrix Op. X -> Op. B BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_b_br = 438;

    //FM-Matrix Op. X -> Op. B TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_b_tr = 439;

    //FM-Matrix Op. X -> Op. B TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_b_tl = 440;

    //FM-Matrix Op. X -> Op. C BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_c_bl = 441;

    //FM-Matrix Op. X -> Op. C BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_c_br = 442;

    //FM-Matrix Op. X -> Op. C TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_c_tr = 443;

    //FM-Matrix Op. X -> Op. C TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_c_tl = 444;

    //FM-Matrix Op. X -> Op. D BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_d_bl = 445;

    //FM-Matrix Op. X -> Op. D BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_d_br = 446;

    //FM-Matrix Op. X -> Op. D TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_d_tr = 447;

    //FM-Matrix Op. X -> Op. D TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_d_tl = 448;

    //FM-Matrix Op. X -> Op. E BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_e_bl = 449;

    //FM-Matrix Op. X -> Op. E BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_e_br = 450;

    //FM-Matrix Op. X -> Op. E TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_e_tr = 451;

    //FM-Matrix Op. X -> Op. E TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_e_tl = 452;

    //FM-Matrix Op. X -> Op. F BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_f_bl = 453;

    //FM-Matrix Op. X -> Op. F BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_f_br = 454;

    //FM-Matrix Op. X -> Op. F TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_f_tr = 455;

    //FM-Matrix Op. X -> Op. F TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_f_tl = 456;

    //FM-Matrix Op. X -> Op. Z BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_z_bl = 457;

    //FM-Matrix Op. X -> Op. Z BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_z_br = 458;

    //FM-Matrix Op. X -> Op. Z TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_z_tr = 459;

    //FM-Matrix Op. X -> Op. Z TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_op_z_tl = 460;

    //FM-Matrix Op. X -> Out   BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_out_bl = 461;

    //FM-Matrix Op. X -> Out   BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_out_br = 462;

    //FM-Matrix Op. X -> Out   TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_out_tr = 463;

    //FM-Matrix Op. X -> Out   TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_out_tl = 464;

    //FM-Matrix Op. X -> Pan   BL
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_x_GT_pan_bl = 465;

    //FM-Matrix Op. X -> Pan   BR
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_x_GT_pan_br = 466;

    //FM-Matrix Op. X -> Pan   TR
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_x_GT_pan_tr = 467;

    //FM-Matrix Op. X -> Pan   TL
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_x_GT_pan_tl = 468;

    //FM-Matrix Op. X -> In    BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_in_bl = 469;

    //FM-Matrix Op. X -> In    BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_in_br = 470;

    //FM-Matrix Op. X -> In    TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_in_tr = 471;

    //FM-Matrix Op. X -> In    TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_x_GT_in_tl = 472;

    //FM-Matrix Op. Z -> Op. A BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_a_bl = 473;

    //FM-Matrix Op. Z -> Op. A BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_a_br = 474;

    //FM-Matrix Op. Z -> Op. A TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_a_tr = 475;

    //FM-Matrix Op. Z -> Op. A TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_a_tl = 476;

    //FM-Matrix Op. Z -> Op. B BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_b_bl = 477;

    //FM-Matrix Op. Z -> Op. B BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_b_br = 478;

    //FM-Matrix Op. Z -> Op. B TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_b_tr = 479;

    //FM-Matrix Op. Z -> Op. B TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_b_tl = 480;

    //FM-Matrix Op. Z -> Op. C BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_c_bl = 481;

    //FM-Matrix Op. Z -> Op. C BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_c_br = 482;

    //FM-Matrix Op. Z -> Op. C TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_c_tr = 483;

    //FM-Matrix Op. Z -> Op. C TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_c_tl = 484;

    //FM-Matrix Op. Z -> Op. D BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_d_bl = 485;

    //FM-Matrix Op. Z -> Op. D BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_d_br = 486;

    //FM-Matrix Op. Z -> Op. D TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_d_tr = 487;

    //FM-Matrix Op. Z -> Op. D TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_d_tl = 488;

    //FM-Matrix Op. Z -> Op. E BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_e_bl = 489;

    //FM-Matrix Op. Z -> Op. E BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_e_br = 490;

    //FM-Matrix Op. Z -> Op. E TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_e_tr = 491;

    //FM-Matrix Op. Z -> Op. E TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_e_tl = 492;

    //FM-Matrix Op. Z -> Op. F BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_f_bl = 493;

    //FM-Matrix Op. Z -> Op. F BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_f_br = 494;

    //FM-Matrix Op. Z -> Op. F TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_f_tr = 495;

    //FM-Matrix Op. Z -> Op. F TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_f_tl = 496;

    //FM-Matrix Op. Z -> Op. X BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_x_bl = 497;

    //FM-Matrix Op. Z -> Op. X BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_x_br = 498;

    //FM-Matrix Op. Z -> Op. X TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_x_tr = 499;

    //FM-Matrix Op. Z -> Op. X TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_op_x_tl = 500;

    //FM-Matrix Op. Z -> Out   BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_out_bl = 501;

    //FM-Matrix Op. Z -> Out   BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_out_br = 502;

    //FM-Matrix Op. Z -> Out   TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_out_tr = 503;

    //FM-Matrix Op. Z -> Out   TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_out_tl = 504;

    //FM-Matrix Op. Z -> Pan   BL
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_z_GT_pan_bl = 505;

    //FM-Matrix Op. Z -> Pan   BR
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_z_GT_pan_br = 506;

    //FM-Matrix Op. Z -> Pan   TR
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_z_GT_pan_tr = 507;

    //FM-Matrix Op. Z -> Pan   TL
    //min: -99, max: 100, default: 0
    const static int fm_matrix_op_z_GT_pan_tl = 508;

    //FM-Matrix Op. Z -> In    BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_in_bl = 509;

    //FM-Matrix Op. Z -> In    BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_in_br = 510;

    //FM-Matrix Op. Z -> In    TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_in_tr = 511;

    //FM-Matrix Op. Z -> In    TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_op_z_GT_in_tl = 512;

    //FM-Matrix In    -> Op. A BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_a_bl = 513;

    //FM-Matrix In    -> Op. A BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_a_br = 514;

    //FM-Matrix In    -> Op. A TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_a_tr = 515;

    //FM-Matrix In    -> Op. A TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_a_tl = 516;

    //FM-Matrix In    -> Op. B BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_b_bl = 517;

    //FM-Matrix In    -> Op. B BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_b_br = 518;

    //FM-Matrix In    -> Op. B TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_b_tr = 519;

    //FM-Matrix In    -> Op. B TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_b_tl = 520;

    //FM-Matrix In    -> Op. C BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_c_bl = 521;

    //FM-Matrix In    -> Op. C BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_c_br = 522;

    //FM-Matrix In    -> Op. C TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_c_tr = 523;

    //FM-Matrix In    -> Op. C TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_c_tl = 524;

    //FM-Matrix In    -> Op. D BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_d_bl = 525;

    //FM-Matrix In    -> Op. D BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_d_br = 526;

    //FM-Matrix In    -> Op. D TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_d_tr = 527;

    //FM-Matrix In    -> Op. D TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_d_tl = 528;

    //FM-Matrix In    -> Op. E BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_e_bl = 529;

    //FM-Matrix In    -> Op. E BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_e_br = 530;

    //FM-Matrix In    -> Op. E TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_e_tr = 531;

    //FM-Matrix In    -> Op. E TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_e_tl = 532;

    //FM-Matrix In    -> Op. F BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_f_bl = 533;

    //FM-Matrix In    -> Op. F BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_f_br = 534;

    //FM-Matrix In    -> Op. F TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_f_tr = 535;

    //FM-Matrix In    -> Op. F TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_f_tl = 536;

    //FM-Matrix In    -> Op. X BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_x_bl = 537;

    //FM-Matrix In    -> Op. X BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_x_br = 538;

    //FM-Matrix In    -> Op. X TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_x_tr = 539;

    //FM-Matrix In    -> Op. X TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_x_tl = 540;

    //FM-Matrix In    -> Op. Z BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_z_bl = 541;

    //FM-Matrix In    -> Op. Z BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_z_br = 542;

    //FM-Matrix In    -> Op. Z TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_z_tr = 543;

    //FM-Matrix In    -> Op. Z TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_op_z_tl = 544;

    //FM-Matrix In    -> Out   BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_out_bl = 545;

    //FM-Matrix In    -> Out   BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_out_br = 546;

    //FM-Matrix In    -> Out   TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_out_tr = 547;

    //FM-Matrix In    -> Out   TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_out_tl = 548;

    //FM-Matrix In    -> Pan   BL
    //min: -99, max: 100, default: 0
    const static int fm_matrix_in_GT_pan_bl = 549;

    //FM-Matrix In    -> Pan   BR
    //min: -99, max: 100, default: 0
    const static int fm_matrix_in_GT_pan_br = 550;

    //FM-Matrix In    -> Pan   TR
    //min: -99, max: 100, default: 0
    const static int fm_matrix_in_GT_pan_tr = 551;

    //FM-Matrix In    -> Pan   TL
    //min: -99, max: 100, default: 0
    const static int fm_matrix_in_GT_pan_tl = 552;

    //FM-Matrix In    -> In    BL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_in_bl = 553;

    //FM-Matrix In    -> In    BR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_in_br = 554;

    //FM-Matrix In    -> In    TR
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_in_tr = 555;

    //FM-Matrix In    -> In    TL
    //min: 0, max: 100, default: 50
    const static int fm_matrix_in_GT_in_tl = 556;

    //Filter Bypass
    //min: 0, max: 1, default: 0
    const static int filter_bypass = 557;

    //Saturator Bypass
    //min: 0, max: 1, default: 0
    const static int saturator_bypass = 558;

    //Pitch Envelope Amount
    //min: 0, max: 100, default: 50
    const static int pitch_envelope_amount = 559;

    //Stretch Octaves
    //min: -50, max: 50, default: 0
    const static int stretch_octaves = 560;

    //Pitchbend Mode
    //min: 0, max: 3, default: 0
    const static int pitchbend_mode = 561;

    //Input On/Off BL
    //min: 0, max: 1, default: 0
    const static int input_on_off_bl = 562;

    //Input On/Off BR
    //min: 0, max: 1, default: 0
    const static int input_on_off_br = 563;

    //Input On/Off TR
    //min: 0, max: 1, default: 0
    const static int input_on_off_tr = 564;

    //Input On/Off TL
    //min: 0, max: 1, default: 0
    const static int input_on_off_tl = 565;

    //Op. A Envelope Tempo Sync
    //min: 0, max: 1, default: 0
    const static int op_a_envelope_tempo_sync = 566;

    //Op. B Envelope Tempo Sync
    //min: 0, max: 1, default: 0
    const static int op_b_envelope_tempo_sync = 567;

    //Op. C Envelope Tempo Sync
    //min: 0, max: 1, default: 0
    const static int op_c_envelope_tempo_sync = 568;

    //Op. D Envelope Tempo Sync
    //min: 0, max: 1, default: 0
    const static int op_d_envelope_tempo_sync = 569;

    //Op. E Envelope Tempo Sync
    //min: 0, max: 1, default: 0
    const static int op_e_envelope_tempo_sync = 570;

    //Op. F Envelope Tempo Sync
    //min: 0, max: 1, default: 0
    const static int op_f_envelope_tempo_sync = 571;

    //Op. X Envelope Tempo Sync
    //min: 0, max: 1, default: 0
    const static int op_x_envelope_tempo_sync = 572;

    //Op. Z Envelope Tempo Sync
    //min: 0, max: 1, default: 0
    const static int op_z_envelope_tempo_sync = 573;

    //Pitch Envelope Tempo Sync
    //min: 0, max: 1, default: 0
    const static int pitch_envelope_tempo_sync = 574;

    //FreeRun or KeySync of Op. A
    //min: 0, max: 1, default: 0
    const static int freerun_or_keysync_of_op_a = 575;

    //FreeRun or KeySync of Op. B
    //min: 0, max: 1, default: 0
    const static int freerun_or_keysync_of_op_b = 576;

    //FreeRun or KeySync of Op. C
    //min: 0, max: 1, default: 0
    const static int freerun_or_keysync_of_op_c = 577;

    //FreeRun or KeySync of Op. D
    //min: 0, max: 1, default: 0
    const static int freerun_or_keysync_of_op_d = 578;

    //FreeRun or KeySync of Op. E
    //min: 0, max: 1, default: 0
    const static int freerun_or_keysync_of_op_e = 579;

    //FreeRun or KeySync of Op. F
    //min: 0, max: 1, default: 0
    const static int freerun_or_keysync_of_op_f = 580;

    //FreeRun or KeySync of Op. X
    //min: 0, max: 1, default: 0
    const static int freerun_or_keysync_of_op_x = 581;

    //FreeRun or KeySync of Op. Z
    //min: 0, max: 1, default: 0
    const static int freerun_or_keysync_of_op_z = 582;

    //FreeRun or KeySync of Pitch
    //min: 0, max: 1, default: 0
    const static int freerun_or_keysync_of_pitch = 583;

    //Op. A Velocity Sensivity
    //min: -99, max: 100, default: 50
    const static int op_a_velocity_sensivity = 584;

    //Op. B Velocity Sensivity
    //min: -99, max: 100, default: 50
    const static int op_b_velocity_sensivity = 585;

    //Op. C Velocity Sensivity
    //min: -99, max: 100, default: 50
    const static int op_c_velocity_sensivity = 586;

    //Op. D Velocity Sensivity
    //min: -99, max: 100, default: 50
    const static int op_d_velocity_sensivity = 587;

    //Op. E Velocity Sensivity
    //min: -99, max: 100, default: 50
    const static int op_e_velocity_sensivity = 588;

    //Op. F Velocity Sensivity
    //min: -99, max: 100, default: 50
    const static int op_f_velocity_sensivity = 589;

    //Op. X Velocity Sensivity
    //min: -99, max: 100, default: 50
    const static int op_x_velocity_sensivity = 590;

    //Op. Z Velocity Sensivity
    //min: -99, max: 100, default: 50
    const static int op_z_velocity_sensivity = 591;

    //Pitch Velocity Sensivity
    //min: -99, max: 100, default: 50
    const static int pitch_velocity_sensivity = 592;

    //Op. A Envelope Keyboard Scaling
    //min: 0, max: 100, default: 50
    const static int op_a_envelope_keyboard_scaling = 593;

    //Op. B Envelope Keyboard Scaling
    //min: 0, max: 100, default: 50
    const static int op_b_envelope_keyboard_scaling = 594;

    //Op. C Envelope Keyboard Scaling
    //min: 0, max: 100, default: 50
    const static int op_c_envelope_keyboard_scaling = 595;

    //Op. D Envelope Keyboard Scaling
    //min: 0, max: 100, default: 50
    const static int op_d_envelope_keyboard_scaling = 596;

    //Op. E Envelope Keyboard Scaling
    //min: 0, max: 100, default: 50
    const static int op_e_envelope_keyboard_scaling = 597;

    //Op. F Envelope Keyboard Scaling
    //min: 0, max: 100, default: 50
    const static int op_f_envelope_keyboard_scaling = 598;

    //Op. X Envelope Keyboard Scaling
    //min: 0, max: 100, default: 50
    const static int op_x_envelope_keyboard_scaling = 599;

    //Op. Z Envelope Keyboard Scaling
    //min: 0, max: 100, default: 50
    const static int op_z_envelope_keyboard_scaling = 600;

    //Pitch Envelope Keyboard Scaling
    //min: 0, max: 100, default: 50
    const static int pitch_envelope_keyboard_scaling = 601;

    //Op. A Envelope Velocity Scaling
    //min: -99, max: 100, default: 0
    const static int op_a_envelope_velocity_scaling = 602;

    //Op. B Envelope Velocity Scaling
    //min: -99, max: 100, default: 0
    const static int op_b_envelope_velocity_scaling = 603;

    //Op. C Envelope Velocity Scaling
    //min: -99, max: 100, default: 0
    const static int op_c_envelope_velocity_scaling = 604;

    //Op. D Envelope Velocity Scaling
    //min: -99, max: 100, default: 0
    const static int op_d_envelope_velocity_scaling = 605;

    //Op. E Envelope Velocity Scaling
    //min: -99, max: 100, default: 0
    const static int op_e_envelope_velocity_scaling = 606;

    //Op. F Envelope Velocity Scaling
    //min: -99, max: 100, default: 0
    const static int op_f_envelope_velocity_scaling = 607;

    //Op. X Envelope Velocity Scaling
    //min: -99, max: 100, default: 0
    const static int op_x_envelope_velocity_scaling = 608;

    //Op. Z Envelope Velocity Scaling
    //min: -99, max: 100, default: 0
    const static int op_z_envelope_velocity_scaling = 609;

    //Pitch Envelope Velocity Scaling
    //min: -99, max: 100, default: 0
    const static int pitch_envelope_velocity_scaling = 610;

    //Op. A Wave Invert
    //min: 0, max: 1, default: 0
    const static int op_a_wave_invert = 611;

    //Op. B Wave Invert
    //min: 0, max: 1, default: 0
    const static int op_b_wave_invert = 612;

    //Op. C Wave Invert
    //min: 0, max: 1, default: 0
    const static int op_c_wave_invert = 613;

    //Op. D Wave Invert
    //min: 0, max: 1, default: 0
    const static int op_d_wave_invert = 614;

    //Op. E Wave Invert
    //min: 0, max: 1, default: 0
    const static int op_e_wave_invert = 615;

    //Op. F Wave Invert
    //min: 0, max: 1, default: 0
    const static int op_f_wave_invert = 616;

    //Op. X Wave Invert
    //min: 0, max: 1, default: 0
    const static int op_x_wave_invert = 617;

    //Op. Z Wave Invert
    //min: 0, max: 1, default: 0
    const static int op_z_wave_invert = 618;

    //Pitch Wave Invert
    //min: 0, max: 1, default: 0
    const static int pitch_wave_invert = 619;

    //Op. A Pitch Envelope
    //min: 0, max: 1, default: 1
    const static int op_a_pitch_envelope = 620;

    //Op. B Pitch Envelope
    //min: 0, max: 1, default: 1
    const static int op_b_pitch_envelope = 621;

    //Op. C Pitch Envelope
    //min: 0, max: 1, default: 1
    const static int op_c_pitch_envelope = 622;

    //Op. D Pitch Envelope
    //min: 0, max: 1, default: 1
    const static int op_d_pitch_envelope = 623;

    //Op. E Pitch Envelope
    //min: 0, max: 1, default: 1
    const static int op_e_pitch_envelope = 624;

    //Op. F Pitch Envelope
    //min: 0, max: 1, default: 1
    const static int op_f_pitch_envelope = 625;

    //Op. X Pitch Envelope
    //min: 0, max: 1, default: 1
    const static int op_x_pitch_envelope = 626;

    //Op. Z Pitch Envelope
    //min: 0, max: 1, default: 1
    const static int op_z_pitch_envelope = 627;

    //Pitch Pitch Envelope
    //min: 0, max: 1, default: 1
    const static int pitch_pitch_envelope = 628;

    //Op. A Envelope Mode Loop
    //min: 0, max: 1, default: 1
    const static int op_a_envelope_mode_loop = 629;

    //Op. B Envelope Mode Loop
    //min: 0, max: 1, default: 1
    const static int op_b_envelope_mode_loop = 630;

    //Op. C Envelope Mode Loop
    //min: 0, max: 1, default: 1
    const static int op_c_envelope_mode_loop = 631;

    //Op. D Envelope Mode Loop
    //min: 0, max: 1, default: 1
    const static int op_d_envelope_mode_loop = 632;

    //Op. E Envelope Mode Loop
    //min: 0, max: 1, default: 1
    const static int op_e_envelope_mode_loop = 633;

    //Op. F Envelope Mode Loop
    //min: 0, max: 1, default: 1
    const static int op_f_envelope_mode_loop = 634;

    //Op. X Envelope Mode Loop
    //min: 0, max: 1, default: 1
    const static int op_x_envelope_mode_loop = 635;

    //Op. Z Envelope Mode Loop
    //min: 0, max: 1, default: 1
    const static int op_z_envelope_mode_loop = 636;

    //Pitch Envelope Mode Loop
    //min: 0, max: 1, default: 1
    const static int pitch_envelope_mode_loop = 637;

    //Op. A Envelope Mode Release
    //min: 0, max: 1, default: 1
    const static int op_a_envelope_mode_release = 638;

    //Op. B Envelope Mode Release
    //min: 0, max: 1, default: 1
    const static int op_b_envelope_mode_release = 639;

    //Op. C Envelope Mode Release
    //min: 0, max: 1, default: 1
    const static int op_c_envelope_mode_release = 640;

    //Op. D Envelope Mode Release
    //min: 0, max: 1, default: 1
    const static int op_d_envelope_mode_release = 641;

    //Op. E Envelope Mode Release
    //min: 0, max: 1, default: 1
    const static int op_e_envelope_mode_release = 642;

    //Op. F Envelope Mode Release
    //min: 0, max: 1, default: 1
    const static int op_f_envelope_mode_release = 643;

    //Op. X Envelope Mode Release
    //min: 0, max: 1, default: 1
    const static int op_x_envelope_mode_release = 644;

    //Op. Z Envelope Mode Release
    //min: 0, max: 1, default: 1
    const static int op_z_envelope_mode_release = 645;

    //Pitch Envelope Mode Release
    //min: 0, max: 1, default: 1
    const static int pitch_envelope_mode_release = 646;

    //Op. A On/Off BL
    //min: 0, max: 1, default: 0
    const static int op_a_on_off_bl = 647;

    //Op. A On/Off BR
    //min: 0, max: 1, default: 0
    const static int op_a_on_off_br = 648;

    //Op. A On/Off TR
    //min: 0, max: 1, default: 0
    const static int op_a_on_off_tr = 649;

    //Op. A On/Off TL
    //min: 0, max: 1, default: 0
    const static int op_a_on_off_tl = 650;

    //Op. B On/Off BL
    //min: 0, max: 1, default: 0
    const static int op_b_on_off_bl = 651;

    //Op. B On/Off BR
    //min: 0, max: 1, default: 0
    const static int op_b_on_off_br = 652;

    //Op. B On/Off TR
    //min: 0, max: 1, default: 0
    const static int op_b_on_off_tr = 653;

    //Op. B On/Off TL
    //min: 0, max: 1, default: 0
    const static int op_b_on_off_tl = 654;

    //Op. C On/Off BL
    //min: 0, max: 1, default: 0
    const static int op_c_on_off_bl = 655;

    //Op. C On/Off BR
    //min: 0, max: 1, default: 0
    const static int op_c_on_off_br = 656;

    //Op. C On/Off TR
    //min: 0, max: 1, default: 0
    const static int op_c_on_off_tr = 657;

    //Op. C On/Off TL
    //min: 0, max: 1, default: 0
    const static int op_c_on_off_tl = 658;

    //Op. D On/Off BL
    //min: 0, max: 1, default: 0
    const static int op_d_on_off_bl = 659;

    //Op. D On/Off BR
    //min: 0, max: 1, default: 0
    const static int op_d_on_off_br = 660;

    //Op. D On/Off TR
    //min: 0, max: 1, default: 0
    const static int op_d_on_off_tr = 661;

    //Op. D On/Off TL
    //min: 0, max: 1, default: 0
    const static int op_d_on_off_tl = 662;

    //Op. E On/Off BL
    //min: 0, max: 1, default: 0
    const static int op_e_on_off_bl = 663;

    //Op. E On/Off BR
    //min: 0, max: 1, default: 0
    const static int op_e_on_off_br = 664;

    //Op. E On/Off TR
    //min: 0, max: 1, default: 0
    const static int op_e_on_off_tr = 665;

    //Op. E On/Off TL
    //min: 0, max: 1, default: 0
    const static int op_e_on_off_tl = 666;

    //Op. F On/Off BL
    //min: 0, max: 1, default: 0
    const static int op_f_on_off_bl = 667;

    //Op. F On/Off BR
    //min: 0, max: 1, default: 0
    const static int op_f_on_off_br = 668;

    //Op. F On/Off TR
    //min: 0, max: 1, default: 0
    const static int op_f_on_off_tr = 669;

    //Op. F On/Off TL
    //min: 0, max: 1, default: 0
    const static int op_f_on_off_tl = 670;

    //Op. X On/Off BL
    //min: 0, max: 1, default: 0
    const static int op_x_on_off_bl = 671;

    //Op. X On/Off BR
    //min: 0, max: 1, default: 0
    const static int op_x_on_off_br = 672;

    //Op. X On/Off TR
    //min: 0, max: 1, default: 0
    const static int op_x_on_off_tr = 673;

    //Op. X On/Off TL
    //min: 0, max: 1, default: 0
    const static int op_x_on_off_tl = 674;

    //Op. Z On/Off BL
    //min: 0, max: 1, default: 0
    const static int op_z_on_off_bl = 675;

    //Op. Z On/Off BR
    //min: 0, max: 1, default: 0
    const static int op_z_on_off_br = 676;

    //Op. Z On/Off TR
    //min: 0, max: 1, default: 0
    const static int op_z_on_off_tr = 677;

    //Op. Z On/Off TL
    //min: 0, max: 1, default: 0
    const static int op_z_on_off_tl = 678;

    //Pitch On/Off BL
    //min: 0, max: 1, default: 0
    const static int pitch_on_off_bl = 679;

    //Pitch On/Off BR
    //min: 0, max: 1, default: 0
    const static int pitch_on_off_br = 680;

    //Pitch On/Off TR
    //min: 0, max: 1, default: 0
    const static int pitch_on_off_tr = 681;

    //Pitch On/Off TL
    //min: 0, max: 1, default: 0
    const static int pitch_on_off_tl = 682;

    //Op. A Output Level BL
    //min: 0, max: 100, default: 50
    const static int op_a_output_level_bl = 683;

    //Op. A Output Level BR
    //min: 0, max: 100, default: 50
    const static int op_a_output_level_br = 684;

    //Op. A Output Level TR
    //min: 0, max: 100, default: 50
    const static int op_a_output_level_tr = 685;

    //Op. A Output Level TL
    //min: 0, max: 100, default: 50
    const static int op_a_output_level_tl = 686;

    //Op. B Output Level BL
    //min: 0, max: 100, default: 50
    const static int op_b_output_level_bl = 687;

    //Op. B Output Level BR
    //min: 0, max: 100, default: 50
    const static int op_b_output_level_br = 688;

    //Op. B Output Level TR
    //min: 0, max: 100, default: 50
    const static int op_b_output_level_tr = 689;

    //Op. B Output Level TL
    //min: 0, max: 100, default: 50
    const static int op_b_output_level_tl = 690;

    //Op. C Output Level BL
    //min: 0, max: 100, default: 50
    const static int op_c_output_level_bl = 691;

    //Op. C Output Level BR
    //min: 0, max: 100, default: 50
    const static int op_c_output_level_br = 692;

    //Op. C Output Level TR
    //min: 0, max: 100, default: 50
    const static int op_c_output_level_tr = 693;

    //Op. C Output Level TL
    //min: 0, max: 100, default: 50
    const static int op_c_output_level_tl = 694;

    //Op. D Output Level BL
    //min: 0, max: 100, default: 50
    const static int op_d_output_level_bl = 695;

    //Op. D Output Level BR
    //min: 0, max: 100, default: 50
    const static int op_d_output_level_br = 696;

    //Op. D Output Level TR
    //min: 0, max: 100, default: 50
    const static int op_d_output_level_tr = 697;

    //Op. D Output Level TL
    //min: 0, max: 100, default: 50
    const static int op_d_output_level_tl = 698;

    //Op. E Output Level BL
    //min: 0, max: 100, default: 50
    const static int op_e_output_level_bl = 699;

    //Op. E Output Level BR
    //min: 0, max: 100, default: 50
    const static int op_e_output_level_br = 700;

    //Op. E Output Level TR
    //min: 0, max: 100, default: 50
    const static int op_e_output_level_tr = 701;

    //Op. E Output Level TL
    //min: 0, max: 100, default: 50
    const static int op_e_output_level_tl = 702;

    //Op. F Output Level BL
    //min: 0, max: 100, default: 50
    const static int op_f_output_level_bl = 703;

    //Op. F Output Level BR
    //min: 0, max: 100, default: 50
    const static int op_f_output_level_br = 704;

    //Op. F Output Level TR
    //min: 0, max: 100, default: 50
    const static int op_f_output_level_tr = 705;

    //Op. F Output Level TL
    //min: 0, max: 100, default: 50
    const static int op_f_output_level_tl = 706;

    //Op. X Output Level BL
    //min: 0, max: 100, default: 50
    const static int op_x_output_level_bl = 707;

    //Op. X Output Level BR
    //min: 0, max: 100, default: 50
    const static int op_x_output_level_br = 708;

    //Op. X Output Level TR
    //min: 0, max: 100, default: 50
    const static int op_x_output_level_tr = 709;

    //Op. X Output Level TL
    //min: 0, max: 100, default: 50
    const static int op_x_output_level_tl = 710;

    //Op. Z Output Level BL
    //min: 0, max: 100, default: 50
    const static int op_z_output_level_bl = 711;

    //Op. Z Output Level BR
    //min: 0, max: 100, default: 50
    const static int op_z_output_level_br = 712;

    //Op. Z Output Level TR
    //min: 0, max: 100, default: 50
    const static int op_z_output_level_tr = 713;

    //Op. Z Output Level TL
    //min: 0, max: 100, default: 50
    const static int op_z_output_level_tl = 714;

    //Pitch Output Level BL
    //min: 0, max: 100, default: 50
    const static int pitch_output_level_bl = 715;

    //Pitch Output Level BR
    //min: 0, max: 100, default: 50
    const static int pitch_output_level_br = 716;

    //Pitch Output Level TR
    //min: 0, max: 100, default: 50
    const static int pitch_output_level_tr = 717;

    //Pitch Output Level TL
    //min: 0, max: 100, default: 50
    const static int pitch_output_level_tl = 718;

    //Op. A WaveformBL
    //min: 0, max: 31, default: 0
    const static int op_a_waveformbl = 719;

    //Op. A WaveformBR
    //min: 0, max: 31, default: 0
    const static int op_a_waveformbr = 720;

    //Op. A WaveformTR
    //min: 0, max: 31, default: 0
    const static int op_a_waveformtr = 721;

    //Op. A WaveformTL
    //min: 0, max: 31, default: 0
    const static int op_a_waveformtl = 722;

    //Op. B WaveformBL
    //min: 0, max: 31, default: 0
    const static int op_b_waveformbl = 723;

    //Op. B WaveformBR
    //min: 0, max: 31, default: 0
    const static int op_b_waveformbr = 724;

    //Op. B WaveformTR
    //min: 0, max: 31, default: 0
    const static int op_b_waveformtr = 725;

    //Op. B WaveformTL
    //min: 0, max: 31, default: 0
    const static int op_b_waveformtl = 726;

    //Op. C WaveformBL
    //min: 0, max: 31, default: 0
    const static int op_c_waveformbl = 727;

    //Op. C WaveformBR
    //min: 0, max: 31, default: 0
    const static int op_c_waveformbr = 728;

    //Op. C WaveformTR
    //min: 0, max: 31, default: 0
    const static int op_c_waveformtr = 729;

    //Op. C WaveformTL
    //min: 0, max: 31, default: 0
    const static int op_c_waveformtl = 730;

    //Op. D WaveformBL
    //min: 0, max: 31, default: 0
    const static int op_d_waveformbl = 731;

    //Op. D WaveformBR
    //min: 0, max: 31, default: 0
    const static int op_d_waveformbr = 732;

    //Op. D WaveformTR
    //min: 0, max: 31, default: 0
    const static int op_d_waveformtr = 733;

    //Op. D WaveformTL
    //min: 0, max: 31, default: 0
    const static int op_d_waveformtl = 734;

    //Op. E WaveformBL
    //min: 0, max: 31, default: 0
    const static int op_e_waveformbl = 735;

    //Op. E WaveformBR
    //min: 0, max: 31, default: 0
    const static int op_e_waveformbr = 736;

    //Op. E WaveformTR
    //min: 0, max: 31, default: 0
    const static int op_e_waveformtr = 737;

    //Op. E WaveformTL
    //min: 0, max: 31, default: 0
    const static int op_e_waveformtl = 738;

    //Op. F WaveformBL
    //min: 0, max: 31, default: 0
    const static int op_f_waveformbl = 739;

    //Op. F WaveformBR
    //min: 0, max: 31, default: 0
    const static int op_f_waveformbr = 740;

    //Op. F WaveformTR
    //min: 0, max: 31, default: 0
    const static int op_f_waveformtr = 741;

    //Op. F WaveformTL
    //min: 0, max: 31, default: 0
    const static int op_f_waveformtl = 742;

    //Op. X WaveformBL
    //min: 0, max: 31, default: 0
    const static int op_x_waveformbl = 743;

    //Op. X WaveformBR
    //min: 0, max: 31, default: 0
    const static int op_x_waveformbr = 744;

    //Op. X WaveformTR
    //min: 0, max: 31, default: 0
    const static int op_x_waveformtr = 745;

    //Op. X WaveformTL
    //min: 0, max: 31, default: 0
    const static int op_x_waveformtl = 746;

    //Op. Z WaveformBL
    //min: 0, max: 31, default: 0
    const static int op_z_waveformbl = 747;

    //Op. Z WaveformBR
    //min: 0, max: 31, default: 0
    const static int op_z_waveformbr = 748;

    //Op. Z WaveformTR
    //min: 0, max: 31, default: 0
    const static int op_z_waveformtr = 749;

    //Op. Z WaveformTL
    //min: 0, max: 31, default: 0
    const static int op_z_waveformtl = 750;

    //Pitch WaveformBL
    //min: 0, max: 31, default: 0
    const static int pitch_waveformbl = 751;

    //Pitch WaveformBR
    //min: 0, max: 31, default: 0
    const static int pitch_waveformbr = 752;

    //Pitch WaveformTR
    //min: 0, max: 31, default: 0
    const static int pitch_waveformtr = 753;

    //Pitch WaveformTL
    //min: 0, max: 31, default: 0
    const static int pitch_waveformtl = 754;

    //Op. A Frequency RatioBL
    //min: 0, max: 64, default: 0
    const static int op_a_frequency_ratiobl = 755;

    //Op. A Frequency RatioBR
    //min: 0, max: 64, default: 0
    const static int op_a_frequency_ratiobr = 756;

    //Op. A Frequency RatioTR
    //min: 0, max: 64, default: 0
    const static int op_a_frequency_ratiotr = 757;

    //Op. A Frequency RatioTL
    //min: 0, max: 64, default: 0
    const static int op_a_frequency_ratiotl = 758;

    //Op. B Frequency RatioBL
    //min: 0, max: 64, default: 0
    const static int op_b_frequency_ratiobl = 759;

    //Op. B Frequency RatioBR
    //min: 0, max: 64, default: 0
    const static int op_b_frequency_ratiobr = 760;

    //Op. B Frequency RatioTR
    //min: 0, max: 64, default: 0
    const static int op_b_frequency_ratiotr = 761;

    //Op. B Frequency RatioTL
    //min: 0, max: 64, default: 0
    const static int op_b_frequency_ratiotl = 762;

    //Op. C Frequency RatioBL
    //min: 0, max: 64, default: 0
    const static int op_c_frequency_ratiobl = 763;

    //Op. C Frequency RatioBR
    //min: 0, max: 64, default: 0
    const static int op_c_frequency_ratiobr = 764;

    //Op. C Frequency RatioTR
    //min: 0, max: 64, default: 0
    const static int op_c_frequency_ratiotr = 765;

    //Op. C Frequency RatioTL
    //min: 0, max: 64, default: 0
    const static int op_c_frequency_ratiotl = 766;

    //Op. D Frequency RatioBL
    //min: 0, max: 64, default: 0
    const static int op_d_frequency_ratiobl = 767;

    //Op. D Frequency RatioBR
    //min: 0, max: 64, default: 0
    const static int op_d_frequency_ratiobr = 768;

    //Op. D Frequency RatioTR
    //min: 0, max: 64, default: 0
    const static int op_d_frequency_ratiotr = 769;

    //Op. D Frequency RatioTL
    //min: 0, max: 64, default: 0
    const static int op_d_frequency_ratiotl = 770;

    //Op. E Frequency RatioBL
    //min: 0, max: 64, default: 0
    const static int op_e_frequency_ratiobl = 771;

    //Op. E Frequency RatioBR
    //min: 0, max: 64, default: 0
    const static int op_e_frequency_ratiobr = 772;

    //Op. E Frequency RatioTR
    //min: 0, max: 64, default: 0
    const static int op_e_frequency_ratiotr = 773;

    //Op. E Frequency RatioTL
    //min: 0, max: 64, default: 0
    const static int op_e_frequency_ratiotl = 774;

    //Op. F Frequency RatioBL
    //min: 0, max: 64, default: 0
    const static int op_f_frequency_ratiobl = 775;

    //Op. F Frequency RatioBR
    //min: 0, max: 64, default: 0
    const static int op_f_frequency_ratiobr = 776;

    //Op. F Frequency RatioTR
    //min: 0, max: 64, default: 0
    const static int op_f_frequency_ratiotr = 777;

    //Op. F Frequency RatioTL
    //min: 0, max: 64, default: 0
    const static int op_f_frequency_ratiotl = 778;

    //Op. X Frequency RatioBL
    //min: 0, max: 64, default: 0
    const static int op_x_frequency_ratiobl = 779;

    //Op. X Frequency RatioBR
    //min: 0, max: 64, default: 0
    const static int op_x_frequency_ratiobr = 780;

    //Op. X Frequency RatioTR
    //min: 0, max: 64, default: 0
    const static int op_x_frequency_ratiotr = 781;

    //Op. X Frequency RatioTL
    //min: 0, max: 64, default: 0
    const static int op_x_frequency_ratiotl = 782;

    //Op. Z Frequency RatioBL
    //min: 0, max: 64, default: 0
    const static int op_z_frequency_ratiobl = 783;

    //Op. Z Frequency RatioBR
    //min: 0, max: 64, default: 0
    const static int op_z_frequency_ratiobr = 784;

    //Op. Z Frequency RatioTR
    //min: 0, max: 64, default: 0
    const static int op_z_frequency_ratiotr = 785;

    //Op. Z Frequency RatioTL
    //min: 0, max: 64, default: 0
    const static int op_z_frequency_ratiotl = 786;

    //Pitch Frequency RatioBL
    //min: 0, max: 64, default: 0
    const static int pitch_frequency_ratiobl = 787;

    //Pitch Frequency RatioBR
    //min: 0, max: 64, default: 0
    const static int pitch_frequency_ratiobr = 788;

    //Pitch Frequency RatioTR
    //min: 0, max: 64, default: 0
    const static int pitch_frequency_ratiotr = 789;

    //Pitch Frequency RatioTL
    //min: 0, max: 64, default: 0
    const static int pitch_frequency_ratiotl = 790;

    //Op. A Frequency OffsetBL
    //min: -999, max: 9999, default: 0
    const static int op_a_frequency_offsetbl = 791;

    //Op. A Frequency OffsetBR
    //min: -999, max: 9999, default: 0
    const static int op_a_frequency_offsetbr = 792;

    //Op. A Frequency OffsetTR
    //min: -999, max: 9999, default: 0
    const static int op_a_frequency_offsettr = 793;

    //Op. A Frequency OffsetTL
    //min: -999, max: 9999, default: 0
    const static int op_a_frequency_offsettl = 794;

    //Op. B Frequency OffsetBL
    //min: -999, max: 9999, default: 0
    const static int op_b_frequency_offsetbl = 795;

    //Op. B Frequency OffsetBR
    //min: -999, max: 9999, default: 0
    const static int op_b_frequency_offsetbr = 796;

    //Op. B Frequency OffsetTR
    //min: -999, max: 9999, default: 0
    const static int op_b_frequency_offsettr = 797;

    //Op. B Frequency OffsetTL
    //min: -999, max: 9999, default: 0
    const static int op_b_frequency_offsettl = 798;

    //Op. C Frequency OffsetBL
    //min: -999, max: 9999, default: 0
    const static int op_c_frequency_offsetbl = 799;

    //Op. C Frequency OffsetBR
    //min: -999, max: 9999, default: 0
    const static int op_c_frequency_offsetbr = 800;

    //Op. C Frequency OffsetTR
    //min: -999, max: 9999, default: 0
    const static int op_c_frequency_offsettr = 801;

    //Op. C Frequency OffsetTL
    //min: -999, max: 9999, default: 0
    const static int op_c_frequency_offsettl = 802;

    //Op. D Frequency OffsetBL
    //min: -999, max: 9999, default: 0
    const static int op_d_frequency_offsetbl = 803;

    //Op. D Frequency OffsetBR
    //min: -999, max: 9999, default: 0
    const static int op_d_frequency_offsetbr = 804;

    //Op. D Frequency OffsetTR
    //min: -999, max: 9999, default: 0
    const static int op_d_frequency_offsettr = 805;

    //Op. D Frequency OffsetTL
    //min: -999, max: 9999, default: 0
    const static int op_d_frequency_offsettl = 806;

    //Op. E Frequency OffsetBL
    //min: -999, max: 9999, default: 0
    const static int op_e_frequency_offsetbl = 807;

    //Op. E Frequency OffsetBR
    //min: -999, max: 9999, default: 0
    const static int op_e_frequency_offsetbr = 808;

    //Op. E Frequency OffsetTR
    //min: -999, max: 9999, default: 0
    const static int op_e_frequency_offsettr = 809;

    //Op. E Frequency OffsetTL
    //min: -999, max: 9999, default: 0
    const static int op_e_frequency_offsettl = 810;

    //Op. F Frequency OffsetBL
    //min: -999, max: 9999, default: 0
    const static int op_f_frequency_offsetbl = 811;

    //Op. F Frequency OffsetBR
    //min: -999, max: 9999, default: 0
    const static int op_f_frequency_offsetbr = 812;

    //Op. F Frequency OffsetTR
    //min: -999, max: 9999, default: 0
    const static int op_f_frequency_offsettr = 813;

    //Op. F Frequency OffsetTL
    //min: -999, max: 9999, default: 0
    const static int op_f_frequency_offsettl = 814;

    //Op. X Frequency OffsetBL
    //min: -999, max: 9999, default: 0
    const static int op_x_frequency_offsetbl = 815;

    //Op. X Frequency OffsetBR
    //min: -999, max: 9999, default: 0
    const static int op_x_frequency_offsetbr = 816;

    //Op. X Frequency OffsetTR
    //min: -999, max: 9999, default: 0
    const static int op_x_frequency_offsettr = 817;

    //Op. X Frequency OffsetTL
    //min: -999, max: 9999, default: 0
    const static int op_x_frequency_offsettl = 818;

    //Op. Z Frequency OffsetBL
    //min: -999, max: 9999, default: 0
    const static int op_z_frequency_offsetbl = 819;

    //Op. Z Frequency OffsetBR
    //min: -999, max: 9999, default: 0
    const static int op_z_frequency_offsetbr = 820;

    //Op. Z Frequency OffsetTR
    //min: -999, max: 9999, default: 0
    const static int op_z_frequency_offsettr = 821;

    //Op. Z Frequency OffsetTL
    //min: -999, max: 9999, default: 0
    const static int op_z_frequency_offsettl = 822;

    //Pitch Frequency OffsetBL
    //min: -999, max: 9999, default: 0
    const static int pitch_frequency_offsetbl = 823;

    //Pitch Frequency OffsetBR
    //min: -999, max: 9999, default: 0
    const static int pitch_frequency_offsetbr = 824;

    //Pitch Frequency OffsetTR
    //min: -999, max: 9999, default: 0
    const static int pitch_frequency_offsettr = 825;

    //Pitch Frequency OffsetTL
    //min: -999, max: 9999, default: 0
    const static int pitch_frequency_offsettl = 826;

    //Filt. Routing Serial/Parallel BL
    //min: 0, max: 100, default: 50
    const static int filt_routing_serial_parallel_bl = 827;

    //Filt. Routing Serial/Parallel BR
    //min: 0, max: 100, default: 50
    const static int filt_routing_serial_parallel_br = 828;

    //Filt. Routing Serial/Parallel TR
    //min: 0, max: 100, default: 50
    const static int filt_routing_serial_parallel_tr = 829;

    //Filt. Routing Serial/Parallel TL
    //min: 0, max: 100, default: 50
    const static int filt_routing_serial_parallel_tl = 830;

    //Filter Routing Mix BL
    //min: 0, max: 100, default: 50
    const static int filter_routing_mix_bl = 831;

    //Filter Routing Mix BR
    //min: 0, max: 100, default: 50
    const static int filter_routing_mix_br = 832;

    //Filter Routing Mix TR
    //min: 0, max: 100, default: 50
    const static int filter_routing_mix_tr = 833;

    //Filter Routing Mix TL
    //min: 0, max: 100, default: 50
    const static int filter_routing_mix_tl = 834;

    //Filter 1 Mode BL
    //min: 0, max: 100, default: 50
    const static int filter_1_mode_bl = 835;

    //Filter 1 Mode BR
    //min: 0, max: 100, default: 50
    const static int filter_1_mode_br = 836;

    //Filter 1 Mode TR
    //min: 0, max: 100, default: 50
    const static int filter_1_mode_tr = 837;

    //Filter 1 Mode TL
    //min: 0, max: 100, default: 50
    const static int filter_1_mode_tl = 838;

    //Filter 2 Mode BL
    //min: 0, max: 100, default: 50
    const static int filter_2_mode_bl = 839;

    //Filter 2 Mode BR
    //min: 0, max: 100, default: 50
    const static int filter_2_mode_br = 840;

    //Filter 2 Mode TR
    //min: 0, max: 100, default: 50
    const static int filter_2_mode_tr = 841;

    //Filter 2 Mode TL
    //min: 0, max: 100, default: 50
    const static int filter_2_mode_tl = 842;

    //Filter Cutoff BL
    //min: 0, max: 100, default: 50
    const static int filter_cutoff_bl = 843;

    //Filter Cutoff BR
    //min: 0, max: 100, default: 50
    const static int filter_cutoff_br = 844;

    //Filter Cutoff TR
    //min: 0, max: 100, default: 50
    const static int filter_cutoff_tr = 845;

    //Filter Cutoff TL
    //min: 0, max: 100, default: 50
    const static int filter_cutoff_tl = 846;

    //Filter Cutoff Spread BL
    //min: 0, max: 100, default: 50
    const static int filter_cutoff_spread_bl = 847;

    //Filter Cutoff Spread BR
    //min: 0, max: 100, default: 50
    const static int filter_cutoff_spread_br = 848;

    //Filter Cutoff Spread TR
    //min: 0, max: 100, default: 50
    const static int filter_cutoff_spread_tr = 849;

    //Filter Cutoff Spread TL
    //min: 0, max: 100, default: 50
    const static int filter_cutoff_spread_tl = 850;

    //Filter Envelope Amount BL
    //min: -99, max: 100, default: 0
    const static int filter_envelope_amount_bl = 851;

    //Filter Envelope Amount BR
    //min: -99, max: 100, default: 0
    const static int filter_envelope_amount_br = 852;

    //Filter Envelope Amount TR
    //min: -99, max: 100, default: 0
    const static int filter_envelope_amount_tr = 853;

    //Filter Envelope Amount TL
    //min: -99, max: 100, default: 0
    const static int filter_envelope_amount_tl = 854;

    //Filter 1 Resonance BL
    //min: 0, max: 100, default: 50
    const static int filter_1_resonance_bl = 855;

    //Filter 1 Resonance BR
    //min: 0, max: 100, default: 50
    const static int filter_1_resonance_br = 856;

    //Filter 1 Resonance TR
    //min: 0, max: 100, default: 50
    const static int filter_1_resonance_tr = 857;

    //Filter 1 Resonance TL
    //min: 0, max: 100, default: 50
    const static int filter_1_resonance_tl = 858;

    //Filter 2 Resonance BL
    //min: 0, max: 100, default: 50
    const static int filter_2_resonance_bl = 859;

    //Filter 2 Resonance BR
    //min: 0, max: 100, default: 50
    const static int filter_2_resonance_br = 860;

    //Filter 2 Resonance TR
    //min: 0, max: 100, default: 50
    const static int filter_2_resonance_tr = 861;

    //Filter 2 Resonance TL
    //min: 0, max: 100, default: 50
    const static int filter_2_resonance_tl = 862;

    //Noise Cutoff BL
    //min: 0, max: 100, default: 50
    const static int noise_cutoff_bl = 863;

    //Noise Cutoff BR
    //min: 0, max: 100, default: 50
    const static int noise_cutoff_br = 864;

    //Noise Cutoff TR
    //min: 0, max: 100, default: 50
    const static int noise_cutoff_tr = 865;

    //Noise Cutoff TL
    //min: 0, max: 100, default: 50
    const static int noise_cutoff_tl = 866;

    //Noise Resonance BL
    //min: 0, max: 100, default: 50
    const static int noise_resonance_bl = 867;

    //Noise Resonance BR
    //min: 0, max: 100, default: 50
    const static int noise_resonance_br = 868;

    //Noise Resonance TR
    //min: 0, max: 100, default: 50
    const static int noise_resonance_tr = 869;

    //Noise Resonance TL
    //min: 0, max: 100, default: 50
    const static int noise_resonance_tl = 870;

    //Noise Amplitude BL
    //min: 0, max: 100, default: 50
    const static int noise_amplitude_bl = 871;

    //Noise Amplitude BR
    //min: 0, max: 100, default: 50
    const static int noise_amplitude_br = 872;

    //Noise Amplitude TR
    //min: 0, max: 100, default: 50
    const static int noise_amplitude_tr = 873;

    //Noise Amplitude TL
    //min: 0, max: 100, default: 50
    const static int noise_amplitude_tl = 874;

    //Saturator Gain BL
    //min: 0, max: 100, default: 50
    const static int saturator_gain_bl = 875;

    //Saturator Gain BR
    //min: 0, max: 100, default: 50
    const static int saturator_gain_br = 876;

    //Saturator Gain TR
    //min: 0, max: 100, default: 50
    const static int saturator_gain_tr = 877;

    //Saturator Gain TL
    //min: 0, max: 100, default: 50
    const static int saturator_gain_tl = 878;

    //Saturator Level BL
    //min: 0, max: 100, default: 50
    const static int saturator_level_bl = 879;

    //Saturator Level BR
    //min: 0, max: 100, default: 50
    const static int saturator_level_br = 880;

    //Saturator Level TR
    //min: 0, max: 100, default: 50
    const static int saturator_level_tr = 881;

    //Saturator Level TL
    //min: 0, max: 100, default: 50
    const static int saturator_level_tl = 882;

    //Saturator Asymmetry BL
    //min: 0, max: 100, default: 50
    const static int saturator_asymmetry_bl = 883;

    //Saturator Asymmetry BR
    //min: 0, max: 100, default: 50
    const static int saturator_asymmetry_br = 884;

    //Saturator Asymmetry TR
    //min: 0, max: 100, default: 50
    const static int saturator_asymmetry_tr = 885;

    //Saturator Asymmetry TL
    //min: 0, max: 100, default: 50
    const static int saturator_asymmetry_tl = 886;

    //Op. A Modulation Pitchbend Up
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_pitchbend_up = 887;

    //Op. B Modulation Pitchbend Up
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_pitchbend_up = 888;

    //Op. C Modulation Pitchbend Up
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_pitchbend_up = 889;

    //Op. D Modulation Pitchbend Up
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_pitchbend_up = 890;

    //Op. E Modulation Pitchbend Up
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_pitchbend_up = 891;

    //Op. F Modulation Pitchbend Up
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_pitchbend_up = 892;

    //Op. X Modulation Pitchbend Up
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_pitchbend_up = 893;

    //Op. Z Modulation Pitchbend Up
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_pitchbend_up = 894;

    //Pitch Modulation Pitchbend Up
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_pitchbend_up = 895;

    //Op. A Modulation Pitchbend Down
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_pitchbend_down = 896;

    //Op. B Modulation Pitchbend Down
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_pitchbend_down = 897;

    //Op. C Modulation Pitchbend Down
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_pitchbend_down = 898;

    //Op. D Modulation Pitchbend Down
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_pitchbend_down = 899;

    //Op. E Modulation Pitchbend Down
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_pitchbend_down = 900;

    //Op. F Modulation Pitchbend Down
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_pitchbend_down = 901;

    //Op. X Modulation Pitchbend Down
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_pitchbend_down = 902;

    //Op. Z Modulation Pitchbend Down
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_pitchbend_down = 903;

    //Pitch Modulation Pitchbend Down
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_pitchbend_down = 904;

    //Op. A Modulation Aftertouch
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_aftertouch = 905;

    //Op. B Modulation Aftertouch
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_aftertouch = 906;

    //Op. C Modulation Aftertouch
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_aftertouch = 907;

    //Op. D Modulation Aftertouch
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_aftertouch = 908;

    //Op. E Modulation Aftertouch
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_aftertouch = 909;

    //Op. F Modulation Aftertouch
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_aftertouch = 910;

    //Op. X Modulation Aftertouch
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_aftertouch = 911;

    //Op. Z Modulation Aftertouch
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_aftertouch = 912;

    //Pitch Modulation Aftertouch
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_aftertouch = 913;

    //Op. A Modulation Modwheel
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_modwheel = 914;

    //Op. B Modulation Modwheel
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_modwheel = 915;

    //Op. C Modulation Modwheel
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_modwheel = 916;

    //Op. D Modulation Modwheel
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_modwheel = 917;

    //Op. E Modulation Modwheel
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_modwheel = 918;

    //Op. F Modulation Modwheel
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_modwheel = 919;

    //Op. X Modulation Modwheel
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_modwheel = 920;

    //Op. Z Modulation Modwheel
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_modwheel = 921;

    //Pitch Modulation Modwheel
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_modwheel = 922;

    //Op. A Modulation Breath Ctlr
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_breath_ctlr = 923;

    //Op. B Modulation Breath Ctlr
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_breath_ctlr = 924;

    //Op. C Modulation Breath Ctlr
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_breath_ctlr = 925;

    //Op. D Modulation Breath Ctlr
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_breath_ctlr = 926;

    //Op. E Modulation Breath Ctlr
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_breath_ctlr = 927;

    //Op. F Modulation Breath Ctlr
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_breath_ctlr = 928;

    //Op. X Modulation Breath Ctlr
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_breath_ctlr = 929;

    //Op. Z Modulation Breath Ctlr
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_breath_ctlr = 930;

    //Pitch Modulation Breath Ctlr
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_breath_ctlr = 931;

    //Op. A Modulation Controller 1
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_controller_1 = 932;

    //Op. B Modulation Controller 1
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_controller_1 = 933;

    //Op. C Modulation Controller 1
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_controller_1 = 934;

    //Op. D Modulation Controller 1
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_controller_1 = 935;

    //Op. E Modulation Controller 1
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_controller_1 = 936;

    //Op. F Modulation Controller 1
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_controller_1 = 937;

    //Op. X Modulation Controller 1
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_controller_1 = 938;

    //Op. Z Modulation Controller 1
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_controller_1 = 939;

    //Pitch Modulation Controller 1
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_controller_1 = 940;

    //Op. A Modulation Controller 2
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_controller_2 = 941;

    //Op. B Modulation Controller 2
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_controller_2 = 942;

    //Op. C Modulation Controller 2
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_controller_2 = 943;

    //Op. D Modulation Controller 2
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_controller_2 = 944;

    //Op. E Modulation Controller 2
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_controller_2 = 945;

    //Op. F Modulation Controller 2
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_controller_2 = 946;

    //Op. X Modulation Controller 2
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_controller_2 = 947;

    //Op. Z Modulation Controller 2
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_controller_2 = 948;

    //Pitch Modulation Controller 2
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_controller_2 = 949;

    //Op. A Modulation Input Envelope
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_input_envelope = 950;

    //Op. B Modulation Input Envelope
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_input_envelope = 951;

    //Op. C Modulation Input Envelope
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_input_envelope = 952;

    //Op. D Modulation Input Envelope
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_input_envelope = 953;

    //Op. E Modulation Input Envelope
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_input_envelope = 954;

    //Op. F Modulation Input Envelope
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_input_envelope = 955;

    //Op. X Modulation Input Envelope
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_input_envelope = 956;

    //Op. Z Modulation Input Envelope
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_input_envelope = 957;

    //Pitch Modulation Input Envelope
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_input_envelope = 958;

    //Op. A Modulation LFO 1
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_lfo_1 = 959;

    //Op. B Modulation LFO 1
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_lfo_1 = 960;

    //Op. C Modulation LFO 1
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_lfo_1 = 961;

    //Op. D Modulation LFO 1
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_lfo_1 = 962;

    //Op. E Modulation LFO 1
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_lfo_1 = 963;

    //Op. F Modulation LFO 1
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_lfo_1 = 964;

    //Op. X Modulation LFO 1
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_lfo_1 = 965;

    //Op. Z Modulation LFO 1
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_lfo_1 = 966;

    //Pitch Modulation LFO 1
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_lfo_1 = 967;

    //Op. A Modulation LFO 1 * ATC
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_lfo_1_MULTIPLY_atc = 968;

    //Op. B Modulation LFO 1 * ATC
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_lfo_1_MULTIPLY_atc = 969;

    //Op. C Modulation LFO 1 * ATC
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_lfo_1_MULTIPLY_atc = 970;

    //Op. D Modulation LFO 1 * ATC
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_lfo_1_MULTIPLY_atc = 971;

    //Op. E Modulation LFO 1 * ATC
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_lfo_1_MULTIPLY_atc = 972;

    //Op. F Modulation LFO 1 * ATC
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_lfo_1_MULTIPLY_atc = 973;

    //Op. X Modulation LFO 1 * ATC
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_lfo_1_MULTIPLY_atc = 974;

    //Op. Z Modulation LFO 1 * ATC
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_lfo_1_MULTIPLY_atc = 975;

    //Pitch Modulation LFO 1 * ATC
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_lfo_1_MULTIPLY_atc = 976;

    //Op. A Modulation LFO 1 * MW
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_lfo_1_MULTIPLY_mw = 977;

    //Op. B Modulation LFO 1 * MW
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_lfo_1_MULTIPLY_mw = 978;

    //Op. C Modulation LFO 1 * MW
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_lfo_1_MULTIPLY_mw = 979;

    //Op. D Modulation LFO 1 * MW
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_lfo_1_MULTIPLY_mw = 980;

    //Op. E Modulation LFO 1 * MW
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_lfo_1_MULTIPLY_mw = 981;

    //Op. F Modulation LFO 1 * MW
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_lfo_1_MULTIPLY_mw = 982;

    //Op. X Modulation LFO 1 * MW
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_lfo_1_MULTIPLY_mw = 983;

    //Op. Z Modulation LFO 1 * MW
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_lfo_1_MULTIPLY_mw = 984;

    //Pitch Modulation LFO 1 * MW
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_lfo_1_MULTIPLY_mw = 985;

    //Op. A Modulation LFO 1 * BC
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_lfo_1_MULTIPLY_bc = 986;

    //Op. B Modulation LFO 1 * BC
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_lfo_1_MULTIPLY_bc = 987;

    //Op. C Modulation LFO 1 * BC
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_lfo_1_MULTIPLY_bc = 988;

    //Op. D Modulation LFO 1 * BC
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_lfo_1_MULTIPLY_bc = 989;

    //Op. E Modulation LFO 1 * BC
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_lfo_1_MULTIPLY_bc = 990;

    //Op. F Modulation LFO 1 * BC
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_lfo_1_MULTIPLY_bc = 991;

    //Op. X Modulation LFO 1 * BC
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_lfo_1_MULTIPLY_bc = 992;

    //Op. Z Modulation LFO 1 * BC
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_lfo_1_MULTIPLY_bc = 993;

    //Pitch Modulation LFO 1 * BC
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_lfo_1_MULTIPLY_bc = 994;

    //Op. A Modulation LFO 1 * Ctrl 1
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_lfo_1_MULTIPLY_ctrl_1 = 995;

    //Op. B Modulation LFO 1 * Ctrl 1
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_lfo_1_MULTIPLY_ctrl_1 = 996;

    //Op. C Modulation LFO 1 * Ctrl 1
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_lfo_1_MULTIPLY_ctrl_1 = 997;

    //Op. D Modulation LFO 1 * Ctrl 1
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_lfo_1_MULTIPLY_ctrl_1 = 998;

    //Op. E Modulation LFO 1 * Ctrl 1
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_lfo_1_MULTIPLY_ctrl_1 = 999;

    //Op. F Modulation LFO 1 * Ctrl 1
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_lfo_1_MULTIPLY_ctrl_1 = 1000;

    //Op. X Modulation LFO 1 * Ctrl 1
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_lfo_1_MULTIPLY_ctrl_1 = 1001;

    //Op. Z Modulation LFO 1 * Ctrl 1
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_lfo_1_MULTIPLY_ctrl_1 = 1002;

    //Pitch Modulation LFO 1 * Ctrl 1
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_lfo_1_MULTIPLY_ctrl_1 = 1003;

    //Op. A Modulation LFO 1 * Ctrl 2
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_lfo_1_MULTIPLY_ctrl_2 = 1004;

    //Op. B Modulation LFO 1 * Ctrl 2
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_lfo_1_MULTIPLY_ctrl_2 = 1005;

    //Op. C Modulation LFO 1 * Ctrl 2
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_lfo_1_MULTIPLY_ctrl_2 = 1006;

    //Op. D Modulation LFO 1 * Ctrl 2
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_lfo_1_MULTIPLY_ctrl_2 = 1007;

    //Op. E Modulation LFO 1 * Ctrl 2
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_lfo_1_MULTIPLY_ctrl_2 = 1008;

    //Op. F Modulation LFO 1 * Ctrl 2
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_lfo_1_MULTIPLY_ctrl_2 = 1009;

    //Op. X Modulation LFO 1 * Ctrl 2
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_lfo_1_MULTIPLY_ctrl_2 = 1010;

    //Op. Z Modulation LFO 1 * Ctrl 2
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_lfo_1_MULTIPLY_ctrl_2 = 1011;

    //Pitch Modulation LFO 1 * Ctrl 2
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_lfo_1_MULTIPLY_ctrl_2 = 1012;

    //Op. A Modulation LFO 2
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_lfo_2 = 1013;

    //Op. B Modulation LFO 2
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_lfo_2 = 1014;

    //Op. C Modulation LFO 2
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_lfo_2 = 1015;

    //Op. D Modulation LFO 2
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_lfo_2 = 1016;

    //Op. E Modulation LFO 2
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_lfo_2 = 1017;

    //Op. F Modulation LFO 2
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_lfo_2 = 1018;

    //Op. X Modulation LFO 2
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_lfo_2 = 1019;

    //Op. Z Modulation LFO 2
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_lfo_2 = 1020;

    //Pitch Modulation LFO 2
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_lfo_2 = 1021;

    //Op. A Modulation LFO 2 * ATC
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_lfo_2_MULTIPLY_atc = 1022;

    //Op. B Modulation LFO 2 * ATC
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_lfo_2_MULTIPLY_atc = 1023;

    //Op. C Modulation LFO 2 * ATC
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_lfo_2_MULTIPLY_atc = 1024;

    //Op. D Modulation LFO 2 * ATC
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_lfo_2_MULTIPLY_atc = 1025;

    //Op. E Modulation LFO 2 * ATC
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_lfo_2_MULTIPLY_atc = 1026;

    //Op. F Modulation LFO 2 * ATC
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_lfo_2_MULTIPLY_atc = 1027;

    //Op. X Modulation LFO 2 * ATC
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_lfo_2_MULTIPLY_atc = 1028;

    //Op. Z Modulation LFO 2 * ATC
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_lfo_2_MULTIPLY_atc = 1029;

    //Pitch Modulation LFO 2 * ATC
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_lfo_2_MULTIPLY_atc = 1030;

    //Op. A Modulation LFO 2 * MW
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_lfo_2_MULTIPLY_mw = 1031;

    //Op. B Modulation LFO 2 * MW
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_lfo_2_MULTIPLY_mw = 1032;

    //Op. C Modulation LFO 2 * MW
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_lfo_2_MULTIPLY_mw = 1033;

    //Op. D Modulation LFO 2 * MW
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_lfo_2_MULTIPLY_mw = 1034;

    //Op. E Modulation LFO 2 * MW
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_lfo_2_MULTIPLY_mw = 1035;

    //Op. F Modulation LFO 2 * MW
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_lfo_2_MULTIPLY_mw = 1036;

    //Op. X Modulation LFO 2 * MW
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_lfo_2_MULTIPLY_mw = 1037;

    //Op. Z Modulation LFO 2 * MW
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_lfo_2_MULTIPLY_mw = 1038;

    //Pitch Modulation LFO 2 * MW
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_lfo_2_MULTIPLY_mw = 1039;

    //Op. A Modulation LFO 2 * BC
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_lfo_2_MULTIPLY_bc = 1040;

    //Op. B Modulation LFO 2 * BC
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_lfo_2_MULTIPLY_bc = 1041;

    //Op. C Modulation LFO 2 * BC
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_lfo_2_MULTIPLY_bc = 1042;

    //Op. D Modulation LFO 2 * BC
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_lfo_2_MULTIPLY_bc = 1043;

    //Op. E Modulation LFO 2 * BC
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_lfo_2_MULTIPLY_bc = 1044;

    //Op. F Modulation LFO 2 * BC
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_lfo_2_MULTIPLY_bc = 1045;

    //Op. X Modulation LFO 2 * BC
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_lfo_2_MULTIPLY_bc = 1046;

    //Op. Z Modulation LFO 2 * BC
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_lfo_2_MULTIPLY_bc = 1047;

    //Pitch Modulation LFO 2 * BC
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_lfo_2_MULTIPLY_bc = 1048;

    //Op. A Modulation LFO 2 * Ctrl 1
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_lfo_2_MULTIPLY_ctrl_1 = 1049;

    //Op. B Modulation LFO 2 * Ctrl 1
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_lfo_2_MULTIPLY_ctrl_1 = 1050;

    //Op. C Modulation LFO 2 * Ctrl 1
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_lfo_2_MULTIPLY_ctrl_1 = 1051;

    //Op. D Modulation LFO 2 * Ctrl 1
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_lfo_2_MULTIPLY_ctrl_1 = 1052;

    //Op. E Modulation LFO 2 * Ctrl 1
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_lfo_2_MULTIPLY_ctrl_1 = 1053;

    //Op. F Modulation LFO 2 * Ctrl 1
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_lfo_2_MULTIPLY_ctrl_1 = 1054;

    //Op. X Modulation LFO 2 * Ctrl 1
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_lfo_2_MULTIPLY_ctrl_1 = 1055;

    //Op. Z Modulation LFO 2 * Ctrl 1
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_lfo_2_MULTIPLY_ctrl_1 = 1056;

    //Pitch Modulation LFO 2 * Ctrl 1
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_lfo_2_MULTIPLY_ctrl_1 = 1057;

    //Op. A Modulation LFO 2 * Ctrl 2
    //min: -99, max: 100, default: 0
    const static int op_a_modulation_lfo_2_MULTIPLY_ctrl_2 = 1058;

    //Op. B Modulation LFO 2 * Ctrl 2
    //min: -99, max: 100, default: 0
    const static int op_b_modulation_lfo_2_MULTIPLY_ctrl_2 = 1059;

    //Op. C Modulation LFO 2 * Ctrl 2
    //min: -99, max: 100, default: 0
    const static int op_c_modulation_lfo_2_MULTIPLY_ctrl_2 = 1060;

    //Op. D Modulation LFO 2 * Ctrl 2
    //min: -99, max: 100, default: 0
    const static int op_d_modulation_lfo_2_MULTIPLY_ctrl_2 = 1061;

    //Op. E Modulation LFO 2 * Ctrl 2
    //min: -99, max: 100, default: 0
    const static int op_e_modulation_lfo_2_MULTIPLY_ctrl_2 = 1062;

    //Op. F Modulation LFO 2 * Ctrl 2
    //min: -99, max: 100, default: 0
    const static int op_f_modulation_lfo_2_MULTIPLY_ctrl_2 = 1063;

    //Op. X Modulation LFO 2 * Ctrl 2
    //min: -99, max: 100, default: 0
    const static int op_x_modulation_lfo_2_MULTIPLY_ctrl_2 = 1064;

    //Op. Z Modulation LFO 2 * Ctrl 2
    //min: -99, max: 100, default: 0
    const static int op_z_modulation_lfo_2_MULTIPLY_ctrl_2 = 1065;

    //Pitch Modulation LFO 2 * Ctrl 2
    //min: -99, max: 100, default: 0
    const static int pitch_modulation_lfo_2_MULTIPLY_ctrl_2 = 1066;

    //LFO 1 Invert
    //min: 0, max: 1, default: 0
    const static int lfo_1_invert = 1067;

    //LFO 2 Invert
    //min: 0, max: 1, default: 0
    const static int lfo_2_invert = 1068;

    //LFO 1 On/Off
    //min: 0, max: 1, default: 0
    const static int lfo_1_on_off = 1069;

    //Number of LFO1 Waveform
    //min: 0, max: 32, default: 0
    const static int number_of_lfo1_waveform = 1070;

    //LFO 1 Rate
    //min: 0, max: 100, default: 50
    const static int lfo_1_rate = 1071;

    //LFO 1 Delay Time
    //min: 0, max: 100, default: 50
    const static int lfo_1_delay_time = 1072;

    //FreeRun or KeySync of LFO 1
    //min: 0, max: 1, default: 0
    const static int freerun_or_keysync_of_lfo_1 = 1073;

    //MIDI Tempo Sync of LFO 1 Rate
    //min: 0, max: 1, default: 0
    const static int midi_tempo_sync_of_lfo_1_rate = 1074;

    //Velocity Scaling of LFO 1 Rate
    //min: 0, max: 100, default: 50
    const static int velocity_scaling_of_lfo_1_rate = 1075;

    //These variables store the most recenty recorded values
    //of each of the parameters, for recording and detection
    AudioUnitParameterValue previous_easy_edit_effect_strength;
    AudioUnitParameterValue previous_easy_edit_timbre_brightness;
    AudioUnitParameterValue previous_easy_edit_timbre_harmonic;
    AudioUnitParameterValue previous_easy_edit_timbre_detune;
    AudioUnitParameterValue previous_easy_edit_timbre_env_amount;
    AudioUnitParameterValue previous_easy_edit_timbre_velocity_sens_;
    AudioUnitParameterValue previous_easy_edit_timbre_envelope_attack;
    AudioUnitParameterValue previous_easy_edit_timbre_envelope_decay;
    AudioUnitParameterValue previous_easy_edit_timbreenvelope_sustain;
    AudioUnitParameterValue previous_easy_edit_timbreenvelope_release;
    AudioUnitParameterValue previous_easy_edit_lfo_rate;
    AudioUnitParameterValue previous_easy_edit_lfo_vibrato;
    AudioUnitParameterValue previous_easy_edit_lfo_timbre;
    AudioUnitParameterValue previous_easy_edit_lfo_tremolo;
    AudioUnitParameterValue previous_easy_edit_output_volume;
    AudioUnitParameterValue previous_easy_edit_output_stereo_width;
    AudioUnitParameterValue previous_easy_edit_output_velocity_sens_;
    AudioUnitParameterValue previous_easy_edit_volume_envelope_attack;
    AudioUnitParameterValue previous_easy_edit_volume_envelope_decay;
    AudioUnitParameterValue previous_easy_edit_volumeenvelope_sustain;
    AudioUnitParameterValue previous_easy_edit_volumeenvelope_release;
    AudioUnitParameterValue previous_morph_x;
    AudioUnitParameterValue previous_morph_y;
    AudioUnitParameterValue previous_morph_random_x;
    AudioUnitParameterValue previous_morph_random_y;
    AudioUnitParameterValue previous_morph_random_seed;
    AudioUnitParameterValue previous_effects_amount_bl;
    AudioUnitParameterValue previous_effects_amount_br;
    AudioUnitParameterValue previous_effects_amount_tr;
    AudioUnitParameterValue previous_effects_amount_tl;
    AudioUnitParameterValue previous_overdrive_on_off;
    AudioUnitParameterValue previous_overdrive_drive;
    AudioUnitParameterValue previous_overdrive_tone;
    AudioUnitParameterValue previous_overdrive_bass;
    AudioUnitParameterValue previous_overdrive_volume;
    AudioUnitParameterValue previous_tubeamp_on_off;
    AudioUnitParameterValue previous_tubeamp_drive;
    AudioUnitParameterValue previous_tubeamp_volume;
    AudioUnitParameterValue previous_cabinet_on_off;
    AudioUnitParameterValue previous_cabinet_type;
    AudioUnitParameterValue previous_cabinet_size;
    AudioUnitParameterValue previous_cabinet_air;
    AudioUnitParameterValue previous_cabinet_bass;
    AudioUnitParameterValue previous_cabinet_treble;
    AudioUnitParameterValue previous_shelfeq_on_off;
    AudioUnitParameterValue previous_shelfeq_low_frequency;
    AudioUnitParameterValue previous_shelfeq_low_gain;
    AudioUnitParameterValue previous_shelfeq_high_frequency;
    AudioUnitParameterValue previous_shelfeq_high_gain;
    AudioUnitParameterValue previous_shelfeq_volume;
    AudioUnitParameterValue previous_peakeq_on_off;
    AudioUnitParameterValue previous_peakeq_frequency_1;
    AudioUnitParameterValue previous_peakeq_gain_1;
    AudioUnitParameterValue previous_peakeq_quality_1;
    AudioUnitParameterValue previous_peakeq_frequency_2;
    AudioUnitParameterValue previous_peakeq_gain_2;
    AudioUnitParameterValue previous_peakeq_quality_2;
    AudioUnitParameterValue previous_peakeq_volume;
    AudioUnitParameterValue previous_talkwah_on_off;
    AudioUnitParameterValue previous_talkwah_mouth;
    AudioUnitParameterValue previous_talkwah_modwheel;
    AudioUnitParameterValue previous_talkwah_size;
    AudioUnitParameterValue previous_talkwah_bright;
    AudioUnitParameterValue previous_phaser_on_off;
    AudioUnitParameterValue previous_phaser_modulation_rate;
    AudioUnitParameterValue previous_phaser_color;
    AudioUnitParameterValue previous_phaser_rotate;
    AudioUnitParameterValue previous_phaser_sweep_minimum;
    AudioUnitParameterValue previous_phaser_sweep_maximum;
    AudioUnitParameterValue previous_phaser_midi_tempo_sync;
    AudioUnitParameterValue previous_phaser_dry_wet;
    AudioUnitParameterValue previous_phaser_invert;
    AudioUnitParameterValue previous_phaser_notches;
    AudioUnitParameterValue previous_flanger_on_off;
    AudioUnitParameterValue previous_flanger_modulation_rate;
    AudioUnitParameterValue previous_flanger_static;
    AudioUnitParameterValue previous_flanger_modulation_depth;
    AudioUnitParameterValue previous_flanger_color;
    AudioUnitParameterValue previous_flanger_rotate;
    AudioUnitParameterValue previous_flanger_midi_tempo_sync;
    AudioUnitParameterValue previous_flanger_invert;
    AudioUnitParameterValue previous_flanger_dry_wet;
    AudioUnitParameterValue previous_tremolo_on_off;
    AudioUnitParameterValue previous_tremolo_rate;
    AudioUnitParameterValue previous_tremolo_intensity;
    AudioUnitParameterValue previous_tremolo_midi_tempo_sync;
    AudioUnitParameterValue previous_tremolo_stereo_panning;
    AudioUnitParameterValue previous_tremolo_pulse_width;
    AudioUnitParameterValue previous_tremolo_attack;
    AudioUnitParameterValue previous_tremolo_decay;
    AudioUnitParameterValue previous_reverb_on_off;
    AudioUnitParameterValue previous_reverb_dry_wet;
    AudioUnitParameterValue previous_reverb_bright;
    AudioUnitParameterValue previous_reverb_roomsize;
    AudioUnitParameterValue previous_reverb_treble;
    AudioUnitParameterValue previous_psychedelay_on_off;
    AudioUnitParameterValue previous_psychedelay_dry_wet;
    AudioUnitParameterValue previous_psychedelay_delay_time;
    AudioUnitParameterValue previous_psychedelay_reverse_delay;
    AudioUnitParameterValue previous_psychedelay_delay_detune;
    AudioUnitParameterValue previous_psychedelay_feedback;
    AudioUnitParameterValue previous_psychedelay_delay_pitch_shift;
    AudioUnitParameterValue previous_psychedelay_midi_tempo_sync;
    AudioUnitParameterValue previous_psychedelay_stereo;
    AudioUnitParameterValue previous_delay_delay_time;
    AudioUnitParameterValue previous_delay_diffusion;
    AudioUnitParameterValue previous_delay_modulation_depth;
    AudioUnitParameterValue previous_delay_feedback;
    AudioUnitParameterValue previous_delay_high_cut;
    AudioUnitParameterValue previous_delay_low_cut;
    AudioUnitParameterValue previous_delay_invert;
    AudioUnitParameterValue previous_delay_on_off;
    AudioUnitParameterValue previous_delay_dry_wet;
    AudioUnitParameterValue previous_delay_modulation_rate;
    AudioUnitParameterValue previous_delay_sync_delays;
    AudioUnitParameterValue previous_delay_midi_tempo_sync;
    AudioUnitParameterValue previous_master_volume;
    AudioUnitParameterValue previous_input_volume;
    AudioUnitParameterValue previous_master_tune;
    AudioUnitParameterValue previous_pitch_transpose;
    AudioUnitParameterValue previous_unison_detune;
    AudioUnitParameterValue previous_unison_mono;
    AudioUnitParameterValue previous_unison_pan;
    AudioUnitParameterValue previous_portamento_on_off;
    AudioUnitParameterValue previous_portamento_auto;
    AudioUnitParameterValue previous_portamento_time;
    AudioUnitParameterValue previous_analog_quality_bl;
    AudioUnitParameterValue previous_analog_quality_br;
    AudioUnitParameterValue previous_analog_quality_tr;
    AudioUnitParameterValue previous_analog_quality_tl;
    AudioUnitParameterValue previous_digital_quality_bl;
    AudioUnitParameterValue previous_digital_quality_br;
    AudioUnitParameterValue previous_digital_quality_tr;
    AudioUnitParameterValue previous_digital_quality_tl;
    AudioUnitParameterValue previous_arpeggiator_on;
    AudioUnitParameterValue previous_arpeggiator_note_length;
    AudioUnitParameterValue previous_arpeggiator_fixed_velocity;
    AudioUnitParameterValue previous_arpeggiator_velocity;
    AudioUnitParameterValue previous_arpeggiator_accent;
    AudioUnitParameterValue previous_arpeggiator_shuffle;
    AudioUnitParameterValue previous_arpeggiator_hold;
    AudioUnitParameterValue previous_arpeggiator_rotate_right;
    AudioUnitParameterValue previous_arpeggiator_rotate_left;
    AudioUnitParameterValue previous_arpeggiator_number_of_steps;
    AudioUnitParameterValue previous_arpeggiator_mode;
    AudioUnitParameterValue previous_arpeggiator_down;
    AudioUnitParameterValue previous_arpeggiator_1_shot;
    AudioUnitParameterValue previous_arpeggiator_tempo;
    AudioUnitParameterValue previous_arpeggiator_tripplets;
    AudioUnitParameterValue previous_arpeggiator_dotted;
    AudioUnitParameterValue previous_arpeggiator_key_sync;
    AudioUnitParameterValue previous_arpeggiator_bpm_sync;
    AudioUnitParameterValue previous_arpeggiator_bpm;
    AudioUnitParameterValue previous_arpeggiator_split_on;
    AudioUnitParameterValue previous_arpeggiator_split_note;
    AudioUnitParameterValue previous_arpeggiator_split_bass;
    AudioUnitParameterValue previous_microtune_root_note;
    AudioUnitParameterValue previous_microtuning_of_note_c_;
    AudioUnitParameterValue previous_microtuning_of_note_c_sharp;
    AudioUnitParameterValue previous_microtuning_of_note_d_;
    AudioUnitParameterValue previous_microtuning_of_note_d_sharp;
    AudioUnitParameterValue previous_microtuning_of_note_e_;
    AudioUnitParameterValue previous_microtuning_of_note_f_;
    AudioUnitParameterValue previous_microtuning_of_note_f_sharp;
    AudioUnitParameterValue previous_microtuning_of_note_g_;
    AudioUnitParameterValue previous_microtuning_of_note_g_sharp;
    AudioUnitParameterValue previous_microtuning_of_note_a_;
    AudioUnitParameterValue previous_microtuning_of_note_a_sharp;
    AudioUnitParameterValue previous_microtuning_of_note_h_;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_a_bl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_a_br;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_a_tr;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_a_tl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_b_bl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_b_br;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_b_tr;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_b_tl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_c_bl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_c_br;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_c_tr;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_c_tl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_d_bl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_d_br;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_d_tr;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_d_tl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_e_bl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_e_br;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_e_tr;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_e_tl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_f_bl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_f_br;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_f_tr;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_f_tl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_x_bl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_x_br;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_x_tr;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_x_tl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_z_bl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_z_br;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_z_tr;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_op_z_tl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_out_bl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_out_br;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_out_tr;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_out_tl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_pan_bl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_pan_br;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_pan_tr;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_pan_tl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_in_bl;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_in_br;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_in_tr;
    AudioUnitParameterValue previous_fm_matrix_op_a_GT_in_tl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_a_bl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_a_br;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_a_tr;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_a_tl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_b_bl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_b_br;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_b_tr;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_b_tl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_c_bl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_c_br;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_c_tr;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_c_tl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_d_bl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_d_br;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_d_tr;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_d_tl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_e_bl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_e_br;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_e_tr;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_e_tl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_f_bl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_f_br;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_f_tr;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_f_tl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_x_bl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_x_br;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_x_tr;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_x_tl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_z_bl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_z_br;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_z_tr;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_op_z_tl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_out_bl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_out_br;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_out_tr;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_out_tl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_pan_bl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_pan_br;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_pan_tr;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_pan_tl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_in_bl;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_in_br;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_in_tr;
    AudioUnitParameterValue previous_fm_matrix_op_b_GT_in_tl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_a_bl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_a_br;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_a_tr;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_a_tl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_b_bl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_b_br;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_b_tr;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_b_tl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_c_bl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_c_br;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_c_tr;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_c_tl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_d_bl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_d_br;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_d_tr;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_d_tl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_e_bl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_e_br;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_e_tr;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_e_tl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_f_bl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_f_br;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_f_tr;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_f_tl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_x_bl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_x_br;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_x_tr;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_x_tl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_z_bl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_z_br;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_z_tr;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_op_z_tl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_out_bl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_out_br;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_out_tr;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_out_tl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_pan_bl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_pan_br;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_pan_tr;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_pan_tl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_in_bl;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_in_br;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_in_tr;
    AudioUnitParameterValue previous_fm_matrix_op_c_GT_in_tl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_a_bl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_a_br;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_a_tr;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_a_tl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_b_bl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_b_br;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_b_tr;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_b_tl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_c_bl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_c_br;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_c_tr;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_c_tl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_d_bl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_d_br;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_d_tr;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_d_tl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_e_bl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_e_br;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_e_tr;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_e_tl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_f_bl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_f_br;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_f_tr;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_f_tl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_x_bl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_x_br;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_x_tr;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_x_tl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_z_bl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_z_br;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_z_tr;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_op_z_tl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_out_bl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_out_br;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_out_tr;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_out_tl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_pan_bl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_pan_br;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_pan_tr;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_pan_tl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_in_bl;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_in_br;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_in_tr;
    AudioUnitParameterValue previous_fm_matrix_op_d_GT_in_tl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_a_bl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_a_br;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_a_tr;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_a_tl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_b_bl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_b_br;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_b_tr;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_b_tl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_c_bl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_c_br;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_c_tr;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_c_tl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_d_bl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_d_br;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_d_tr;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_d_tl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_e_bl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_e_br;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_e_tr;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_e_tl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_f_bl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_f_br;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_f_tr;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_f_tl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_x_bl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_x_br;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_x_tr;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_x_tl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_z_bl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_z_br;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_z_tr;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_op_z_tl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_out_bl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_out_br;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_out_tr;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_out_tl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_pan_bl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_pan_br;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_pan_tr;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_pan_tl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_in_bl;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_in_br;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_in_tr;
    AudioUnitParameterValue previous_fm_matrix_op_e_GT_in_tl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_a_bl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_a_br;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_a_tr;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_a_tl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_b_bl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_b_br;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_b_tr;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_b_tl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_c_bl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_c_br;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_c_tr;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_c_tl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_d_bl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_d_br;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_d_tr;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_d_tl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_e_bl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_e_br;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_e_tr;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_e_tl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_f_bl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_f_br;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_f_tr;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_f_tl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_x_bl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_x_br;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_x_tr;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_x_tl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_z_bl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_z_br;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_z_tr;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_op_z_tl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_out_bl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_out_br;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_out_tr;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_out_tl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_pan_bl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_pan_br;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_pan_tr;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_pan_tl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_in_bl;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_in_br;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_in_tr;
    AudioUnitParameterValue previous_fm_matrix_op_f_GT_in_tl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_a_bl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_a_br;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_a_tr;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_a_tl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_b_bl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_b_br;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_b_tr;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_b_tl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_c_bl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_c_br;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_c_tr;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_c_tl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_d_bl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_d_br;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_d_tr;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_d_tl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_e_bl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_e_br;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_e_tr;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_e_tl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_f_bl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_f_br;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_f_tr;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_f_tl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_z_bl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_z_br;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_z_tr;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_op_z_tl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_out_bl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_out_br;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_out_tr;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_out_tl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_pan_bl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_pan_br;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_pan_tr;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_pan_tl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_in_bl;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_in_br;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_in_tr;
    AudioUnitParameterValue previous_fm_matrix_op_x_GT_in_tl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_a_bl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_a_br;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_a_tr;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_a_tl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_b_bl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_b_br;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_b_tr;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_b_tl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_c_bl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_c_br;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_c_tr;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_c_tl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_d_bl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_d_br;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_d_tr;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_d_tl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_e_bl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_e_br;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_e_tr;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_e_tl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_f_bl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_f_br;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_f_tr;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_f_tl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_x_bl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_x_br;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_x_tr;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_op_x_tl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_out_bl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_out_br;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_out_tr;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_out_tl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_pan_bl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_pan_br;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_pan_tr;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_pan_tl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_in_bl;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_in_br;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_in_tr;
    AudioUnitParameterValue previous_fm_matrix_op_z_GT_in_tl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_a_bl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_a_br;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_a_tr;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_a_tl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_b_bl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_b_br;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_b_tr;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_b_tl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_c_bl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_c_br;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_c_tr;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_c_tl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_d_bl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_d_br;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_d_tr;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_d_tl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_e_bl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_e_br;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_e_tr;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_e_tl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_f_bl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_f_br;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_f_tr;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_f_tl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_x_bl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_x_br;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_x_tr;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_x_tl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_z_bl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_z_br;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_z_tr;
    AudioUnitParameterValue previous_fm_matrix_in_GT_op_z_tl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_out_bl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_out_br;
    AudioUnitParameterValue previous_fm_matrix_in_GT_out_tr;
    AudioUnitParameterValue previous_fm_matrix_in_GT_out_tl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_pan_bl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_pan_br;
    AudioUnitParameterValue previous_fm_matrix_in_GT_pan_tr;
    AudioUnitParameterValue previous_fm_matrix_in_GT_pan_tl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_in_bl;
    AudioUnitParameterValue previous_fm_matrix_in_GT_in_br;
    AudioUnitParameterValue previous_fm_matrix_in_GT_in_tr;
    AudioUnitParameterValue previous_fm_matrix_in_GT_in_tl;
    AudioUnitParameterValue previous_filter_bypass;
    AudioUnitParameterValue previous_saturator_bypass;
    AudioUnitParameterValue previous_pitch_envelope_amount;
    AudioUnitParameterValue previous_stretch_octaves;
    AudioUnitParameterValue previous_pitchbend_mode;
    AudioUnitParameterValue previous_input_on_off_bl;
    AudioUnitParameterValue previous_input_on_off_br;
    AudioUnitParameterValue previous_input_on_off_tr;
    AudioUnitParameterValue previous_input_on_off_tl;
    AudioUnitParameterValue previous_op_a_envelope_tempo_sync;
    AudioUnitParameterValue previous_op_b_envelope_tempo_sync;
    AudioUnitParameterValue previous_op_c_envelope_tempo_sync;
    AudioUnitParameterValue previous_op_d_envelope_tempo_sync;
    AudioUnitParameterValue previous_op_e_envelope_tempo_sync;
    AudioUnitParameterValue previous_op_f_envelope_tempo_sync;
    AudioUnitParameterValue previous_op_x_envelope_tempo_sync;
    AudioUnitParameterValue previous_op_z_envelope_tempo_sync;
    AudioUnitParameterValue previous_pitch_envelope_tempo_sync;
    AudioUnitParameterValue previous_freerun_or_keysync_of_op_a;
    AudioUnitParameterValue previous_freerun_or_keysync_of_op_b;
    AudioUnitParameterValue previous_freerun_or_keysync_of_op_c;
    AudioUnitParameterValue previous_freerun_or_keysync_of_op_d;
    AudioUnitParameterValue previous_freerun_or_keysync_of_op_e;
    AudioUnitParameterValue previous_freerun_or_keysync_of_op_f;
    AudioUnitParameterValue previous_freerun_or_keysync_of_op_x;
    AudioUnitParameterValue previous_freerun_or_keysync_of_op_z;
    AudioUnitParameterValue previous_freerun_or_keysync_of_pitch;
    AudioUnitParameterValue previous_op_a_velocity_sensivity;
    AudioUnitParameterValue previous_op_b_velocity_sensivity;
    AudioUnitParameterValue previous_op_c_velocity_sensivity;
    AudioUnitParameterValue previous_op_d_velocity_sensivity;
    AudioUnitParameterValue previous_op_e_velocity_sensivity;
    AudioUnitParameterValue previous_op_f_velocity_sensivity;
    AudioUnitParameterValue previous_op_x_velocity_sensivity;
    AudioUnitParameterValue previous_op_z_velocity_sensivity;
    AudioUnitParameterValue previous_pitch_velocity_sensivity;
    AudioUnitParameterValue previous_op_a_envelope_keyboard_scaling;
    AudioUnitParameterValue previous_op_b_envelope_keyboard_scaling;
    AudioUnitParameterValue previous_op_c_envelope_keyboard_scaling;
    AudioUnitParameterValue previous_op_d_envelope_keyboard_scaling;
    AudioUnitParameterValue previous_op_e_envelope_keyboard_scaling;
    AudioUnitParameterValue previous_op_f_envelope_keyboard_scaling;
    AudioUnitParameterValue previous_op_x_envelope_keyboard_scaling;
    AudioUnitParameterValue previous_op_z_envelope_keyboard_scaling;
    AudioUnitParameterValue previous_pitch_envelope_keyboard_scaling;
    AudioUnitParameterValue previous_op_a_envelope_velocity_scaling;
    AudioUnitParameterValue previous_op_b_envelope_velocity_scaling;
    AudioUnitParameterValue previous_op_c_envelope_velocity_scaling;
    AudioUnitParameterValue previous_op_d_envelope_velocity_scaling;
    AudioUnitParameterValue previous_op_e_envelope_velocity_scaling;
    AudioUnitParameterValue previous_op_f_envelope_velocity_scaling;
    AudioUnitParameterValue previous_op_x_envelope_velocity_scaling;
    AudioUnitParameterValue previous_op_z_envelope_velocity_scaling;
    AudioUnitParameterValue previous_pitch_envelope_velocity_scaling;
    AudioUnitParameterValue previous_op_a_wave_invert;
    AudioUnitParameterValue previous_op_b_wave_invert;
    AudioUnitParameterValue previous_op_c_wave_invert;
    AudioUnitParameterValue previous_op_d_wave_invert;
    AudioUnitParameterValue previous_op_e_wave_invert;
    AudioUnitParameterValue previous_op_f_wave_invert;
    AudioUnitParameterValue previous_op_x_wave_invert;
    AudioUnitParameterValue previous_op_z_wave_invert;
    AudioUnitParameterValue previous_pitch_wave_invert;
    AudioUnitParameterValue previous_op_a_pitch_envelope;
    AudioUnitParameterValue previous_op_b_pitch_envelope;
    AudioUnitParameterValue previous_op_c_pitch_envelope;
    AudioUnitParameterValue previous_op_d_pitch_envelope;
    AudioUnitParameterValue previous_op_e_pitch_envelope;
    AudioUnitParameterValue previous_op_f_pitch_envelope;
    AudioUnitParameterValue previous_op_x_pitch_envelope;
    AudioUnitParameterValue previous_op_z_pitch_envelope;
    AudioUnitParameterValue previous_pitch_pitch_envelope;
    AudioUnitParameterValue previous_op_a_envelope_mode_loop;
    AudioUnitParameterValue previous_op_b_envelope_mode_loop;
    AudioUnitParameterValue previous_op_c_envelope_mode_loop;
    AudioUnitParameterValue previous_op_d_envelope_mode_loop;
    AudioUnitParameterValue previous_op_e_envelope_mode_loop;
    AudioUnitParameterValue previous_op_f_envelope_mode_loop;
    AudioUnitParameterValue previous_op_x_envelope_mode_loop;
    AudioUnitParameterValue previous_op_z_envelope_mode_loop;
    AudioUnitParameterValue previous_pitch_envelope_mode_loop;
    AudioUnitParameterValue previous_op_a_envelope_mode_release;
    AudioUnitParameterValue previous_op_b_envelope_mode_release;
    AudioUnitParameterValue previous_op_c_envelope_mode_release;
    AudioUnitParameterValue previous_op_d_envelope_mode_release;
    AudioUnitParameterValue previous_op_e_envelope_mode_release;
    AudioUnitParameterValue previous_op_f_envelope_mode_release;
    AudioUnitParameterValue previous_op_x_envelope_mode_release;
    AudioUnitParameterValue previous_op_z_envelope_mode_release;
    AudioUnitParameterValue previous_pitch_envelope_mode_release;
    AudioUnitParameterValue previous_op_a_on_off_bl;
    AudioUnitParameterValue previous_op_a_on_off_br;
    AudioUnitParameterValue previous_op_a_on_off_tr;
    AudioUnitParameterValue previous_op_a_on_off_tl;
    AudioUnitParameterValue previous_op_b_on_off_bl;
    AudioUnitParameterValue previous_op_b_on_off_br;
    AudioUnitParameterValue previous_op_b_on_off_tr;
    AudioUnitParameterValue previous_op_b_on_off_tl;
    AudioUnitParameterValue previous_op_c_on_off_bl;
    AudioUnitParameterValue previous_op_c_on_off_br;
    AudioUnitParameterValue previous_op_c_on_off_tr;
    AudioUnitParameterValue previous_op_c_on_off_tl;
    AudioUnitParameterValue previous_op_d_on_off_bl;
    AudioUnitParameterValue previous_op_d_on_off_br;
    AudioUnitParameterValue previous_op_d_on_off_tr;
    AudioUnitParameterValue previous_op_d_on_off_tl;
    AudioUnitParameterValue previous_op_e_on_off_bl;
    AudioUnitParameterValue previous_op_e_on_off_br;
    AudioUnitParameterValue previous_op_e_on_off_tr;
    AudioUnitParameterValue previous_op_e_on_off_tl;
    AudioUnitParameterValue previous_op_f_on_off_bl;
    AudioUnitParameterValue previous_op_f_on_off_br;
    AudioUnitParameterValue previous_op_f_on_off_tr;
    AudioUnitParameterValue previous_op_f_on_off_tl;
    AudioUnitParameterValue previous_op_x_on_off_bl;
    AudioUnitParameterValue previous_op_x_on_off_br;
    AudioUnitParameterValue previous_op_x_on_off_tr;
    AudioUnitParameterValue previous_op_x_on_off_tl;
    AudioUnitParameterValue previous_op_z_on_off_bl;
    AudioUnitParameterValue previous_op_z_on_off_br;
    AudioUnitParameterValue previous_op_z_on_off_tr;
    AudioUnitParameterValue previous_op_z_on_off_tl;
    AudioUnitParameterValue previous_pitch_on_off_bl;
    AudioUnitParameterValue previous_pitch_on_off_br;
    AudioUnitParameterValue previous_pitch_on_off_tr;
    AudioUnitParameterValue previous_pitch_on_off_tl;
    AudioUnitParameterValue previous_op_a_output_level_bl;
    AudioUnitParameterValue previous_op_a_output_level_br;
    AudioUnitParameterValue previous_op_a_output_level_tr;
    AudioUnitParameterValue previous_op_a_output_level_tl;
    AudioUnitParameterValue previous_op_b_output_level_bl;
    AudioUnitParameterValue previous_op_b_output_level_br;
    AudioUnitParameterValue previous_op_b_output_level_tr;
    AudioUnitParameterValue previous_op_b_output_level_tl;
    AudioUnitParameterValue previous_op_c_output_level_bl;
    AudioUnitParameterValue previous_op_c_output_level_br;
    AudioUnitParameterValue previous_op_c_output_level_tr;
    AudioUnitParameterValue previous_op_c_output_level_tl;
    AudioUnitParameterValue previous_op_d_output_level_bl;
    AudioUnitParameterValue previous_op_d_output_level_br;
    AudioUnitParameterValue previous_op_d_output_level_tr;
    AudioUnitParameterValue previous_op_d_output_level_tl;
    AudioUnitParameterValue previous_op_e_output_level_bl;
    AudioUnitParameterValue previous_op_e_output_level_br;
    AudioUnitParameterValue previous_op_e_output_level_tr;
    AudioUnitParameterValue previous_op_e_output_level_tl;
    AudioUnitParameterValue previous_op_f_output_level_bl;
    AudioUnitParameterValue previous_op_f_output_level_br;
    AudioUnitParameterValue previous_op_f_output_level_tr;
    AudioUnitParameterValue previous_op_f_output_level_tl;
    AudioUnitParameterValue previous_op_x_output_level_bl;
    AudioUnitParameterValue previous_op_x_output_level_br;
    AudioUnitParameterValue previous_op_x_output_level_tr;
    AudioUnitParameterValue previous_op_x_output_level_tl;
    AudioUnitParameterValue previous_op_z_output_level_bl;
    AudioUnitParameterValue previous_op_z_output_level_br;
    AudioUnitParameterValue previous_op_z_output_level_tr;
    AudioUnitParameterValue previous_op_z_output_level_tl;
    AudioUnitParameterValue previous_pitch_output_level_bl;
    AudioUnitParameterValue previous_pitch_output_level_br;
    AudioUnitParameterValue previous_pitch_output_level_tr;
    AudioUnitParameterValue previous_pitch_output_level_tl;
    AudioUnitParameterValue previous_op_a_waveformbl;
    AudioUnitParameterValue previous_op_a_waveformbr;
    AudioUnitParameterValue previous_op_a_waveformtr;
    AudioUnitParameterValue previous_op_a_waveformtl;
    AudioUnitParameterValue previous_op_b_waveformbl;
    AudioUnitParameterValue previous_op_b_waveformbr;
    AudioUnitParameterValue previous_op_b_waveformtr;
    AudioUnitParameterValue previous_op_b_waveformtl;
    AudioUnitParameterValue previous_op_c_waveformbl;
    AudioUnitParameterValue previous_op_c_waveformbr;
    AudioUnitParameterValue previous_op_c_waveformtr;
    AudioUnitParameterValue previous_op_c_waveformtl;
    AudioUnitParameterValue previous_op_d_waveformbl;
    AudioUnitParameterValue previous_op_d_waveformbr;
    AudioUnitParameterValue previous_op_d_waveformtr;
    AudioUnitParameterValue previous_op_d_waveformtl;
    AudioUnitParameterValue previous_op_e_waveformbl;
    AudioUnitParameterValue previous_op_e_waveformbr;
    AudioUnitParameterValue previous_op_e_waveformtr;
    AudioUnitParameterValue previous_op_e_waveformtl;
    AudioUnitParameterValue previous_op_f_waveformbl;
    AudioUnitParameterValue previous_op_f_waveformbr;
    AudioUnitParameterValue previous_op_f_waveformtr;
    AudioUnitParameterValue previous_op_f_waveformtl;
    AudioUnitParameterValue previous_op_x_waveformbl;
    AudioUnitParameterValue previous_op_x_waveformbr;
    AudioUnitParameterValue previous_op_x_waveformtr;
    AudioUnitParameterValue previous_op_x_waveformtl;
    AudioUnitParameterValue previous_op_z_waveformbl;
    AudioUnitParameterValue previous_op_z_waveformbr;
    AudioUnitParameterValue previous_op_z_waveformtr;
    AudioUnitParameterValue previous_op_z_waveformtl;
    AudioUnitParameterValue previous_pitch_waveformbl;
    AudioUnitParameterValue previous_pitch_waveformbr;
    AudioUnitParameterValue previous_pitch_waveformtr;
    AudioUnitParameterValue previous_pitch_waveformtl;
    AudioUnitParameterValue previous_op_a_frequency_ratiobl;
    AudioUnitParameterValue previous_op_a_frequency_ratiobr;
    AudioUnitParameterValue previous_op_a_frequency_ratiotr;
    AudioUnitParameterValue previous_op_a_frequency_ratiotl;
    AudioUnitParameterValue previous_op_b_frequency_ratiobl;
    AudioUnitParameterValue previous_op_b_frequency_ratiobr;
    AudioUnitParameterValue previous_op_b_frequency_ratiotr;
    AudioUnitParameterValue previous_op_b_frequency_ratiotl;
    AudioUnitParameterValue previous_op_c_frequency_ratiobl;
    AudioUnitParameterValue previous_op_c_frequency_ratiobr;
    AudioUnitParameterValue previous_op_c_frequency_ratiotr;
    AudioUnitParameterValue previous_op_c_frequency_ratiotl;
    AudioUnitParameterValue previous_op_d_frequency_ratiobl;
    AudioUnitParameterValue previous_op_d_frequency_ratiobr;
    AudioUnitParameterValue previous_op_d_frequency_ratiotr;
    AudioUnitParameterValue previous_op_d_frequency_ratiotl;
    AudioUnitParameterValue previous_op_e_frequency_ratiobl;
    AudioUnitParameterValue previous_op_e_frequency_ratiobr;
    AudioUnitParameterValue previous_op_e_frequency_ratiotr;
    AudioUnitParameterValue previous_op_e_frequency_ratiotl;
    AudioUnitParameterValue previous_op_f_frequency_ratiobl;
    AudioUnitParameterValue previous_op_f_frequency_ratiobr;
    AudioUnitParameterValue previous_op_f_frequency_ratiotr;
    AudioUnitParameterValue previous_op_f_frequency_ratiotl;
    AudioUnitParameterValue previous_op_x_frequency_ratiobl;
    AudioUnitParameterValue previous_op_x_frequency_ratiobr;
    AudioUnitParameterValue previous_op_x_frequency_ratiotr;
    AudioUnitParameterValue previous_op_x_frequency_ratiotl;
    AudioUnitParameterValue previous_op_z_frequency_ratiobl;
    AudioUnitParameterValue previous_op_z_frequency_ratiobr;
    AudioUnitParameterValue previous_op_z_frequency_ratiotr;
    AudioUnitParameterValue previous_op_z_frequency_ratiotl;
    AudioUnitParameterValue previous_pitch_frequency_ratiobl;
    AudioUnitParameterValue previous_pitch_frequency_ratiobr;
    AudioUnitParameterValue previous_pitch_frequency_ratiotr;
    AudioUnitParameterValue previous_pitch_frequency_ratiotl;
    AudioUnitParameterValue previous_op_a_frequency_offsetbl;
    AudioUnitParameterValue previous_op_a_frequency_offsetbr;
    AudioUnitParameterValue previous_op_a_frequency_offsettr;
    AudioUnitParameterValue previous_op_a_frequency_offsettl;
    AudioUnitParameterValue previous_op_b_frequency_offsetbl;
    AudioUnitParameterValue previous_op_b_frequency_offsetbr;
    AudioUnitParameterValue previous_op_b_frequency_offsettr;
    AudioUnitParameterValue previous_op_b_frequency_offsettl;
    AudioUnitParameterValue previous_op_c_frequency_offsetbl;
    AudioUnitParameterValue previous_op_c_frequency_offsetbr;
    AudioUnitParameterValue previous_op_c_frequency_offsettr;
    AudioUnitParameterValue previous_op_c_frequency_offsettl;
    AudioUnitParameterValue previous_op_d_frequency_offsetbl;
    AudioUnitParameterValue previous_op_d_frequency_offsetbr;
    AudioUnitParameterValue previous_op_d_frequency_offsettr;
    AudioUnitParameterValue previous_op_d_frequency_offsettl;
    AudioUnitParameterValue previous_op_e_frequency_offsetbl;
    AudioUnitParameterValue previous_op_e_frequency_offsetbr;
    AudioUnitParameterValue previous_op_e_frequency_offsettr;
    AudioUnitParameterValue previous_op_e_frequency_offsettl;
    AudioUnitParameterValue previous_op_f_frequency_offsetbl;
    AudioUnitParameterValue previous_op_f_frequency_offsetbr;
    AudioUnitParameterValue previous_op_f_frequency_offsettr;
    AudioUnitParameterValue previous_op_f_frequency_offsettl;
    AudioUnitParameterValue previous_op_x_frequency_offsetbl;
    AudioUnitParameterValue previous_op_x_frequency_offsetbr;
    AudioUnitParameterValue previous_op_x_frequency_offsettr;
    AudioUnitParameterValue previous_op_x_frequency_offsettl;
    AudioUnitParameterValue previous_op_z_frequency_offsetbl;
    AudioUnitParameterValue previous_op_z_frequency_offsetbr;
    AudioUnitParameterValue previous_op_z_frequency_offsettr;
    AudioUnitParameterValue previous_op_z_frequency_offsettl;
    AudioUnitParameterValue previous_pitch_frequency_offsetbl;
    AudioUnitParameterValue previous_pitch_frequency_offsetbr;
    AudioUnitParameterValue previous_pitch_frequency_offsettr;
    AudioUnitParameterValue previous_pitch_frequency_offsettl;
    AudioUnitParameterValue previous_filt_routing_serial_parallel_bl;
    AudioUnitParameterValue previous_filt_routing_serial_parallel_br;
    AudioUnitParameterValue previous_filt_routing_serial_parallel_tr;
    AudioUnitParameterValue previous_filt_routing_serial_parallel_tl;
    AudioUnitParameterValue previous_filter_routing_mix_bl;
    AudioUnitParameterValue previous_filter_routing_mix_br;
    AudioUnitParameterValue previous_filter_routing_mix_tr;
    AudioUnitParameterValue previous_filter_routing_mix_tl;
    AudioUnitParameterValue previous_filter_1_mode_bl;
    AudioUnitParameterValue previous_filter_1_mode_br;
    AudioUnitParameterValue previous_filter_1_mode_tr;
    AudioUnitParameterValue previous_filter_1_mode_tl;
    AudioUnitParameterValue previous_filter_2_mode_bl;
    AudioUnitParameterValue previous_filter_2_mode_br;
    AudioUnitParameterValue previous_filter_2_mode_tr;
    AudioUnitParameterValue previous_filter_2_mode_tl;
    AudioUnitParameterValue previous_filter_cutoff_bl;
    AudioUnitParameterValue previous_filter_cutoff_br;
    AudioUnitParameterValue previous_filter_cutoff_tr;
    AudioUnitParameterValue previous_filter_cutoff_tl;
    AudioUnitParameterValue previous_filter_cutoff_spread_bl;
    AudioUnitParameterValue previous_filter_cutoff_spread_br;
    AudioUnitParameterValue previous_filter_cutoff_spread_tr;
    AudioUnitParameterValue previous_filter_cutoff_spread_tl;
    AudioUnitParameterValue previous_filter_envelope_amount_bl;
    AudioUnitParameterValue previous_filter_envelope_amount_br;
    AudioUnitParameterValue previous_filter_envelope_amount_tr;
    AudioUnitParameterValue previous_filter_envelope_amount_tl;
    AudioUnitParameterValue previous_filter_1_resonance_bl;
    AudioUnitParameterValue previous_filter_1_resonance_br;
    AudioUnitParameterValue previous_filter_1_resonance_tr;
    AudioUnitParameterValue previous_filter_1_resonance_tl;
    AudioUnitParameterValue previous_filter_2_resonance_bl;
    AudioUnitParameterValue previous_filter_2_resonance_br;
    AudioUnitParameterValue previous_filter_2_resonance_tr;
    AudioUnitParameterValue previous_filter_2_resonance_tl;
    AudioUnitParameterValue previous_noise_cutoff_bl;
    AudioUnitParameterValue previous_noise_cutoff_br;
    AudioUnitParameterValue previous_noise_cutoff_tr;
    AudioUnitParameterValue previous_noise_cutoff_tl;
    AudioUnitParameterValue previous_noise_resonance_bl;
    AudioUnitParameterValue previous_noise_resonance_br;
    AudioUnitParameterValue previous_noise_resonance_tr;
    AudioUnitParameterValue previous_noise_resonance_tl;
    AudioUnitParameterValue previous_noise_amplitude_bl;
    AudioUnitParameterValue previous_noise_amplitude_br;
    AudioUnitParameterValue previous_noise_amplitude_tr;
    AudioUnitParameterValue previous_noise_amplitude_tl;
    AudioUnitParameterValue previous_saturator_gain_bl;
    AudioUnitParameterValue previous_saturator_gain_br;
    AudioUnitParameterValue previous_saturator_gain_tr;
    AudioUnitParameterValue previous_saturator_gain_tl;
    AudioUnitParameterValue previous_saturator_level_bl;
    AudioUnitParameterValue previous_saturator_level_br;
    AudioUnitParameterValue previous_saturator_level_tr;
    AudioUnitParameterValue previous_saturator_level_tl;
    AudioUnitParameterValue previous_saturator_asymmetry_bl;
    AudioUnitParameterValue previous_saturator_asymmetry_br;
    AudioUnitParameterValue previous_saturator_asymmetry_tr;
    AudioUnitParameterValue previous_saturator_asymmetry_tl;
    AudioUnitParameterValue previous_op_a_modulation_pitchbend_up;
    AudioUnitParameterValue previous_op_b_modulation_pitchbend_up;
    AudioUnitParameterValue previous_op_c_modulation_pitchbend_up;
    AudioUnitParameterValue previous_op_d_modulation_pitchbend_up;
    AudioUnitParameterValue previous_op_e_modulation_pitchbend_up;
    AudioUnitParameterValue previous_op_f_modulation_pitchbend_up;
    AudioUnitParameterValue previous_op_x_modulation_pitchbend_up;
    AudioUnitParameterValue previous_op_z_modulation_pitchbend_up;
    AudioUnitParameterValue previous_pitch_modulation_pitchbend_up;
    AudioUnitParameterValue previous_op_a_modulation_pitchbend_down;
    AudioUnitParameterValue previous_op_b_modulation_pitchbend_down;
    AudioUnitParameterValue previous_op_c_modulation_pitchbend_down;
    AudioUnitParameterValue previous_op_d_modulation_pitchbend_down;
    AudioUnitParameterValue previous_op_e_modulation_pitchbend_down;
    AudioUnitParameterValue previous_op_f_modulation_pitchbend_down;
    AudioUnitParameterValue previous_op_x_modulation_pitchbend_down;
    AudioUnitParameterValue previous_op_z_modulation_pitchbend_down;
    AudioUnitParameterValue previous_pitch_modulation_pitchbend_down;
    AudioUnitParameterValue previous_op_a_modulation_aftertouch;
    AudioUnitParameterValue previous_op_b_modulation_aftertouch;
    AudioUnitParameterValue previous_op_c_modulation_aftertouch;
    AudioUnitParameterValue previous_op_d_modulation_aftertouch;
    AudioUnitParameterValue previous_op_e_modulation_aftertouch;
    AudioUnitParameterValue previous_op_f_modulation_aftertouch;
    AudioUnitParameterValue previous_op_x_modulation_aftertouch;
    AudioUnitParameterValue previous_op_z_modulation_aftertouch;
    AudioUnitParameterValue previous_pitch_modulation_aftertouch;
    AudioUnitParameterValue previous_op_a_modulation_modwheel;
    AudioUnitParameterValue previous_op_b_modulation_modwheel;
    AudioUnitParameterValue previous_op_c_modulation_modwheel;
    AudioUnitParameterValue previous_op_d_modulation_modwheel;
    AudioUnitParameterValue previous_op_e_modulation_modwheel;
    AudioUnitParameterValue previous_op_f_modulation_modwheel;
    AudioUnitParameterValue previous_op_x_modulation_modwheel;
    AudioUnitParameterValue previous_op_z_modulation_modwheel;
    AudioUnitParameterValue previous_pitch_modulation_modwheel;
    AudioUnitParameterValue previous_op_a_modulation_breath_ctlr;
    AudioUnitParameterValue previous_op_b_modulation_breath_ctlr;
    AudioUnitParameterValue previous_op_c_modulation_breath_ctlr;
    AudioUnitParameterValue previous_op_d_modulation_breath_ctlr;
    AudioUnitParameterValue previous_op_e_modulation_breath_ctlr;
    AudioUnitParameterValue previous_op_f_modulation_breath_ctlr;
    AudioUnitParameterValue previous_op_x_modulation_breath_ctlr;
    AudioUnitParameterValue previous_op_z_modulation_breath_ctlr;
    AudioUnitParameterValue previous_pitch_modulation_breath_ctlr;
    AudioUnitParameterValue previous_op_a_modulation_controller_1;
    AudioUnitParameterValue previous_op_b_modulation_controller_1;
    AudioUnitParameterValue previous_op_c_modulation_controller_1;
    AudioUnitParameterValue previous_op_d_modulation_controller_1;
    AudioUnitParameterValue previous_op_e_modulation_controller_1;
    AudioUnitParameterValue previous_op_f_modulation_controller_1;
    AudioUnitParameterValue previous_op_x_modulation_controller_1;
    AudioUnitParameterValue previous_op_z_modulation_controller_1;
    AudioUnitParameterValue previous_pitch_modulation_controller_1;
    AudioUnitParameterValue previous_op_a_modulation_controller_2;
    AudioUnitParameterValue previous_op_b_modulation_controller_2;
    AudioUnitParameterValue previous_op_c_modulation_controller_2;
    AudioUnitParameterValue previous_op_d_modulation_controller_2;
    AudioUnitParameterValue previous_op_e_modulation_controller_2;
    AudioUnitParameterValue previous_op_f_modulation_controller_2;
    AudioUnitParameterValue previous_op_x_modulation_controller_2;
    AudioUnitParameterValue previous_op_z_modulation_controller_2;
    AudioUnitParameterValue previous_pitch_modulation_controller_2;
    AudioUnitParameterValue previous_op_a_modulation_input_envelope;
    AudioUnitParameterValue previous_op_b_modulation_input_envelope;
    AudioUnitParameterValue previous_op_c_modulation_input_envelope;
    AudioUnitParameterValue previous_op_d_modulation_input_envelope;
    AudioUnitParameterValue previous_op_e_modulation_input_envelope;
    AudioUnitParameterValue previous_op_f_modulation_input_envelope;
    AudioUnitParameterValue previous_op_x_modulation_input_envelope;
    AudioUnitParameterValue previous_op_z_modulation_input_envelope;
    AudioUnitParameterValue previous_pitch_modulation_input_envelope;
    AudioUnitParameterValue previous_op_a_modulation_lfo_1;
    AudioUnitParameterValue previous_op_b_modulation_lfo_1;
    AudioUnitParameterValue previous_op_c_modulation_lfo_1;
    AudioUnitParameterValue previous_op_d_modulation_lfo_1;
    AudioUnitParameterValue previous_op_e_modulation_lfo_1;
    AudioUnitParameterValue previous_op_f_modulation_lfo_1;
    AudioUnitParameterValue previous_op_x_modulation_lfo_1;
    AudioUnitParameterValue previous_op_z_modulation_lfo_1;
    AudioUnitParameterValue previous_pitch_modulation_lfo_1;
    AudioUnitParameterValue previous_op_a_modulation_lfo_1_MULTIPLY_atc;
    AudioUnitParameterValue previous_op_b_modulation_lfo_1_MULTIPLY_atc;
    AudioUnitParameterValue previous_op_c_modulation_lfo_1_MULTIPLY_atc;
    AudioUnitParameterValue previous_op_d_modulation_lfo_1_MULTIPLY_atc;
    AudioUnitParameterValue previous_op_e_modulation_lfo_1_MULTIPLY_atc;
    AudioUnitParameterValue previous_op_f_modulation_lfo_1_MULTIPLY_atc;
    AudioUnitParameterValue previous_op_x_modulation_lfo_1_MULTIPLY_atc;
    AudioUnitParameterValue previous_op_z_modulation_lfo_1_MULTIPLY_atc;
    AudioUnitParameterValue previous_pitch_modulation_lfo_1_MULTIPLY_atc;
    AudioUnitParameterValue previous_op_a_modulation_lfo_1_MULTIPLY_mw;
    AudioUnitParameterValue previous_op_b_modulation_lfo_1_MULTIPLY_mw;
    AudioUnitParameterValue previous_op_c_modulation_lfo_1_MULTIPLY_mw;
    AudioUnitParameterValue previous_op_d_modulation_lfo_1_MULTIPLY_mw;
    AudioUnitParameterValue previous_op_e_modulation_lfo_1_MULTIPLY_mw;
    AudioUnitParameterValue previous_op_f_modulation_lfo_1_MULTIPLY_mw;
    AudioUnitParameterValue previous_op_x_modulation_lfo_1_MULTIPLY_mw;
    AudioUnitParameterValue previous_op_z_modulation_lfo_1_MULTIPLY_mw;
    AudioUnitParameterValue previous_pitch_modulation_lfo_1_MULTIPLY_mw;
    AudioUnitParameterValue previous_op_a_modulation_lfo_1_MULTIPLY_bc;
    AudioUnitParameterValue previous_op_b_modulation_lfo_1_MULTIPLY_bc;
    AudioUnitParameterValue previous_op_c_modulation_lfo_1_MULTIPLY_bc;
    AudioUnitParameterValue previous_op_d_modulation_lfo_1_MULTIPLY_bc;
    AudioUnitParameterValue previous_op_e_modulation_lfo_1_MULTIPLY_bc;
    AudioUnitParameterValue previous_op_f_modulation_lfo_1_MULTIPLY_bc;
    AudioUnitParameterValue previous_op_x_modulation_lfo_1_MULTIPLY_bc;
    AudioUnitParameterValue previous_op_z_modulation_lfo_1_MULTIPLY_bc;
    AudioUnitParameterValue previous_pitch_modulation_lfo_1_MULTIPLY_bc;
    AudioUnitParameterValue previous_op_a_modulation_lfo_1_MULTIPLY_ctrl_1;
    AudioUnitParameterValue previous_op_b_modulation_lfo_1_MULTIPLY_ctrl_1;
    AudioUnitParameterValue previous_op_c_modulation_lfo_1_MULTIPLY_ctrl_1;
    AudioUnitParameterValue previous_op_d_modulation_lfo_1_MULTIPLY_ctrl_1;
    AudioUnitParameterValue previous_op_e_modulation_lfo_1_MULTIPLY_ctrl_1;
    AudioUnitParameterValue previous_op_f_modulation_lfo_1_MULTIPLY_ctrl_1;
    AudioUnitParameterValue previous_op_x_modulation_lfo_1_MULTIPLY_ctrl_1;
    AudioUnitParameterValue previous_op_z_modulation_lfo_1_MULTIPLY_ctrl_1;
    AudioUnitParameterValue previous_pitch_modulation_lfo_1_MULTIPLY_ctrl_1;
    AudioUnitParameterValue previous_op_a_modulation_lfo_1_MULTIPLY_ctrl_2;
    AudioUnitParameterValue previous_op_b_modulation_lfo_1_MULTIPLY_ctrl_2;
    AudioUnitParameterValue previous_op_c_modulation_lfo_1_MULTIPLY_ctrl_2;
    AudioUnitParameterValue previous_op_d_modulation_lfo_1_MULTIPLY_ctrl_2;
    AudioUnitParameterValue previous_op_e_modulation_lfo_1_MULTIPLY_ctrl_2;
    AudioUnitParameterValue previous_op_f_modulation_lfo_1_MULTIPLY_ctrl_2;
    AudioUnitParameterValue previous_op_x_modulation_lfo_1_MULTIPLY_ctrl_2;
    AudioUnitParameterValue previous_op_z_modulation_lfo_1_MULTIPLY_ctrl_2;
    AudioUnitParameterValue previous_pitch_modulation_lfo_1_MULTIPLY_ctrl_2;
    AudioUnitParameterValue previous_op_a_modulation_lfo_2;
    AudioUnitParameterValue previous_op_b_modulation_lfo_2;
    AudioUnitParameterValue previous_op_c_modulation_lfo_2;
    AudioUnitParameterValue previous_op_d_modulation_lfo_2;
    AudioUnitParameterValue previous_op_e_modulation_lfo_2;
    AudioUnitParameterValue previous_op_f_modulation_lfo_2;
    AudioUnitParameterValue previous_op_x_modulation_lfo_2;
    AudioUnitParameterValue previous_op_z_modulation_lfo_2;
    AudioUnitParameterValue previous_pitch_modulation_lfo_2;
    AudioUnitParameterValue previous_op_a_modulation_lfo_2_MULTIPLY_atc;
    AudioUnitParameterValue previous_op_b_modulation_lfo_2_MULTIPLY_atc;
    AudioUnitParameterValue previous_op_c_modulation_lfo_2_MULTIPLY_atc;
    AudioUnitParameterValue previous_op_d_modulation_lfo_2_MULTIPLY_atc;
    AudioUnitParameterValue previous_op_e_modulation_lfo_2_MULTIPLY_atc;
    AudioUnitParameterValue previous_op_f_modulation_lfo_2_MULTIPLY_atc;
    AudioUnitParameterValue previous_op_x_modulation_lfo_2_MULTIPLY_atc;
    AudioUnitParameterValue previous_op_z_modulation_lfo_2_MULTIPLY_atc;
    AudioUnitParameterValue previous_pitch_modulation_lfo_2_MULTIPLY_atc;
    AudioUnitParameterValue previous_op_a_modulation_lfo_2_MULTIPLY_mw;
    AudioUnitParameterValue previous_op_b_modulation_lfo_2_MULTIPLY_mw;
    AudioUnitParameterValue previous_op_c_modulation_lfo_2_MULTIPLY_mw;
    AudioUnitParameterValue previous_op_d_modulation_lfo_2_MULTIPLY_mw;
    AudioUnitParameterValue previous_op_e_modulation_lfo_2_MULTIPLY_mw;
    AudioUnitParameterValue previous_op_f_modulation_lfo_2_MULTIPLY_mw;
    AudioUnitParameterValue previous_op_x_modulation_lfo_2_MULTIPLY_mw;
    AudioUnitParameterValue previous_op_z_modulation_lfo_2_MULTIPLY_mw;
    AudioUnitParameterValue previous_pitch_modulation_lfo_2_MULTIPLY_mw;
    AudioUnitParameterValue previous_op_a_modulation_lfo_2_MULTIPLY_bc;
    AudioUnitParameterValue previous_op_b_modulation_lfo_2_MULTIPLY_bc;
    AudioUnitParameterValue previous_op_c_modulation_lfo_2_MULTIPLY_bc;
    AudioUnitParameterValue previous_op_d_modulation_lfo_2_MULTIPLY_bc;
    AudioUnitParameterValue previous_op_e_modulation_lfo_2_MULTIPLY_bc;
    AudioUnitParameterValue previous_op_f_modulation_lfo_2_MULTIPLY_bc;
    AudioUnitParameterValue previous_op_x_modulation_lfo_2_MULTIPLY_bc;
    AudioUnitParameterValue previous_op_z_modulation_lfo_2_MULTIPLY_bc;
    AudioUnitParameterValue previous_pitch_modulation_lfo_2_MULTIPLY_bc;
    AudioUnitParameterValue previous_op_a_modulation_lfo_2_MULTIPLY_ctrl_1;
    AudioUnitParameterValue previous_op_b_modulation_lfo_2_MULTIPLY_ctrl_1;
    AudioUnitParameterValue previous_op_c_modulation_lfo_2_MULTIPLY_ctrl_1;
    AudioUnitParameterValue previous_op_d_modulation_lfo_2_MULTIPLY_ctrl_1;
    AudioUnitParameterValue previous_op_e_modulation_lfo_2_MULTIPLY_ctrl_1;
    AudioUnitParameterValue previous_op_f_modulation_lfo_2_MULTIPLY_ctrl_1;
    AudioUnitParameterValue previous_op_x_modulation_lfo_2_MULTIPLY_ctrl_1;
    AudioUnitParameterValue previous_op_z_modulation_lfo_2_MULTIPLY_ctrl_1;
    AudioUnitParameterValue previous_pitch_modulation_lfo_2_MULTIPLY_ctrl_1;
    AudioUnitParameterValue previous_op_a_modulation_lfo_2_MULTIPLY_ctrl_2;
    AudioUnitParameterValue previous_op_b_modulation_lfo_2_MULTIPLY_ctrl_2;
    AudioUnitParameterValue previous_op_c_modulation_lfo_2_MULTIPLY_ctrl_2;
    AudioUnitParameterValue previous_op_d_modulation_lfo_2_MULTIPLY_ctrl_2;
    AudioUnitParameterValue previous_op_e_modulation_lfo_2_MULTIPLY_ctrl_2;
    AudioUnitParameterValue previous_op_f_modulation_lfo_2_MULTIPLY_ctrl_2;
    AudioUnitParameterValue previous_op_x_modulation_lfo_2_MULTIPLY_ctrl_2;
    AudioUnitParameterValue previous_op_z_modulation_lfo_2_MULTIPLY_ctrl_2;
    AudioUnitParameterValue previous_pitch_modulation_lfo_2_MULTIPLY_ctrl_2;
    AudioUnitParameterValue previous_lfo_1_invert;
    AudioUnitParameterValue previous_lfo_2_invert;
    AudioUnitParameterValue previous_lfo_1_on_off;
    AudioUnitParameterValue previous_number_of_lfo1_waveform;
    AudioUnitParameterValue previous_lfo_1_rate;
    AudioUnitParameterValue previous_lfo_1_delay_time;
    AudioUnitParameterValue previous_freerun_or_keysync_of_lfo_1;
    AudioUnitParameterValue previous_midi_tempo_sync_of_lfo_1_rate;
    AudioUnitParameterValue previous_velocity_scaling_of_lfo_1_rate;

    void setup(string _unitName) {
        aumManagedAudioUnit::setup(_unitName, 'aumu', 'Nif8', '-NI-', "aumUnit_Fm8");
    }

    void doPrintChanges() {
        compareAndPrint("easy_edit_effect_strength", previous_easy_edit_effect_strength, get(easy_edit_effect_strength));
        compareAndPrint("easy_edit_timbre_brightness", previous_easy_edit_timbre_brightness, get(easy_edit_timbre_brightness));
        compareAndPrint("easy_edit_timbre_harmonic", previous_easy_edit_timbre_harmonic, get(easy_edit_timbre_harmonic));
        compareAndPrint("easy_edit_timbre_detune", previous_easy_edit_timbre_detune, get(easy_edit_timbre_detune));
        compareAndPrint("easy_edit_timbre_env_amount", previous_easy_edit_timbre_env_amount, get(easy_edit_timbre_env_amount));
        compareAndPrint("easy_edit_timbre_velocity_sens_", previous_easy_edit_timbre_velocity_sens_, get(easy_edit_timbre_velocity_sens_));
        compareAndPrint("easy_edit_timbre_envelope_attack", previous_easy_edit_timbre_envelope_attack, get(easy_edit_timbre_envelope_attack));
        compareAndPrint("easy_edit_timbre_envelope_decay", previous_easy_edit_timbre_envelope_decay, get(easy_edit_timbre_envelope_decay));
        compareAndPrint("easy_edit_timbreenvelope_sustain", previous_easy_edit_timbreenvelope_sustain, get(easy_edit_timbreenvelope_sustain));
        compareAndPrint("easy_edit_timbreenvelope_release", previous_easy_edit_timbreenvelope_release, get(easy_edit_timbreenvelope_release));
        compareAndPrint("easy_edit_lfo_rate", previous_easy_edit_lfo_rate, get(easy_edit_lfo_rate));
        compareAndPrint("easy_edit_lfo_vibrato", previous_easy_edit_lfo_vibrato, get(easy_edit_lfo_vibrato));
        compareAndPrint("easy_edit_lfo_timbre", previous_easy_edit_lfo_timbre, get(easy_edit_lfo_timbre));
        compareAndPrint("easy_edit_lfo_tremolo", previous_easy_edit_lfo_tremolo, get(easy_edit_lfo_tremolo));
        compareAndPrint("easy_edit_output_volume", previous_easy_edit_output_volume, get(easy_edit_output_volume));
        compareAndPrint("easy_edit_output_stereo_width", previous_easy_edit_output_stereo_width, get(easy_edit_output_stereo_width));
        compareAndPrint("easy_edit_output_velocity_sens_", previous_easy_edit_output_velocity_sens_, get(easy_edit_output_velocity_sens_));
        compareAndPrint("easy_edit_volume_envelope_attack", previous_easy_edit_volume_envelope_attack, get(easy_edit_volume_envelope_attack));
        compareAndPrint("easy_edit_volume_envelope_decay", previous_easy_edit_volume_envelope_decay, get(easy_edit_volume_envelope_decay));
        compareAndPrint("easy_edit_volumeenvelope_sustain", previous_easy_edit_volumeenvelope_sustain, get(easy_edit_volumeenvelope_sustain));
        compareAndPrint("easy_edit_volumeenvelope_release", previous_easy_edit_volumeenvelope_release, get(easy_edit_volumeenvelope_release));
        compareAndPrint("morph_x", previous_morph_x, get(morph_x));
        compareAndPrint("morph_y", previous_morph_y, get(morph_y));
        compareAndPrint("morph_random_x", previous_morph_random_x, get(morph_random_x));
        compareAndPrint("morph_random_y", previous_morph_random_y, get(morph_random_y));
        compareAndPrint("morph_random_seed", previous_morph_random_seed, get(morph_random_seed));
        compareAndPrint("effects_amount_bl", previous_effects_amount_bl, get(effects_amount_bl));
        compareAndPrint("effects_amount_br", previous_effects_amount_br, get(effects_amount_br));
        compareAndPrint("effects_amount_tr", previous_effects_amount_tr, get(effects_amount_tr));
        compareAndPrint("effects_amount_tl", previous_effects_amount_tl, get(effects_amount_tl));
        compareAndPrint("overdrive_on_off", previous_overdrive_on_off, get(overdrive_on_off));
        compareAndPrint("overdrive_drive", previous_overdrive_drive, get(overdrive_drive));
        compareAndPrint("overdrive_tone", previous_overdrive_tone, get(overdrive_tone));
        compareAndPrint("overdrive_bass", previous_overdrive_bass, get(overdrive_bass));
        compareAndPrint("overdrive_volume", previous_overdrive_volume, get(overdrive_volume));
        compareAndPrint("tubeamp_on_off", previous_tubeamp_on_off, get(tubeamp_on_off));
        compareAndPrint("tubeamp_drive", previous_tubeamp_drive, get(tubeamp_drive));
        compareAndPrint("tubeamp_volume", previous_tubeamp_volume, get(tubeamp_volume));
        compareAndPrint("cabinet_on_off", previous_cabinet_on_off, get(cabinet_on_off));
        compareAndPrint("cabinet_type", previous_cabinet_type, get(cabinet_type));
        compareAndPrint("cabinet_size", previous_cabinet_size, get(cabinet_size));
        compareAndPrint("cabinet_air", previous_cabinet_air, get(cabinet_air));
        compareAndPrint("cabinet_bass", previous_cabinet_bass, get(cabinet_bass));
        compareAndPrint("cabinet_treble", previous_cabinet_treble, get(cabinet_treble));
        compareAndPrint("shelfeq_on_off", previous_shelfeq_on_off, get(shelfeq_on_off));
        compareAndPrint("shelfeq_low_frequency", previous_shelfeq_low_frequency, get(shelfeq_low_frequency));
        compareAndPrint("shelfeq_low_gain", previous_shelfeq_low_gain, get(shelfeq_low_gain));
        compareAndPrint("shelfeq_high_frequency", previous_shelfeq_high_frequency, get(shelfeq_high_frequency));
        compareAndPrint("shelfeq_high_gain", previous_shelfeq_high_gain, get(shelfeq_high_gain));
        compareAndPrint("shelfeq_volume", previous_shelfeq_volume, get(shelfeq_volume));
        compareAndPrint("peakeq_on_off", previous_peakeq_on_off, get(peakeq_on_off));
        compareAndPrint("peakeq_frequency_1", previous_peakeq_frequency_1, get(peakeq_frequency_1));
        compareAndPrint("peakeq_gain_1", previous_peakeq_gain_1, get(peakeq_gain_1));
        compareAndPrint("peakeq_quality_1", previous_peakeq_quality_1, get(peakeq_quality_1));
        compareAndPrint("peakeq_frequency_2", previous_peakeq_frequency_2, get(peakeq_frequency_2));
        compareAndPrint("peakeq_gain_2", previous_peakeq_gain_2, get(peakeq_gain_2));
        compareAndPrint("peakeq_quality_2", previous_peakeq_quality_2, get(peakeq_quality_2));
        compareAndPrint("peakeq_volume", previous_peakeq_volume, get(peakeq_volume));
        compareAndPrint("talkwah_on_off", previous_talkwah_on_off, get(talkwah_on_off));
        compareAndPrint("talkwah_mouth", previous_talkwah_mouth, get(talkwah_mouth));
        compareAndPrint("talkwah_modwheel", previous_talkwah_modwheel, get(talkwah_modwheel));
        compareAndPrint("talkwah_size", previous_talkwah_size, get(talkwah_size));
        compareAndPrint("talkwah_bright", previous_talkwah_bright, get(talkwah_bright));
        compareAndPrint("phaser_on_off", previous_phaser_on_off, get(phaser_on_off));
        compareAndPrint("phaser_modulation_rate", previous_phaser_modulation_rate, get(phaser_modulation_rate));
        compareAndPrint("phaser_color", previous_phaser_color, get(phaser_color));
        compareAndPrint("phaser_rotate", previous_phaser_rotate, get(phaser_rotate));
        compareAndPrint("phaser_sweep_minimum", previous_phaser_sweep_minimum, get(phaser_sweep_minimum));
        compareAndPrint("phaser_sweep_maximum", previous_phaser_sweep_maximum, get(phaser_sweep_maximum));
        compareAndPrint("phaser_midi_tempo_sync", previous_phaser_midi_tempo_sync, get(phaser_midi_tempo_sync));
        compareAndPrint("phaser_dry_wet", previous_phaser_dry_wet, get(phaser_dry_wet));
        compareAndPrint("phaser_invert", previous_phaser_invert, get(phaser_invert));
        compareAndPrint("phaser_notches", previous_phaser_notches, get(phaser_notches));
        compareAndPrint("flanger_on_off", previous_flanger_on_off, get(flanger_on_off));
        compareAndPrint("flanger_modulation_rate", previous_flanger_modulation_rate, get(flanger_modulation_rate));
        compareAndPrint("flanger_static", previous_flanger_static, get(flanger_static));
        compareAndPrint("flanger_modulation_depth", previous_flanger_modulation_depth, get(flanger_modulation_depth));
        compareAndPrint("flanger_color", previous_flanger_color, get(flanger_color));
        compareAndPrint("flanger_rotate", previous_flanger_rotate, get(flanger_rotate));
        compareAndPrint("flanger_midi_tempo_sync", previous_flanger_midi_tempo_sync, get(flanger_midi_tempo_sync));
        compareAndPrint("flanger_invert", previous_flanger_invert, get(flanger_invert));
        compareAndPrint("flanger_dry_wet", previous_flanger_dry_wet, get(flanger_dry_wet));
        compareAndPrint("tremolo_on_off", previous_tremolo_on_off, get(tremolo_on_off));
        compareAndPrint("tremolo_rate", previous_tremolo_rate, get(tremolo_rate));
        compareAndPrint("tremolo_intensity", previous_tremolo_intensity, get(tremolo_intensity));
        compareAndPrint("tremolo_midi_tempo_sync", previous_tremolo_midi_tempo_sync, get(tremolo_midi_tempo_sync));
        compareAndPrint("tremolo_stereo_panning", previous_tremolo_stereo_panning, get(tremolo_stereo_panning));
        compareAndPrint("tremolo_pulse_width", previous_tremolo_pulse_width, get(tremolo_pulse_width));
        compareAndPrint("tremolo_attack", previous_tremolo_attack, get(tremolo_attack));
        compareAndPrint("tremolo_decay", previous_tremolo_decay, get(tremolo_decay));
        compareAndPrint("reverb_on_off", previous_reverb_on_off, get(reverb_on_off));
        compareAndPrint("reverb_dry_wet", previous_reverb_dry_wet, get(reverb_dry_wet));
        compareAndPrint("reverb_bright", previous_reverb_bright, get(reverb_bright));
        compareAndPrint("reverb_roomsize", previous_reverb_roomsize, get(reverb_roomsize));
        compareAndPrint("reverb_treble", previous_reverb_treble, get(reverb_treble));
        compareAndPrint("psychedelay_on_off", previous_psychedelay_on_off, get(psychedelay_on_off));
        compareAndPrint("psychedelay_dry_wet", previous_psychedelay_dry_wet, get(psychedelay_dry_wet));
        compareAndPrint("psychedelay_delay_time", previous_psychedelay_delay_time, get(psychedelay_delay_time));
        compareAndPrint("psychedelay_reverse_delay", previous_psychedelay_reverse_delay, get(psychedelay_reverse_delay));
        compareAndPrint("psychedelay_delay_detune", previous_psychedelay_delay_detune, get(psychedelay_delay_detune));
        compareAndPrint("psychedelay_feedback", previous_psychedelay_feedback, get(psychedelay_feedback));
        compareAndPrint("psychedelay_delay_pitch_shift", previous_psychedelay_delay_pitch_shift, get(psychedelay_delay_pitch_shift));
        compareAndPrint("psychedelay_midi_tempo_sync", previous_psychedelay_midi_tempo_sync, get(psychedelay_midi_tempo_sync));
        compareAndPrint("psychedelay_stereo", previous_psychedelay_stereo, get(psychedelay_stereo));
        compareAndPrint("delay_delay_time", previous_delay_delay_time, get(delay_delay_time));
        compareAndPrint("delay_diffusion", previous_delay_diffusion, get(delay_diffusion));
        compareAndPrint("delay_modulation_depth", previous_delay_modulation_depth, get(delay_modulation_depth));
        compareAndPrint("delay_feedback", previous_delay_feedback, get(delay_feedback));
        compareAndPrint("delay_high_cut", previous_delay_high_cut, get(delay_high_cut));
        compareAndPrint("delay_low_cut", previous_delay_low_cut, get(delay_low_cut));
        compareAndPrint("delay_invert", previous_delay_invert, get(delay_invert));
        compareAndPrint("delay_on_off", previous_delay_on_off, get(delay_on_off));
        compareAndPrint("delay_dry_wet", previous_delay_dry_wet, get(delay_dry_wet));
        compareAndPrint("delay_modulation_rate", previous_delay_modulation_rate, get(delay_modulation_rate));
        compareAndPrint("delay_sync_delays", previous_delay_sync_delays, get(delay_sync_delays));
        compareAndPrint("delay_midi_tempo_sync", previous_delay_midi_tempo_sync, get(delay_midi_tempo_sync));
        compareAndPrint("master_volume", previous_master_volume, get(master_volume));
        compareAndPrint("input_volume", previous_input_volume, get(input_volume));
        compareAndPrint("master_tune", previous_master_tune, get(master_tune));
        compareAndPrint("pitch_transpose", previous_pitch_transpose, get(pitch_transpose));
        compareAndPrint("unison_detune", previous_unison_detune, get(unison_detune));
        compareAndPrint("unison_mono", previous_unison_mono, get(unison_mono));
        compareAndPrint("unison_pan", previous_unison_pan, get(unison_pan));
        compareAndPrint("portamento_on_off", previous_portamento_on_off, get(portamento_on_off));
        compareAndPrint("portamento_auto", previous_portamento_auto, get(portamento_auto));
        compareAndPrint("portamento_time", previous_portamento_time, get(portamento_time));
        compareAndPrint("analog_quality_bl", previous_analog_quality_bl, get(analog_quality_bl));
        compareAndPrint("analog_quality_br", previous_analog_quality_br, get(analog_quality_br));
        compareAndPrint("analog_quality_tr", previous_analog_quality_tr, get(analog_quality_tr));
        compareAndPrint("analog_quality_tl", previous_analog_quality_tl, get(analog_quality_tl));
        compareAndPrint("digital_quality_bl", previous_digital_quality_bl, get(digital_quality_bl));
        compareAndPrint("digital_quality_br", previous_digital_quality_br, get(digital_quality_br));
        compareAndPrint("digital_quality_tr", previous_digital_quality_tr, get(digital_quality_tr));
        compareAndPrint("digital_quality_tl", previous_digital_quality_tl, get(digital_quality_tl));
        compareAndPrint("arpeggiator_on", previous_arpeggiator_on, get(arpeggiator_on));
        compareAndPrint("arpeggiator_note_length", previous_arpeggiator_note_length, get(arpeggiator_note_length));
        compareAndPrint("arpeggiator_fixed_velocity", previous_arpeggiator_fixed_velocity, get(arpeggiator_fixed_velocity));
        compareAndPrint("arpeggiator_velocity", previous_arpeggiator_velocity, get(arpeggiator_velocity));
        compareAndPrint("arpeggiator_accent", previous_arpeggiator_accent, get(arpeggiator_accent));
        compareAndPrint("arpeggiator_shuffle", previous_arpeggiator_shuffle, get(arpeggiator_shuffle));
        compareAndPrint("arpeggiator_hold", previous_arpeggiator_hold, get(arpeggiator_hold));
        compareAndPrint("arpeggiator_rotate_right", previous_arpeggiator_rotate_right, get(arpeggiator_rotate_right));
        compareAndPrint("arpeggiator_rotate_left", previous_arpeggiator_rotate_left, get(arpeggiator_rotate_left));
        compareAndPrint("arpeggiator_number_of_steps", previous_arpeggiator_number_of_steps, get(arpeggiator_number_of_steps));
        compareAndPrint("arpeggiator_mode", previous_arpeggiator_mode, get(arpeggiator_mode));
        compareAndPrint("arpeggiator_down", previous_arpeggiator_down, get(arpeggiator_down));
        compareAndPrint("arpeggiator_1_shot", previous_arpeggiator_1_shot, get(arpeggiator_1_shot));
        compareAndPrint("arpeggiator_tempo", previous_arpeggiator_tempo, get(arpeggiator_tempo));
        compareAndPrint("arpeggiator_tripplets", previous_arpeggiator_tripplets, get(arpeggiator_tripplets));
        compareAndPrint("arpeggiator_dotted", previous_arpeggiator_dotted, get(arpeggiator_dotted));
        compareAndPrint("arpeggiator_key_sync", previous_arpeggiator_key_sync, get(arpeggiator_key_sync));
        compareAndPrint("arpeggiator_bpm_sync", previous_arpeggiator_bpm_sync, get(arpeggiator_bpm_sync));
        compareAndPrint("arpeggiator_bpm", previous_arpeggiator_bpm, get(arpeggiator_bpm));
        compareAndPrint("arpeggiator_split_on", previous_arpeggiator_split_on, get(arpeggiator_split_on));
        compareAndPrint("arpeggiator_split_note", previous_arpeggiator_split_note, get(arpeggiator_split_note));
        compareAndPrint("arpeggiator_split_bass", previous_arpeggiator_split_bass, get(arpeggiator_split_bass));
        compareAndPrint("microtune_root_note", previous_microtune_root_note, get(microtune_root_note));
        compareAndPrint("microtuning_of_note_c_", previous_microtuning_of_note_c_, get(microtuning_of_note_c_));
        compareAndPrint("microtuning_of_note_c_sharp", previous_microtuning_of_note_c_sharp, get(microtuning_of_note_c_sharp));
        compareAndPrint("microtuning_of_note_d_", previous_microtuning_of_note_d_, get(microtuning_of_note_d_));
        compareAndPrint("microtuning_of_note_d_sharp", previous_microtuning_of_note_d_sharp, get(microtuning_of_note_d_sharp));
        compareAndPrint("microtuning_of_note_e_", previous_microtuning_of_note_e_, get(microtuning_of_note_e_));
        compareAndPrint("microtuning_of_note_f_", previous_microtuning_of_note_f_, get(microtuning_of_note_f_));
        compareAndPrint("microtuning_of_note_f_sharp", previous_microtuning_of_note_f_sharp, get(microtuning_of_note_f_sharp));
        compareAndPrint("microtuning_of_note_g_", previous_microtuning_of_note_g_, get(microtuning_of_note_g_));
        compareAndPrint("microtuning_of_note_g_sharp", previous_microtuning_of_note_g_sharp, get(microtuning_of_note_g_sharp));
        compareAndPrint("microtuning_of_note_a_", previous_microtuning_of_note_a_, get(microtuning_of_note_a_));
        compareAndPrint("microtuning_of_note_a_sharp", previous_microtuning_of_note_a_sharp, get(microtuning_of_note_a_sharp));
        compareAndPrint("microtuning_of_note_h_", previous_microtuning_of_note_h_, get(microtuning_of_note_h_));
        compareAndPrint("fm_matrix_op_a_GT_op_a_bl", previous_fm_matrix_op_a_GT_op_a_bl, get(fm_matrix_op_a_GT_op_a_bl));
        compareAndPrint("fm_matrix_op_a_GT_op_a_br", previous_fm_matrix_op_a_GT_op_a_br, get(fm_matrix_op_a_GT_op_a_br));
        compareAndPrint("fm_matrix_op_a_GT_op_a_tr", previous_fm_matrix_op_a_GT_op_a_tr, get(fm_matrix_op_a_GT_op_a_tr));
        compareAndPrint("fm_matrix_op_a_GT_op_a_tl", previous_fm_matrix_op_a_GT_op_a_tl, get(fm_matrix_op_a_GT_op_a_tl));
        compareAndPrint("fm_matrix_op_a_GT_op_b_bl", previous_fm_matrix_op_a_GT_op_b_bl, get(fm_matrix_op_a_GT_op_b_bl));
        compareAndPrint("fm_matrix_op_a_GT_op_b_br", previous_fm_matrix_op_a_GT_op_b_br, get(fm_matrix_op_a_GT_op_b_br));
        compareAndPrint("fm_matrix_op_a_GT_op_b_tr", previous_fm_matrix_op_a_GT_op_b_tr, get(fm_matrix_op_a_GT_op_b_tr));
        compareAndPrint("fm_matrix_op_a_GT_op_b_tl", previous_fm_matrix_op_a_GT_op_b_tl, get(fm_matrix_op_a_GT_op_b_tl));
        compareAndPrint("fm_matrix_op_a_GT_op_c_bl", previous_fm_matrix_op_a_GT_op_c_bl, get(fm_matrix_op_a_GT_op_c_bl));
        compareAndPrint("fm_matrix_op_a_GT_op_c_br", previous_fm_matrix_op_a_GT_op_c_br, get(fm_matrix_op_a_GT_op_c_br));
        compareAndPrint("fm_matrix_op_a_GT_op_c_tr", previous_fm_matrix_op_a_GT_op_c_tr, get(fm_matrix_op_a_GT_op_c_tr));
        compareAndPrint("fm_matrix_op_a_GT_op_c_tl", previous_fm_matrix_op_a_GT_op_c_tl, get(fm_matrix_op_a_GT_op_c_tl));
        compareAndPrint("fm_matrix_op_a_GT_op_d_bl", previous_fm_matrix_op_a_GT_op_d_bl, get(fm_matrix_op_a_GT_op_d_bl));
        compareAndPrint("fm_matrix_op_a_GT_op_d_br", previous_fm_matrix_op_a_GT_op_d_br, get(fm_matrix_op_a_GT_op_d_br));
        compareAndPrint("fm_matrix_op_a_GT_op_d_tr", previous_fm_matrix_op_a_GT_op_d_tr, get(fm_matrix_op_a_GT_op_d_tr));
        compareAndPrint("fm_matrix_op_a_GT_op_d_tl", previous_fm_matrix_op_a_GT_op_d_tl, get(fm_matrix_op_a_GT_op_d_tl));
        compareAndPrint("fm_matrix_op_a_GT_op_e_bl", previous_fm_matrix_op_a_GT_op_e_bl, get(fm_matrix_op_a_GT_op_e_bl));
        compareAndPrint("fm_matrix_op_a_GT_op_e_br", previous_fm_matrix_op_a_GT_op_e_br, get(fm_matrix_op_a_GT_op_e_br));
        compareAndPrint("fm_matrix_op_a_GT_op_e_tr", previous_fm_matrix_op_a_GT_op_e_tr, get(fm_matrix_op_a_GT_op_e_tr));
        compareAndPrint("fm_matrix_op_a_GT_op_e_tl", previous_fm_matrix_op_a_GT_op_e_tl, get(fm_matrix_op_a_GT_op_e_tl));
        compareAndPrint("fm_matrix_op_a_GT_op_f_bl", previous_fm_matrix_op_a_GT_op_f_bl, get(fm_matrix_op_a_GT_op_f_bl));
        compareAndPrint("fm_matrix_op_a_GT_op_f_br", previous_fm_matrix_op_a_GT_op_f_br, get(fm_matrix_op_a_GT_op_f_br));
        compareAndPrint("fm_matrix_op_a_GT_op_f_tr", previous_fm_matrix_op_a_GT_op_f_tr, get(fm_matrix_op_a_GT_op_f_tr));
        compareAndPrint("fm_matrix_op_a_GT_op_f_tl", previous_fm_matrix_op_a_GT_op_f_tl, get(fm_matrix_op_a_GT_op_f_tl));
        compareAndPrint("fm_matrix_op_a_GT_op_x_bl", previous_fm_matrix_op_a_GT_op_x_bl, get(fm_matrix_op_a_GT_op_x_bl));
        compareAndPrint("fm_matrix_op_a_GT_op_x_br", previous_fm_matrix_op_a_GT_op_x_br, get(fm_matrix_op_a_GT_op_x_br));
        compareAndPrint("fm_matrix_op_a_GT_op_x_tr", previous_fm_matrix_op_a_GT_op_x_tr, get(fm_matrix_op_a_GT_op_x_tr));
        compareAndPrint("fm_matrix_op_a_GT_op_x_tl", previous_fm_matrix_op_a_GT_op_x_tl, get(fm_matrix_op_a_GT_op_x_tl));
        compareAndPrint("fm_matrix_op_a_GT_op_z_bl", previous_fm_matrix_op_a_GT_op_z_bl, get(fm_matrix_op_a_GT_op_z_bl));
        compareAndPrint("fm_matrix_op_a_GT_op_z_br", previous_fm_matrix_op_a_GT_op_z_br, get(fm_matrix_op_a_GT_op_z_br));
        compareAndPrint("fm_matrix_op_a_GT_op_z_tr", previous_fm_matrix_op_a_GT_op_z_tr, get(fm_matrix_op_a_GT_op_z_tr));
        compareAndPrint("fm_matrix_op_a_GT_op_z_tl", previous_fm_matrix_op_a_GT_op_z_tl, get(fm_matrix_op_a_GT_op_z_tl));
        compareAndPrint("fm_matrix_op_a_GT_out_bl", previous_fm_matrix_op_a_GT_out_bl, get(fm_matrix_op_a_GT_out_bl));
        compareAndPrint("fm_matrix_op_a_GT_out_br", previous_fm_matrix_op_a_GT_out_br, get(fm_matrix_op_a_GT_out_br));
        compareAndPrint("fm_matrix_op_a_GT_out_tr", previous_fm_matrix_op_a_GT_out_tr, get(fm_matrix_op_a_GT_out_tr));
        compareAndPrint("fm_matrix_op_a_GT_out_tl", previous_fm_matrix_op_a_GT_out_tl, get(fm_matrix_op_a_GT_out_tl));
        compareAndPrint("fm_matrix_op_a_GT_pan_bl", previous_fm_matrix_op_a_GT_pan_bl, get(fm_matrix_op_a_GT_pan_bl));
        compareAndPrint("fm_matrix_op_a_GT_pan_br", previous_fm_matrix_op_a_GT_pan_br, get(fm_matrix_op_a_GT_pan_br));
        compareAndPrint("fm_matrix_op_a_GT_pan_tr", previous_fm_matrix_op_a_GT_pan_tr, get(fm_matrix_op_a_GT_pan_tr));
        compareAndPrint("fm_matrix_op_a_GT_pan_tl", previous_fm_matrix_op_a_GT_pan_tl, get(fm_matrix_op_a_GT_pan_tl));
        compareAndPrint("fm_matrix_op_a_GT_in_bl", previous_fm_matrix_op_a_GT_in_bl, get(fm_matrix_op_a_GT_in_bl));
        compareAndPrint("fm_matrix_op_a_GT_in_br", previous_fm_matrix_op_a_GT_in_br, get(fm_matrix_op_a_GT_in_br));
        compareAndPrint("fm_matrix_op_a_GT_in_tr", previous_fm_matrix_op_a_GT_in_tr, get(fm_matrix_op_a_GT_in_tr));
        compareAndPrint("fm_matrix_op_a_GT_in_tl", previous_fm_matrix_op_a_GT_in_tl, get(fm_matrix_op_a_GT_in_tl));
        compareAndPrint("fm_matrix_op_b_GT_op_a_bl", previous_fm_matrix_op_b_GT_op_a_bl, get(fm_matrix_op_b_GT_op_a_bl));
        compareAndPrint("fm_matrix_op_b_GT_op_a_br", previous_fm_matrix_op_b_GT_op_a_br, get(fm_matrix_op_b_GT_op_a_br));
        compareAndPrint("fm_matrix_op_b_GT_op_a_tr", previous_fm_matrix_op_b_GT_op_a_tr, get(fm_matrix_op_b_GT_op_a_tr));
        compareAndPrint("fm_matrix_op_b_GT_op_a_tl", previous_fm_matrix_op_b_GT_op_a_tl, get(fm_matrix_op_b_GT_op_a_tl));
        compareAndPrint("fm_matrix_op_b_GT_op_b_bl", previous_fm_matrix_op_b_GT_op_b_bl, get(fm_matrix_op_b_GT_op_b_bl));
        compareAndPrint("fm_matrix_op_b_GT_op_b_br", previous_fm_matrix_op_b_GT_op_b_br, get(fm_matrix_op_b_GT_op_b_br));
        compareAndPrint("fm_matrix_op_b_GT_op_b_tr", previous_fm_matrix_op_b_GT_op_b_tr, get(fm_matrix_op_b_GT_op_b_tr));
        compareAndPrint("fm_matrix_op_b_GT_op_b_tl", previous_fm_matrix_op_b_GT_op_b_tl, get(fm_matrix_op_b_GT_op_b_tl));
        compareAndPrint("fm_matrix_op_b_GT_op_c_bl", previous_fm_matrix_op_b_GT_op_c_bl, get(fm_matrix_op_b_GT_op_c_bl));
        compareAndPrint("fm_matrix_op_b_GT_op_c_br", previous_fm_matrix_op_b_GT_op_c_br, get(fm_matrix_op_b_GT_op_c_br));
        compareAndPrint("fm_matrix_op_b_GT_op_c_tr", previous_fm_matrix_op_b_GT_op_c_tr, get(fm_matrix_op_b_GT_op_c_tr));
        compareAndPrint("fm_matrix_op_b_GT_op_c_tl", previous_fm_matrix_op_b_GT_op_c_tl, get(fm_matrix_op_b_GT_op_c_tl));
        compareAndPrint("fm_matrix_op_b_GT_op_d_bl", previous_fm_matrix_op_b_GT_op_d_bl, get(fm_matrix_op_b_GT_op_d_bl));
        compareAndPrint("fm_matrix_op_b_GT_op_d_br", previous_fm_matrix_op_b_GT_op_d_br, get(fm_matrix_op_b_GT_op_d_br));
        compareAndPrint("fm_matrix_op_b_GT_op_d_tr", previous_fm_matrix_op_b_GT_op_d_tr, get(fm_matrix_op_b_GT_op_d_tr));
        compareAndPrint("fm_matrix_op_b_GT_op_d_tl", previous_fm_matrix_op_b_GT_op_d_tl, get(fm_matrix_op_b_GT_op_d_tl));
        compareAndPrint("fm_matrix_op_b_GT_op_e_bl", previous_fm_matrix_op_b_GT_op_e_bl, get(fm_matrix_op_b_GT_op_e_bl));
        compareAndPrint("fm_matrix_op_b_GT_op_e_br", previous_fm_matrix_op_b_GT_op_e_br, get(fm_matrix_op_b_GT_op_e_br));
        compareAndPrint("fm_matrix_op_b_GT_op_e_tr", previous_fm_matrix_op_b_GT_op_e_tr, get(fm_matrix_op_b_GT_op_e_tr));
        compareAndPrint("fm_matrix_op_b_GT_op_e_tl", previous_fm_matrix_op_b_GT_op_e_tl, get(fm_matrix_op_b_GT_op_e_tl));
        compareAndPrint("fm_matrix_op_b_GT_op_f_bl", previous_fm_matrix_op_b_GT_op_f_bl, get(fm_matrix_op_b_GT_op_f_bl));
        compareAndPrint("fm_matrix_op_b_GT_op_f_br", previous_fm_matrix_op_b_GT_op_f_br, get(fm_matrix_op_b_GT_op_f_br));
        compareAndPrint("fm_matrix_op_b_GT_op_f_tr", previous_fm_matrix_op_b_GT_op_f_tr, get(fm_matrix_op_b_GT_op_f_tr));
        compareAndPrint("fm_matrix_op_b_GT_op_f_tl", previous_fm_matrix_op_b_GT_op_f_tl, get(fm_matrix_op_b_GT_op_f_tl));
        compareAndPrint("fm_matrix_op_b_GT_op_x_bl", previous_fm_matrix_op_b_GT_op_x_bl, get(fm_matrix_op_b_GT_op_x_bl));
        compareAndPrint("fm_matrix_op_b_GT_op_x_br", previous_fm_matrix_op_b_GT_op_x_br, get(fm_matrix_op_b_GT_op_x_br));
        compareAndPrint("fm_matrix_op_b_GT_op_x_tr", previous_fm_matrix_op_b_GT_op_x_tr, get(fm_matrix_op_b_GT_op_x_tr));
        compareAndPrint("fm_matrix_op_b_GT_op_x_tl", previous_fm_matrix_op_b_GT_op_x_tl, get(fm_matrix_op_b_GT_op_x_tl));
        compareAndPrint("fm_matrix_op_b_GT_op_z_bl", previous_fm_matrix_op_b_GT_op_z_bl, get(fm_matrix_op_b_GT_op_z_bl));
        compareAndPrint("fm_matrix_op_b_GT_op_z_br", previous_fm_matrix_op_b_GT_op_z_br, get(fm_matrix_op_b_GT_op_z_br));
        compareAndPrint("fm_matrix_op_b_GT_op_z_tr", previous_fm_matrix_op_b_GT_op_z_tr, get(fm_matrix_op_b_GT_op_z_tr));
        compareAndPrint("fm_matrix_op_b_GT_op_z_tl", previous_fm_matrix_op_b_GT_op_z_tl, get(fm_matrix_op_b_GT_op_z_tl));
        compareAndPrint("fm_matrix_op_b_GT_out_bl", previous_fm_matrix_op_b_GT_out_bl, get(fm_matrix_op_b_GT_out_bl));
        compareAndPrint("fm_matrix_op_b_GT_out_br", previous_fm_matrix_op_b_GT_out_br, get(fm_matrix_op_b_GT_out_br));
        compareAndPrint("fm_matrix_op_b_GT_out_tr", previous_fm_matrix_op_b_GT_out_tr, get(fm_matrix_op_b_GT_out_tr));
        compareAndPrint("fm_matrix_op_b_GT_out_tl", previous_fm_matrix_op_b_GT_out_tl, get(fm_matrix_op_b_GT_out_tl));
        compareAndPrint("fm_matrix_op_b_GT_pan_bl", previous_fm_matrix_op_b_GT_pan_bl, get(fm_matrix_op_b_GT_pan_bl));
        compareAndPrint("fm_matrix_op_b_GT_pan_br", previous_fm_matrix_op_b_GT_pan_br, get(fm_matrix_op_b_GT_pan_br));
        compareAndPrint("fm_matrix_op_b_GT_pan_tr", previous_fm_matrix_op_b_GT_pan_tr, get(fm_matrix_op_b_GT_pan_tr));
        compareAndPrint("fm_matrix_op_b_GT_pan_tl", previous_fm_matrix_op_b_GT_pan_tl, get(fm_matrix_op_b_GT_pan_tl));
        compareAndPrint("fm_matrix_op_b_GT_in_bl", previous_fm_matrix_op_b_GT_in_bl, get(fm_matrix_op_b_GT_in_bl));
        compareAndPrint("fm_matrix_op_b_GT_in_br", previous_fm_matrix_op_b_GT_in_br, get(fm_matrix_op_b_GT_in_br));
        compareAndPrint("fm_matrix_op_b_GT_in_tr", previous_fm_matrix_op_b_GT_in_tr, get(fm_matrix_op_b_GT_in_tr));
        compareAndPrint("fm_matrix_op_b_GT_in_tl", previous_fm_matrix_op_b_GT_in_tl, get(fm_matrix_op_b_GT_in_tl));
        compareAndPrint("fm_matrix_op_c_GT_op_a_bl", previous_fm_matrix_op_c_GT_op_a_bl, get(fm_matrix_op_c_GT_op_a_bl));
        compareAndPrint("fm_matrix_op_c_GT_op_a_br", previous_fm_matrix_op_c_GT_op_a_br, get(fm_matrix_op_c_GT_op_a_br));
        compareAndPrint("fm_matrix_op_c_GT_op_a_tr", previous_fm_matrix_op_c_GT_op_a_tr, get(fm_matrix_op_c_GT_op_a_tr));
        compareAndPrint("fm_matrix_op_c_GT_op_a_tl", previous_fm_matrix_op_c_GT_op_a_tl, get(fm_matrix_op_c_GT_op_a_tl));
        compareAndPrint("fm_matrix_op_c_GT_op_b_bl", previous_fm_matrix_op_c_GT_op_b_bl, get(fm_matrix_op_c_GT_op_b_bl));
        compareAndPrint("fm_matrix_op_c_GT_op_b_br", previous_fm_matrix_op_c_GT_op_b_br, get(fm_matrix_op_c_GT_op_b_br));
        compareAndPrint("fm_matrix_op_c_GT_op_b_tr", previous_fm_matrix_op_c_GT_op_b_tr, get(fm_matrix_op_c_GT_op_b_tr));
        compareAndPrint("fm_matrix_op_c_GT_op_b_tl", previous_fm_matrix_op_c_GT_op_b_tl, get(fm_matrix_op_c_GT_op_b_tl));
        compareAndPrint("fm_matrix_op_c_GT_op_c_bl", previous_fm_matrix_op_c_GT_op_c_bl, get(fm_matrix_op_c_GT_op_c_bl));
        compareAndPrint("fm_matrix_op_c_GT_op_c_br", previous_fm_matrix_op_c_GT_op_c_br, get(fm_matrix_op_c_GT_op_c_br));
        compareAndPrint("fm_matrix_op_c_GT_op_c_tr", previous_fm_matrix_op_c_GT_op_c_tr, get(fm_matrix_op_c_GT_op_c_tr));
        compareAndPrint("fm_matrix_op_c_GT_op_c_tl", previous_fm_matrix_op_c_GT_op_c_tl, get(fm_matrix_op_c_GT_op_c_tl));
        compareAndPrint("fm_matrix_op_c_GT_op_d_bl", previous_fm_matrix_op_c_GT_op_d_bl, get(fm_matrix_op_c_GT_op_d_bl));
        compareAndPrint("fm_matrix_op_c_GT_op_d_br", previous_fm_matrix_op_c_GT_op_d_br, get(fm_matrix_op_c_GT_op_d_br));
        compareAndPrint("fm_matrix_op_c_GT_op_d_tr", previous_fm_matrix_op_c_GT_op_d_tr, get(fm_matrix_op_c_GT_op_d_tr));
        compareAndPrint("fm_matrix_op_c_GT_op_d_tl", previous_fm_matrix_op_c_GT_op_d_tl, get(fm_matrix_op_c_GT_op_d_tl));
        compareAndPrint("fm_matrix_op_c_GT_op_e_bl", previous_fm_matrix_op_c_GT_op_e_bl, get(fm_matrix_op_c_GT_op_e_bl));
        compareAndPrint("fm_matrix_op_c_GT_op_e_br", previous_fm_matrix_op_c_GT_op_e_br, get(fm_matrix_op_c_GT_op_e_br));
        compareAndPrint("fm_matrix_op_c_GT_op_e_tr", previous_fm_matrix_op_c_GT_op_e_tr, get(fm_matrix_op_c_GT_op_e_tr));
        compareAndPrint("fm_matrix_op_c_GT_op_e_tl", previous_fm_matrix_op_c_GT_op_e_tl, get(fm_matrix_op_c_GT_op_e_tl));
        compareAndPrint("fm_matrix_op_c_GT_op_f_bl", previous_fm_matrix_op_c_GT_op_f_bl, get(fm_matrix_op_c_GT_op_f_bl));
        compareAndPrint("fm_matrix_op_c_GT_op_f_br", previous_fm_matrix_op_c_GT_op_f_br, get(fm_matrix_op_c_GT_op_f_br));
        compareAndPrint("fm_matrix_op_c_GT_op_f_tr", previous_fm_matrix_op_c_GT_op_f_tr, get(fm_matrix_op_c_GT_op_f_tr));
        compareAndPrint("fm_matrix_op_c_GT_op_f_tl", previous_fm_matrix_op_c_GT_op_f_tl, get(fm_matrix_op_c_GT_op_f_tl));
        compareAndPrint("fm_matrix_op_c_GT_op_x_bl", previous_fm_matrix_op_c_GT_op_x_bl, get(fm_matrix_op_c_GT_op_x_bl));
        compareAndPrint("fm_matrix_op_c_GT_op_x_br", previous_fm_matrix_op_c_GT_op_x_br, get(fm_matrix_op_c_GT_op_x_br));
        compareAndPrint("fm_matrix_op_c_GT_op_x_tr", previous_fm_matrix_op_c_GT_op_x_tr, get(fm_matrix_op_c_GT_op_x_tr));
        compareAndPrint("fm_matrix_op_c_GT_op_x_tl", previous_fm_matrix_op_c_GT_op_x_tl, get(fm_matrix_op_c_GT_op_x_tl));
        compareAndPrint("fm_matrix_op_c_GT_op_z_bl", previous_fm_matrix_op_c_GT_op_z_bl, get(fm_matrix_op_c_GT_op_z_bl));
        compareAndPrint("fm_matrix_op_c_GT_op_z_br", previous_fm_matrix_op_c_GT_op_z_br, get(fm_matrix_op_c_GT_op_z_br));
        compareAndPrint("fm_matrix_op_c_GT_op_z_tr", previous_fm_matrix_op_c_GT_op_z_tr, get(fm_matrix_op_c_GT_op_z_tr));
        compareAndPrint("fm_matrix_op_c_GT_op_z_tl", previous_fm_matrix_op_c_GT_op_z_tl, get(fm_matrix_op_c_GT_op_z_tl));
        compareAndPrint("fm_matrix_op_c_GT_out_bl", previous_fm_matrix_op_c_GT_out_bl, get(fm_matrix_op_c_GT_out_bl));
        compareAndPrint("fm_matrix_op_c_GT_out_br", previous_fm_matrix_op_c_GT_out_br, get(fm_matrix_op_c_GT_out_br));
        compareAndPrint("fm_matrix_op_c_GT_out_tr", previous_fm_matrix_op_c_GT_out_tr, get(fm_matrix_op_c_GT_out_tr));
        compareAndPrint("fm_matrix_op_c_GT_out_tl", previous_fm_matrix_op_c_GT_out_tl, get(fm_matrix_op_c_GT_out_tl));
        compareAndPrint("fm_matrix_op_c_GT_pan_bl", previous_fm_matrix_op_c_GT_pan_bl, get(fm_matrix_op_c_GT_pan_bl));
        compareAndPrint("fm_matrix_op_c_GT_pan_br", previous_fm_matrix_op_c_GT_pan_br, get(fm_matrix_op_c_GT_pan_br));
        compareAndPrint("fm_matrix_op_c_GT_pan_tr", previous_fm_matrix_op_c_GT_pan_tr, get(fm_matrix_op_c_GT_pan_tr));
        compareAndPrint("fm_matrix_op_c_GT_pan_tl", previous_fm_matrix_op_c_GT_pan_tl, get(fm_matrix_op_c_GT_pan_tl));
        compareAndPrint("fm_matrix_op_c_GT_in_bl", previous_fm_matrix_op_c_GT_in_bl, get(fm_matrix_op_c_GT_in_bl));
        compareAndPrint("fm_matrix_op_c_GT_in_br", previous_fm_matrix_op_c_GT_in_br, get(fm_matrix_op_c_GT_in_br));
        compareAndPrint("fm_matrix_op_c_GT_in_tr", previous_fm_matrix_op_c_GT_in_tr, get(fm_matrix_op_c_GT_in_tr));
        compareAndPrint("fm_matrix_op_c_GT_in_tl", previous_fm_matrix_op_c_GT_in_tl, get(fm_matrix_op_c_GT_in_tl));
        compareAndPrint("fm_matrix_op_d_GT_op_a_bl", previous_fm_matrix_op_d_GT_op_a_bl, get(fm_matrix_op_d_GT_op_a_bl));
        compareAndPrint("fm_matrix_op_d_GT_op_a_br", previous_fm_matrix_op_d_GT_op_a_br, get(fm_matrix_op_d_GT_op_a_br));
        compareAndPrint("fm_matrix_op_d_GT_op_a_tr", previous_fm_matrix_op_d_GT_op_a_tr, get(fm_matrix_op_d_GT_op_a_tr));
        compareAndPrint("fm_matrix_op_d_GT_op_a_tl", previous_fm_matrix_op_d_GT_op_a_tl, get(fm_matrix_op_d_GT_op_a_tl));
        compareAndPrint("fm_matrix_op_d_GT_op_b_bl", previous_fm_matrix_op_d_GT_op_b_bl, get(fm_matrix_op_d_GT_op_b_bl));
        compareAndPrint("fm_matrix_op_d_GT_op_b_br", previous_fm_matrix_op_d_GT_op_b_br, get(fm_matrix_op_d_GT_op_b_br));
        compareAndPrint("fm_matrix_op_d_GT_op_b_tr", previous_fm_matrix_op_d_GT_op_b_tr, get(fm_matrix_op_d_GT_op_b_tr));
        compareAndPrint("fm_matrix_op_d_GT_op_b_tl", previous_fm_matrix_op_d_GT_op_b_tl, get(fm_matrix_op_d_GT_op_b_tl));
        compareAndPrint("fm_matrix_op_d_GT_op_c_bl", previous_fm_matrix_op_d_GT_op_c_bl, get(fm_matrix_op_d_GT_op_c_bl));
        compareAndPrint("fm_matrix_op_d_GT_op_c_br", previous_fm_matrix_op_d_GT_op_c_br, get(fm_matrix_op_d_GT_op_c_br));
        compareAndPrint("fm_matrix_op_d_GT_op_c_tr", previous_fm_matrix_op_d_GT_op_c_tr, get(fm_matrix_op_d_GT_op_c_tr));
        compareAndPrint("fm_matrix_op_d_GT_op_c_tl", previous_fm_matrix_op_d_GT_op_c_tl, get(fm_matrix_op_d_GT_op_c_tl));
        compareAndPrint("fm_matrix_op_d_GT_op_d_bl", previous_fm_matrix_op_d_GT_op_d_bl, get(fm_matrix_op_d_GT_op_d_bl));
        compareAndPrint("fm_matrix_op_d_GT_op_d_br", previous_fm_matrix_op_d_GT_op_d_br, get(fm_matrix_op_d_GT_op_d_br));
        compareAndPrint("fm_matrix_op_d_GT_op_d_tr", previous_fm_matrix_op_d_GT_op_d_tr, get(fm_matrix_op_d_GT_op_d_tr));
        compareAndPrint("fm_matrix_op_d_GT_op_d_tl", previous_fm_matrix_op_d_GT_op_d_tl, get(fm_matrix_op_d_GT_op_d_tl));
        compareAndPrint("fm_matrix_op_d_GT_op_e_bl", previous_fm_matrix_op_d_GT_op_e_bl, get(fm_matrix_op_d_GT_op_e_bl));
        compareAndPrint("fm_matrix_op_d_GT_op_e_br", previous_fm_matrix_op_d_GT_op_e_br, get(fm_matrix_op_d_GT_op_e_br));
        compareAndPrint("fm_matrix_op_d_GT_op_e_tr", previous_fm_matrix_op_d_GT_op_e_tr, get(fm_matrix_op_d_GT_op_e_tr));
        compareAndPrint("fm_matrix_op_d_GT_op_e_tl", previous_fm_matrix_op_d_GT_op_e_tl, get(fm_matrix_op_d_GT_op_e_tl));
        compareAndPrint("fm_matrix_op_d_GT_op_f_bl", previous_fm_matrix_op_d_GT_op_f_bl, get(fm_matrix_op_d_GT_op_f_bl));
        compareAndPrint("fm_matrix_op_d_GT_op_f_br", previous_fm_matrix_op_d_GT_op_f_br, get(fm_matrix_op_d_GT_op_f_br));
        compareAndPrint("fm_matrix_op_d_GT_op_f_tr", previous_fm_matrix_op_d_GT_op_f_tr, get(fm_matrix_op_d_GT_op_f_tr));
        compareAndPrint("fm_matrix_op_d_GT_op_f_tl", previous_fm_matrix_op_d_GT_op_f_tl, get(fm_matrix_op_d_GT_op_f_tl));
        compareAndPrint("fm_matrix_op_d_GT_op_x_bl", previous_fm_matrix_op_d_GT_op_x_bl, get(fm_matrix_op_d_GT_op_x_bl));
        compareAndPrint("fm_matrix_op_d_GT_op_x_br", previous_fm_matrix_op_d_GT_op_x_br, get(fm_matrix_op_d_GT_op_x_br));
        compareAndPrint("fm_matrix_op_d_GT_op_x_tr", previous_fm_matrix_op_d_GT_op_x_tr, get(fm_matrix_op_d_GT_op_x_tr));
        compareAndPrint("fm_matrix_op_d_GT_op_x_tl", previous_fm_matrix_op_d_GT_op_x_tl, get(fm_matrix_op_d_GT_op_x_tl));
        compareAndPrint("fm_matrix_op_d_GT_op_z_bl", previous_fm_matrix_op_d_GT_op_z_bl, get(fm_matrix_op_d_GT_op_z_bl));
        compareAndPrint("fm_matrix_op_d_GT_op_z_br", previous_fm_matrix_op_d_GT_op_z_br, get(fm_matrix_op_d_GT_op_z_br));
        compareAndPrint("fm_matrix_op_d_GT_op_z_tr", previous_fm_matrix_op_d_GT_op_z_tr, get(fm_matrix_op_d_GT_op_z_tr));
        compareAndPrint("fm_matrix_op_d_GT_op_z_tl", previous_fm_matrix_op_d_GT_op_z_tl, get(fm_matrix_op_d_GT_op_z_tl));
        compareAndPrint("fm_matrix_op_d_GT_out_bl", previous_fm_matrix_op_d_GT_out_bl, get(fm_matrix_op_d_GT_out_bl));
        compareAndPrint("fm_matrix_op_d_GT_out_br", previous_fm_matrix_op_d_GT_out_br, get(fm_matrix_op_d_GT_out_br));
        compareAndPrint("fm_matrix_op_d_GT_out_tr", previous_fm_matrix_op_d_GT_out_tr, get(fm_matrix_op_d_GT_out_tr));
        compareAndPrint("fm_matrix_op_d_GT_out_tl", previous_fm_matrix_op_d_GT_out_tl, get(fm_matrix_op_d_GT_out_tl));
        compareAndPrint("fm_matrix_op_d_GT_pan_bl", previous_fm_matrix_op_d_GT_pan_bl, get(fm_matrix_op_d_GT_pan_bl));
        compareAndPrint("fm_matrix_op_d_GT_pan_br", previous_fm_matrix_op_d_GT_pan_br, get(fm_matrix_op_d_GT_pan_br));
        compareAndPrint("fm_matrix_op_d_GT_pan_tr", previous_fm_matrix_op_d_GT_pan_tr, get(fm_matrix_op_d_GT_pan_tr));
        compareAndPrint("fm_matrix_op_d_GT_pan_tl", previous_fm_matrix_op_d_GT_pan_tl, get(fm_matrix_op_d_GT_pan_tl));
        compareAndPrint("fm_matrix_op_d_GT_in_bl", previous_fm_matrix_op_d_GT_in_bl, get(fm_matrix_op_d_GT_in_bl));
        compareAndPrint("fm_matrix_op_d_GT_in_br", previous_fm_matrix_op_d_GT_in_br, get(fm_matrix_op_d_GT_in_br));
        compareAndPrint("fm_matrix_op_d_GT_in_tr", previous_fm_matrix_op_d_GT_in_tr, get(fm_matrix_op_d_GT_in_tr));
        compareAndPrint("fm_matrix_op_d_GT_in_tl", previous_fm_matrix_op_d_GT_in_tl, get(fm_matrix_op_d_GT_in_tl));
        compareAndPrint("fm_matrix_op_e_GT_op_a_bl", previous_fm_matrix_op_e_GT_op_a_bl, get(fm_matrix_op_e_GT_op_a_bl));
        compareAndPrint("fm_matrix_op_e_GT_op_a_br", previous_fm_matrix_op_e_GT_op_a_br, get(fm_matrix_op_e_GT_op_a_br));
        compareAndPrint("fm_matrix_op_e_GT_op_a_tr", previous_fm_matrix_op_e_GT_op_a_tr, get(fm_matrix_op_e_GT_op_a_tr));
        compareAndPrint("fm_matrix_op_e_GT_op_a_tl", previous_fm_matrix_op_e_GT_op_a_tl, get(fm_matrix_op_e_GT_op_a_tl));
        compareAndPrint("fm_matrix_op_e_GT_op_b_bl", previous_fm_matrix_op_e_GT_op_b_bl, get(fm_matrix_op_e_GT_op_b_bl));
        compareAndPrint("fm_matrix_op_e_GT_op_b_br", previous_fm_matrix_op_e_GT_op_b_br, get(fm_matrix_op_e_GT_op_b_br));
        compareAndPrint("fm_matrix_op_e_GT_op_b_tr", previous_fm_matrix_op_e_GT_op_b_tr, get(fm_matrix_op_e_GT_op_b_tr));
        compareAndPrint("fm_matrix_op_e_GT_op_b_tl", previous_fm_matrix_op_e_GT_op_b_tl, get(fm_matrix_op_e_GT_op_b_tl));
        compareAndPrint("fm_matrix_op_e_GT_op_c_bl", previous_fm_matrix_op_e_GT_op_c_bl, get(fm_matrix_op_e_GT_op_c_bl));
        compareAndPrint("fm_matrix_op_e_GT_op_c_br", previous_fm_matrix_op_e_GT_op_c_br, get(fm_matrix_op_e_GT_op_c_br));
        compareAndPrint("fm_matrix_op_e_GT_op_c_tr", previous_fm_matrix_op_e_GT_op_c_tr, get(fm_matrix_op_e_GT_op_c_tr));
        compareAndPrint("fm_matrix_op_e_GT_op_c_tl", previous_fm_matrix_op_e_GT_op_c_tl, get(fm_matrix_op_e_GT_op_c_tl));
        compareAndPrint("fm_matrix_op_e_GT_op_d_bl", previous_fm_matrix_op_e_GT_op_d_bl, get(fm_matrix_op_e_GT_op_d_bl));
        compareAndPrint("fm_matrix_op_e_GT_op_d_br", previous_fm_matrix_op_e_GT_op_d_br, get(fm_matrix_op_e_GT_op_d_br));
        compareAndPrint("fm_matrix_op_e_GT_op_d_tr", previous_fm_matrix_op_e_GT_op_d_tr, get(fm_matrix_op_e_GT_op_d_tr));
        compareAndPrint("fm_matrix_op_e_GT_op_d_tl", previous_fm_matrix_op_e_GT_op_d_tl, get(fm_matrix_op_e_GT_op_d_tl));
        compareAndPrint("fm_matrix_op_e_GT_op_e_bl", previous_fm_matrix_op_e_GT_op_e_bl, get(fm_matrix_op_e_GT_op_e_bl));
        compareAndPrint("fm_matrix_op_e_GT_op_e_br", previous_fm_matrix_op_e_GT_op_e_br, get(fm_matrix_op_e_GT_op_e_br));
        compareAndPrint("fm_matrix_op_e_GT_op_e_tr", previous_fm_matrix_op_e_GT_op_e_tr, get(fm_matrix_op_e_GT_op_e_tr));
        compareAndPrint("fm_matrix_op_e_GT_op_e_tl", previous_fm_matrix_op_e_GT_op_e_tl, get(fm_matrix_op_e_GT_op_e_tl));
        compareAndPrint("fm_matrix_op_e_GT_op_f_bl", previous_fm_matrix_op_e_GT_op_f_bl, get(fm_matrix_op_e_GT_op_f_bl));
        compareAndPrint("fm_matrix_op_e_GT_op_f_br", previous_fm_matrix_op_e_GT_op_f_br, get(fm_matrix_op_e_GT_op_f_br));
        compareAndPrint("fm_matrix_op_e_GT_op_f_tr", previous_fm_matrix_op_e_GT_op_f_tr, get(fm_matrix_op_e_GT_op_f_tr));
        compareAndPrint("fm_matrix_op_e_GT_op_f_tl", previous_fm_matrix_op_e_GT_op_f_tl, get(fm_matrix_op_e_GT_op_f_tl));
        compareAndPrint("fm_matrix_op_e_GT_op_x_bl", previous_fm_matrix_op_e_GT_op_x_bl, get(fm_matrix_op_e_GT_op_x_bl));
        compareAndPrint("fm_matrix_op_e_GT_op_x_br", previous_fm_matrix_op_e_GT_op_x_br, get(fm_matrix_op_e_GT_op_x_br));
        compareAndPrint("fm_matrix_op_e_GT_op_x_tr", previous_fm_matrix_op_e_GT_op_x_tr, get(fm_matrix_op_e_GT_op_x_tr));
        compareAndPrint("fm_matrix_op_e_GT_op_x_tl", previous_fm_matrix_op_e_GT_op_x_tl, get(fm_matrix_op_e_GT_op_x_tl));
        compareAndPrint("fm_matrix_op_e_GT_op_z_bl", previous_fm_matrix_op_e_GT_op_z_bl, get(fm_matrix_op_e_GT_op_z_bl));
        compareAndPrint("fm_matrix_op_e_GT_op_z_br", previous_fm_matrix_op_e_GT_op_z_br, get(fm_matrix_op_e_GT_op_z_br));
        compareAndPrint("fm_matrix_op_e_GT_op_z_tr", previous_fm_matrix_op_e_GT_op_z_tr, get(fm_matrix_op_e_GT_op_z_tr));
        compareAndPrint("fm_matrix_op_e_GT_op_z_tl", previous_fm_matrix_op_e_GT_op_z_tl, get(fm_matrix_op_e_GT_op_z_tl));
        compareAndPrint("fm_matrix_op_e_GT_out_bl", previous_fm_matrix_op_e_GT_out_bl, get(fm_matrix_op_e_GT_out_bl));
        compareAndPrint("fm_matrix_op_e_GT_out_br", previous_fm_matrix_op_e_GT_out_br, get(fm_matrix_op_e_GT_out_br));
        compareAndPrint("fm_matrix_op_e_GT_out_tr", previous_fm_matrix_op_e_GT_out_tr, get(fm_matrix_op_e_GT_out_tr));
        compareAndPrint("fm_matrix_op_e_GT_out_tl", previous_fm_matrix_op_e_GT_out_tl, get(fm_matrix_op_e_GT_out_tl));
        compareAndPrint("fm_matrix_op_e_GT_pan_bl", previous_fm_matrix_op_e_GT_pan_bl, get(fm_matrix_op_e_GT_pan_bl));
        compareAndPrint("fm_matrix_op_e_GT_pan_br", previous_fm_matrix_op_e_GT_pan_br, get(fm_matrix_op_e_GT_pan_br));
        compareAndPrint("fm_matrix_op_e_GT_pan_tr", previous_fm_matrix_op_e_GT_pan_tr, get(fm_matrix_op_e_GT_pan_tr));
        compareAndPrint("fm_matrix_op_e_GT_pan_tl", previous_fm_matrix_op_e_GT_pan_tl, get(fm_matrix_op_e_GT_pan_tl));
        compareAndPrint("fm_matrix_op_e_GT_in_bl", previous_fm_matrix_op_e_GT_in_bl, get(fm_matrix_op_e_GT_in_bl));
        compareAndPrint("fm_matrix_op_e_GT_in_br", previous_fm_matrix_op_e_GT_in_br, get(fm_matrix_op_e_GT_in_br));
        compareAndPrint("fm_matrix_op_e_GT_in_tr", previous_fm_matrix_op_e_GT_in_tr, get(fm_matrix_op_e_GT_in_tr));
        compareAndPrint("fm_matrix_op_e_GT_in_tl", previous_fm_matrix_op_e_GT_in_tl, get(fm_matrix_op_e_GT_in_tl));
        compareAndPrint("fm_matrix_op_f_GT_op_a_bl", previous_fm_matrix_op_f_GT_op_a_bl, get(fm_matrix_op_f_GT_op_a_bl));
        compareAndPrint("fm_matrix_op_f_GT_op_a_br", previous_fm_matrix_op_f_GT_op_a_br, get(fm_matrix_op_f_GT_op_a_br));
        compareAndPrint("fm_matrix_op_f_GT_op_a_tr", previous_fm_matrix_op_f_GT_op_a_tr, get(fm_matrix_op_f_GT_op_a_tr));
        compareAndPrint("fm_matrix_op_f_GT_op_a_tl", previous_fm_matrix_op_f_GT_op_a_tl, get(fm_matrix_op_f_GT_op_a_tl));
        compareAndPrint("fm_matrix_op_f_GT_op_b_bl", previous_fm_matrix_op_f_GT_op_b_bl, get(fm_matrix_op_f_GT_op_b_bl));
        compareAndPrint("fm_matrix_op_f_GT_op_b_br", previous_fm_matrix_op_f_GT_op_b_br, get(fm_matrix_op_f_GT_op_b_br));
        compareAndPrint("fm_matrix_op_f_GT_op_b_tr", previous_fm_matrix_op_f_GT_op_b_tr, get(fm_matrix_op_f_GT_op_b_tr));
        compareAndPrint("fm_matrix_op_f_GT_op_b_tl", previous_fm_matrix_op_f_GT_op_b_tl, get(fm_matrix_op_f_GT_op_b_tl));
        compareAndPrint("fm_matrix_op_f_GT_op_c_bl", previous_fm_matrix_op_f_GT_op_c_bl, get(fm_matrix_op_f_GT_op_c_bl));
        compareAndPrint("fm_matrix_op_f_GT_op_c_br", previous_fm_matrix_op_f_GT_op_c_br, get(fm_matrix_op_f_GT_op_c_br));
        compareAndPrint("fm_matrix_op_f_GT_op_c_tr", previous_fm_matrix_op_f_GT_op_c_tr, get(fm_matrix_op_f_GT_op_c_tr));
        compareAndPrint("fm_matrix_op_f_GT_op_c_tl", previous_fm_matrix_op_f_GT_op_c_tl, get(fm_matrix_op_f_GT_op_c_tl));
        compareAndPrint("fm_matrix_op_f_GT_op_d_bl", previous_fm_matrix_op_f_GT_op_d_bl, get(fm_matrix_op_f_GT_op_d_bl));
        compareAndPrint("fm_matrix_op_f_GT_op_d_br", previous_fm_matrix_op_f_GT_op_d_br, get(fm_matrix_op_f_GT_op_d_br));
        compareAndPrint("fm_matrix_op_f_GT_op_d_tr", previous_fm_matrix_op_f_GT_op_d_tr, get(fm_matrix_op_f_GT_op_d_tr));
        compareAndPrint("fm_matrix_op_f_GT_op_d_tl", previous_fm_matrix_op_f_GT_op_d_tl, get(fm_matrix_op_f_GT_op_d_tl));
        compareAndPrint("fm_matrix_op_f_GT_op_e_bl", previous_fm_matrix_op_f_GT_op_e_bl, get(fm_matrix_op_f_GT_op_e_bl));
        compareAndPrint("fm_matrix_op_f_GT_op_e_br", previous_fm_matrix_op_f_GT_op_e_br, get(fm_matrix_op_f_GT_op_e_br));
        compareAndPrint("fm_matrix_op_f_GT_op_e_tr", previous_fm_matrix_op_f_GT_op_e_tr, get(fm_matrix_op_f_GT_op_e_tr));
        compareAndPrint("fm_matrix_op_f_GT_op_e_tl", previous_fm_matrix_op_f_GT_op_e_tl, get(fm_matrix_op_f_GT_op_e_tl));
        compareAndPrint("fm_matrix_op_f_GT_op_f_bl", previous_fm_matrix_op_f_GT_op_f_bl, get(fm_matrix_op_f_GT_op_f_bl));
        compareAndPrint("fm_matrix_op_f_GT_op_f_br", previous_fm_matrix_op_f_GT_op_f_br, get(fm_matrix_op_f_GT_op_f_br));
        compareAndPrint("fm_matrix_op_f_GT_op_f_tr", previous_fm_matrix_op_f_GT_op_f_tr, get(fm_matrix_op_f_GT_op_f_tr));
        compareAndPrint("fm_matrix_op_f_GT_op_f_tl", previous_fm_matrix_op_f_GT_op_f_tl, get(fm_matrix_op_f_GT_op_f_tl));
        compareAndPrint("fm_matrix_op_f_GT_op_x_bl", previous_fm_matrix_op_f_GT_op_x_bl, get(fm_matrix_op_f_GT_op_x_bl));
        compareAndPrint("fm_matrix_op_f_GT_op_x_br", previous_fm_matrix_op_f_GT_op_x_br, get(fm_matrix_op_f_GT_op_x_br));
        compareAndPrint("fm_matrix_op_f_GT_op_x_tr", previous_fm_matrix_op_f_GT_op_x_tr, get(fm_matrix_op_f_GT_op_x_tr));
        compareAndPrint("fm_matrix_op_f_GT_op_x_tl", previous_fm_matrix_op_f_GT_op_x_tl, get(fm_matrix_op_f_GT_op_x_tl));
        compareAndPrint("fm_matrix_op_f_GT_op_z_bl", previous_fm_matrix_op_f_GT_op_z_bl, get(fm_matrix_op_f_GT_op_z_bl));
        compareAndPrint("fm_matrix_op_f_GT_op_z_br", previous_fm_matrix_op_f_GT_op_z_br, get(fm_matrix_op_f_GT_op_z_br));
        compareAndPrint("fm_matrix_op_f_GT_op_z_tr", previous_fm_matrix_op_f_GT_op_z_tr, get(fm_matrix_op_f_GT_op_z_tr));
        compareAndPrint("fm_matrix_op_f_GT_op_z_tl", previous_fm_matrix_op_f_GT_op_z_tl, get(fm_matrix_op_f_GT_op_z_tl));
        compareAndPrint("fm_matrix_op_f_GT_out_bl", previous_fm_matrix_op_f_GT_out_bl, get(fm_matrix_op_f_GT_out_bl));
        compareAndPrint("fm_matrix_op_f_GT_out_br", previous_fm_matrix_op_f_GT_out_br, get(fm_matrix_op_f_GT_out_br));
        compareAndPrint("fm_matrix_op_f_GT_out_tr", previous_fm_matrix_op_f_GT_out_tr, get(fm_matrix_op_f_GT_out_tr));
        compareAndPrint("fm_matrix_op_f_GT_out_tl", previous_fm_matrix_op_f_GT_out_tl, get(fm_matrix_op_f_GT_out_tl));
        compareAndPrint("fm_matrix_op_f_GT_pan_bl", previous_fm_matrix_op_f_GT_pan_bl, get(fm_matrix_op_f_GT_pan_bl));
        compareAndPrint("fm_matrix_op_f_GT_pan_br", previous_fm_matrix_op_f_GT_pan_br, get(fm_matrix_op_f_GT_pan_br));
        compareAndPrint("fm_matrix_op_f_GT_pan_tr", previous_fm_matrix_op_f_GT_pan_tr, get(fm_matrix_op_f_GT_pan_tr));
        compareAndPrint("fm_matrix_op_f_GT_pan_tl", previous_fm_matrix_op_f_GT_pan_tl, get(fm_matrix_op_f_GT_pan_tl));
        compareAndPrint("fm_matrix_op_f_GT_in_bl", previous_fm_matrix_op_f_GT_in_bl, get(fm_matrix_op_f_GT_in_bl));
        compareAndPrint("fm_matrix_op_f_GT_in_br", previous_fm_matrix_op_f_GT_in_br, get(fm_matrix_op_f_GT_in_br));
        compareAndPrint("fm_matrix_op_f_GT_in_tr", previous_fm_matrix_op_f_GT_in_tr, get(fm_matrix_op_f_GT_in_tr));
        compareAndPrint("fm_matrix_op_f_GT_in_tl", previous_fm_matrix_op_f_GT_in_tl, get(fm_matrix_op_f_GT_in_tl));
        compareAndPrint("fm_matrix_op_x_GT_op_a_bl", previous_fm_matrix_op_x_GT_op_a_bl, get(fm_matrix_op_x_GT_op_a_bl));
        compareAndPrint("fm_matrix_op_x_GT_op_a_br", previous_fm_matrix_op_x_GT_op_a_br, get(fm_matrix_op_x_GT_op_a_br));
        compareAndPrint("fm_matrix_op_x_GT_op_a_tr", previous_fm_matrix_op_x_GT_op_a_tr, get(fm_matrix_op_x_GT_op_a_tr));
        compareAndPrint("fm_matrix_op_x_GT_op_a_tl", previous_fm_matrix_op_x_GT_op_a_tl, get(fm_matrix_op_x_GT_op_a_tl));
        compareAndPrint("fm_matrix_op_x_GT_op_b_bl", previous_fm_matrix_op_x_GT_op_b_bl, get(fm_matrix_op_x_GT_op_b_bl));
        compareAndPrint("fm_matrix_op_x_GT_op_b_br", previous_fm_matrix_op_x_GT_op_b_br, get(fm_matrix_op_x_GT_op_b_br));
        compareAndPrint("fm_matrix_op_x_GT_op_b_tr", previous_fm_matrix_op_x_GT_op_b_tr, get(fm_matrix_op_x_GT_op_b_tr));
        compareAndPrint("fm_matrix_op_x_GT_op_b_tl", previous_fm_matrix_op_x_GT_op_b_tl, get(fm_matrix_op_x_GT_op_b_tl));
        compareAndPrint("fm_matrix_op_x_GT_op_c_bl", previous_fm_matrix_op_x_GT_op_c_bl, get(fm_matrix_op_x_GT_op_c_bl));
        compareAndPrint("fm_matrix_op_x_GT_op_c_br", previous_fm_matrix_op_x_GT_op_c_br, get(fm_matrix_op_x_GT_op_c_br));
        compareAndPrint("fm_matrix_op_x_GT_op_c_tr", previous_fm_matrix_op_x_GT_op_c_tr, get(fm_matrix_op_x_GT_op_c_tr));
        compareAndPrint("fm_matrix_op_x_GT_op_c_tl", previous_fm_matrix_op_x_GT_op_c_tl, get(fm_matrix_op_x_GT_op_c_tl));
        compareAndPrint("fm_matrix_op_x_GT_op_d_bl", previous_fm_matrix_op_x_GT_op_d_bl, get(fm_matrix_op_x_GT_op_d_bl));
        compareAndPrint("fm_matrix_op_x_GT_op_d_br", previous_fm_matrix_op_x_GT_op_d_br, get(fm_matrix_op_x_GT_op_d_br));
        compareAndPrint("fm_matrix_op_x_GT_op_d_tr", previous_fm_matrix_op_x_GT_op_d_tr, get(fm_matrix_op_x_GT_op_d_tr));
        compareAndPrint("fm_matrix_op_x_GT_op_d_tl", previous_fm_matrix_op_x_GT_op_d_tl, get(fm_matrix_op_x_GT_op_d_tl));
        compareAndPrint("fm_matrix_op_x_GT_op_e_bl", previous_fm_matrix_op_x_GT_op_e_bl, get(fm_matrix_op_x_GT_op_e_bl));
        compareAndPrint("fm_matrix_op_x_GT_op_e_br", previous_fm_matrix_op_x_GT_op_e_br, get(fm_matrix_op_x_GT_op_e_br));
        compareAndPrint("fm_matrix_op_x_GT_op_e_tr", previous_fm_matrix_op_x_GT_op_e_tr, get(fm_matrix_op_x_GT_op_e_tr));
        compareAndPrint("fm_matrix_op_x_GT_op_e_tl", previous_fm_matrix_op_x_GT_op_e_tl, get(fm_matrix_op_x_GT_op_e_tl));
        compareAndPrint("fm_matrix_op_x_GT_op_f_bl", previous_fm_matrix_op_x_GT_op_f_bl, get(fm_matrix_op_x_GT_op_f_bl));
        compareAndPrint("fm_matrix_op_x_GT_op_f_br", previous_fm_matrix_op_x_GT_op_f_br, get(fm_matrix_op_x_GT_op_f_br));
        compareAndPrint("fm_matrix_op_x_GT_op_f_tr", previous_fm_matrix_op_x_GT_op_f_tr, get(fm_matrix_op_x_GT_op_f_tr));
        compareAndPrint("fm_matrix_op_x_GT_op_f_tl", previous_fm_matrix_op_x_GT_op_f_tl, get(fm_matrix_op_x_GT_op_f_tl));
        compareAndPrint("fm_matrix_op_x_GT_op_z_bl", previous_fm_matrix_op_x_GT_op_z_bl, get(fm_matrix_op_x_GT_op_z_bl));
        compareAndPrint("fm_matrix_op_x_GT_op_z_br", previous_fm_matrix_op_x_GT_op_z_br, get(fm_matrix_op_x_GT_op_z_br));
        compareAndPrint("fm_matrix_op_x_GT_op_z_tr", previous_fm_matrix_op_x_GT_op_z_tr, get(fm_matrix_op_x_GT_op_z_tr));
        compareAndPrint("fm_matrix_op_x_GT_op_z_tl", previous_fm_matrix_op_x_GT_op_z_tl, get(fm_matrix_op_x_GT_op_z_tl));
        compareAndPrint("fm_matrix_op_x_GT_out_bl", previous_fm_matrix_op_x_GT_out_bl, get(fm_matrix_op_x_GT_out_bl));
        compareAndPrint("fm_matrix_op_x_GT_out_br", previous_fm_matrix_op_x_GT_out_br, get(fm_matrix_op_x_GT_out_br));
        compareAndPrint("fm_matrix_op_x_GT_out_tr", previous_fm_matrix_op_x_GT_out_tr, get(fm_matrix_op_x_GT_out_tr));
        compareAndPrint("fm_matrix_op_x_GT_out_tl", previous_fm_matrix_op_x_GT_out_tl, get(fm_matrix_op_x_GT_out_tl));
        compareAndPrint("fm_matrix_op_x_GT_pan_bl", previous_fm_matrix_op_x_GT_pan_bl, get(fm_matrix_op_x_GT_pan_bl));
        compareAndPrint("fm_matrix_op_x_GT_pan_br", previous_fm_matrix_op_x_GT_pan_br, get(fm_matrix_op_x_GT_pan_br));
        compareAndPrint("fm_matrix_op_x_GT_pan_tr", previous_fm_matrix_op_x_GT_pan_tr, get(fm_matrix_op_x_GT_pan_tr));
        compareAndPrint("fm_matrix_op_x_GT_pan_tl", previous_fm_matrix_op_x_GT_pan_tl, get(fm_matrix_op_x_GT_pan_tl));
        compareAndPrint("fm_matrix_op_x_GT_in_bl", previous_fm_matrix_op_x_GT_in_bl, get(fm_matrix_op_x_GT_in_bl));
        compareAndPrint("fm_matrix_op_x_GT_in_br", previous_fm_matrix_op_x_GT_in_br, get(fm_matrix_op_x_GT_in_br));
        compareAndPrint("fm_matrix_op_x_GT_in_tr", previous_fm_matrix_op_x_GT_in_tr, get(fm_matrix_op_x_GT_in_tr));
        compareAndPrint("fm_matrix_op_x_GT_in_tl", previous_fm_matrix_op_x_GT_in_tl, get(fm_matrix_op_x_GT_in_tl));
        compareAndPrint("fm_matrix_op_z_GT_op_a_bl", previous_fm_matrix_op_z_GT_op_a_bl, get(fm_matrix_op_z_GT_op_a_bl));
        compareAndPrint("fm_matrix_op_z_GT_op_a_br", previous_fm_matrix_op_z_GT_op_a_br, get(fm_matrix_op_z_GT_op_a_br));
        compareAndPrint("fm_matrix_op_z_GT_op_a_tr", previous_fm_matrix_op_z_GT_op_a_tr, get(fm_matrix_op_z_GT_op_a_tr));
        compareAndPrint("fm_matrix_op_z_GT_op_a_tl", previous_fm_matrix_op_z_GT_op_a_tl, get(fm_matrix_op_z_GT_op_a_tl));
        compareAndPrint("fm_matrix_op_z_GT_op_b_bl", previous_fm_matrix_op_z_GT_op_b_bl, get(fm_matrix_op_z_GT_op_b_bl));
        compareAndPrint("fm_matrix_op_z_GT_op_b_br", previous_fm_matrix_op_z_GT_op_b_br, get(fm_matrix_op_z_GT_op_b_br));
        compareAndPrint("fm_matrix_op_z_GT_op_b_tr", previous_fm_matrix_op_z_GT_op_b_tr, get(fm_matrix_op_z_GT_op_b_tr));
        compareAndPrint("fm_matrix_op_z_GT_op_b_tl", previous_fm_matrix_op_z_GT_op_b_tl, get(fm_matrix_op_z_GT_op_b_tl));
        compareAndPrint("fm_matrix_op_z_GT_op_c_bl", previous_fm_matrix_op_z_GT_op_c_bl, get(fm_matrix_op_z_GT_op_c_bl));
        compareAndPrint("fm_matrix_op_z_GT_op_c_br", previous_fm_matrix_op_z_GT_op_c_br, get(fm_matrix_op_z_GT_op_c_br));
        compareAndPrint("fm_matrix_op_z_GT_op_c_tr", previous_fm_matrix_op_z_GT_op_c_tr, get(fm_matrix_op_z_GT_op_c_tr));
        compareAndPrint("fm_matrix_op_z_GT_op_c_tl", previous_fm_matrix_op_z_GT_op_c_tl, get(fm_matrix_op_z_GT_op_c_tl));
        compareAndPrint("fm_matrix_op_z_GT_op_d_bl", previous_fm_matrix_op_z_GT_op_d_bl, get(fm_matrix_op_z_GT_op_d_bl));
        compareAndPrint("fm_matrix_op_z_GT_op_d_br", previous_fm_matrix_op_z_GT_op_d_br, get(fm_matrix_op_z_GT_op_d_br));
        compareAndPrint("fm_matrix_op_z_GT_op_d_tr", previous_fm_matrix_op_z_GT_op_d_tr, get(fm_matrix_op_z_GT_op_d_tr));
        compareAndPrint("fm_matrix_op_z_GT_op_d_tl", previous_fm_matrix_op_z_GT_op_d_tl, get(fm_matrix_op_z_GT_op_d_tl));
        compareAndPrint("fm_matrix_op_z_GT_op_e_bl", previous_fm_matrix_op_z_GT_op_e_bl, get(fm_matrix_op_z_GT_op_e_bl));
        compareAndPrint("fm_matrix_op_z_GT_op_e_br", previous_fm_matrix_op_z_GT_op_e_br, get(fm_matrix_op_z_GT_op_e_br));
        compareAndPrint("fm_matrix_op_z_GT_op_e_tr", previous_fm_matrix_op_z_GT_op_e_tr, get(fm_matrix_op_z_GT_op_e_tr));
        compareAndPrint("fm_matrix_op_z_GT_op_e_tl", previous_fm_matrix_op_z_GT_op_e_tl, get(fm_matrix_op_z_GT_op_e_tl));
        compareAndPrint("fm_matrix_op_z_GT_op_f_bl", previous_fm_matrix_op_z_GT_op_f_bl, get(fm_matrix_op_z_GT_op_f_bl));
        compareAndPrint("fm_matrix_op_z_GT_op_f_br", previous_fm_matrix_op_z_GT_op_f_br, get(fm_matrix_op_z_GT_op_f_br));
        compareAndPrint("fm_matrix_op_z_GT_op_f_tr", previous_fm_matrix_op_z_GT_op_f_tr, get(fm_matrix_op_z_GT_op_f_tr));
        compareAndPrint("fm_matrix_op_z_GT_op_f_tl", previous_fm_matrix_op_z_GT_op_f_tl, get(fm_matrix_op_z_GT_op_f_tl));
        compareAndPrint("fm_matrix_op_z_GT_op_x_bl", previous_fm_matrix_op_z_GT_op_x_bl, get(fm_matrix_op_z_GT_op_x_bl));
        compareAndPrint("fm_matrix_op_z_GT_op_x_br", previous_fm_matrix_op_z_GT_op_x_br, get(fm_matrix_op_z_GT_op_x_br));
        compareAndPrint("fm_matrix_op_z_GT_op_x_tr", previous_fm_matrix_op_z_GT_op_x_tr, get(fm_matrix_op_z_GT_op_x_tr));
        compareAndPrint("fm_matrix_op_z_GT_op_x_tl", previous_fm_matrix_op_z_GT_op_x_tl, get(fm_matrix_op_z_GT_op_x_tl));
        compareAndPrint("fm_matrix_op_z_GT_out_bl", previous_fm_matrix_op_z_GT_out_bl, get(fm_matrix_op_z_GT_out_bl));
        compareAndPrint("fm_matrix_op_z_GT_out_br", previous_fm_matrix_op_z_GT_out_br, get(fm_matrix_op_z_GT_out_br));
        compareAndPrint("fm_matrix_op_z_GT_out_tr", previous_fm_matrix_op_z_GT_out_tr, get(fm_matrix_op_z_GT_out_tr));
        compareAndPrint("fm_matrix_op_z_GT_out_tl", previous_fm_matrix_op_z_GT_out_tl, get(fm_matrix_op_z_GT_out_tl));
        compareAndPrint("fm_matrix_op_z_GT_pan_bl", previous_fm_matrix_op_z_GT_pan_bl, get(fm_matrix_op_z_GT_pan_bl));
        compareAndPrint("fm_matrix_op_z_GT_pan_br", previous_fm_matrix_op_z_GT_pan_br, get(fm_matrix_op_z_GT_pan_br));
        compareAndPrint("fm_matrix_op_z_GT_pan_tr", previous_fm_matrix_op_z_GT_pan_tr, get(fm_matrix_op_z_GT_pan_tr));
        compareAndPrint("fm_matrix_op_z_GT_pan_tl", previous_fm_matrix_op_z_GT_pan_tl, get(fm_matrix_op_z_GT_pan_tl));
        compareAndPrint("fm_matrix_op_z_GT_in_bl", previous_fm_matrix_op_z_GT_in_bl, get(fm_matrix_op_z_GT_in_bl));
        compareAndPrint("fm_matrix_op_z_GT_in_br", previous_fm_matrix_op_z_GT_in_br, get(fm_matrix_op_z_GT_in_br));
        compareAndPrint("fm_matrix_op_z_GT_in_tr", previous_fm_matrix_op_z_GT_in_tr, get(fm_matrix_op_z_GT_in_tr));
        compareAndPrint("fm_matrix_op_z_GT_in_tl", previous_fm_matrix_op_z_GT_in_tl, get(fm_matrix_op_z_GT_in_tl));
        compareAndPrint("fm_matrix_in_GT_op_a_bl", previous_fm_matrix_in_GT_op_a_bl, get(fm_matrix_in_GT_op_a_bl));
        compareAndPrint("fm_matrix_in_GT_op_a_br", previous_fm_matrix_in_GT_op_a_br, get(fm_matrix_in_GT_op_a_br));
        compareAndPrint("fm_matrix_in_GT_op_a_tr", previous_fm_matrix_in_GT_op_a_tr, get(fm_matrix_in_GT_op_a_tr));
        compareAndPrint("fm_matrix_in_GT_op_a_tl", previous_fm_matrix_in_GT_op_a_tl, get(fm_matrix_in_GT_op_a_tl));
        compareAndPrint("fm_matrix_in_GT_op_b_bl", previous_fm_matrix_in_GT_op_b_bl, get(fm_matrix_in_GT_op_b_bl));
        compareAndPrint("fm_matrix_in_GT_op_b_br", previous_fm_matrix_in_GT_op_b_br, get(fm_matrix_in_GT_op_b_br));
        compareAndPrint("fm_matrix_in_GT_op_b_tr", previous_fm_matrix_in_GT_op_b_tr, get(fm_matrix_in_GT_op_b_tr));
        compareAndPrint("fm_matrix_in_GT_op_b_tl", previous_fm_matrix_in_GT_op_b_tl, get(fm_matrix_in_GT_op_b_tl));
        compareAndPrint("fm_matrix_in_GT_op_c_bl", previous_fm_matrix_in_GT_op_c_bl, get(fm_matrix_in_GT_op_c_bl));
        compareAndPrint("fm_matrix_in_GT_op_c_br", previous_fm_matrix_in_GT_op_c_br, get(fm_matrix_in_GT_op_c_br));
        compareAndPrint("fm_matrix_in_GT_op_c_tr", previous_fm_matrix_in_GT_op_c_tr, get(fm_matrix_in_GT_op_c_tr));
        compareAndPrint("fm_matrix_in_GT_op_c_tl", previous_fm_matrix_in_GT_op_c_tl, get(fm_matrix_in_GT_op_c_tl));
        compareAndPrint("fm_matrix_in_GT_op_d_bl", previous_fm_matrix_in_GT_op_d_bl, get(fm_matrix_in_GT_op_d_bl));
        compareAndPrint("fm_matrix_in_GT_op_d_br", previous_fm_matrix_in_GT_op_d_br, get(fm_matrix_in_GT_op_d_br));
        compareAndPrint("fm_matrix_in_GT_op_d_tr", previous_fm_matrix_in_GT_op_d_tr, get(fm_matrix_in_GT_op_d_tr));
        compareAndPrint("fm_matrix_in_GT_op_d_tl", previous_fm_matrix_in_GT_op_d_tl, get(fm_matrix_in_GT_op_d_tl));
        compareAndPrint("fm_matrix_in_GT_op_e_bl", previous_fm_matrix_in_GT_op_e_bl, get(fm_matrix_in_GT_op_e_bl));
        compareAndPrint("fm_matrix_in_GT_op_e_br", previous_fm_matrix_in_GT_op_e_br, get(fm_matrix_in_GT_op_e_br));
        compareAndPrint("fm_matrix_in_GT_op_e_tr", previous_fm_matrix_in_GT_op_e_tr, get(fm_matrix_in_GT_op_e_tr));
        compareAndPrint("fm_matrix_in_GT_op_e_tl", previous_fm_matrix_in_GT_op_e_tl, get(fm_matrix_in_GT_op_e_tl));
        compareAndPrint("fm_matrix_in_GT_op_f_bl", previous_fm_matrix_in_GT_op_f_bl, get(fm_matrix_in_GT_op_f_bl));
        compareAndPrint("fm_matrix_in_GT_op_f_br", previous_fm_matrix_in_GT_op_f_br, get(fm_matrix_in_GT_op_f_br));
        compareAndPrint("fm_matrix_in_GT_op_f_tr", previous_fm_matrix_in_GT_op_f_tr, get(fm_matrix_in_GT_op_f_tr));
        compareAndPrint("fm_matrix_in_GT_op_f_tl", previous_fm_matrix_in_GT_op_f_tl, get(fm_matrix_in_GT_op_f_tl));
        compareAndPrint("fm_matrix_in_GT_op_x_bl", previous_fm_matrix_in_GT_op_x_bl, get(fm_matrix_in_GT_op_x_bl));
        compareAndPrint("fm_matrix_in_GT_op_x_br", previous_fm_matrix_in_GT_op_x_br, get(fm_matrix_in_GT_op_x_br));
        compareAndPrint("fm_matrix_in_GT_op_x_tr", previous_fm_matrix_in_GT_op_x_tr, get(fm_matrix_in_GT_op_x_tr));
        compareAndPrint("fm_matrix_in_GT_op_x_tl", previous_fm_matrix_in_GT_op_x_tl, get(fm_matrix_in_GT_op_x_tl));
        compareAndPrint("fm_matrix_in_GT_op_z_bl", previous_fm_matrix_in_GT_op_z_bl, get(fm_matrix_in_GT_op_z_bl));
        compareAndPrint("fm_matrix_in_GT_op_z_br", previous_fm_matrix_in_GT_op_z_br, get(fm_matrix_in_GT_op_z_br));
        compareAndPrint("fm_matrix_in_GT_op_z_tr", previous_fm_matrix_in_GT_op_z_tr, get(fm_matrix_in_GT_op_z_tr));
        compareAndPrint("fm_matrix_in_GT_op_z_tl", previous_fm_matrix_in_GT_op_z_tl, get(fm_matrix_in_GT_op_z_tl));
        compareAndPrint("fm_matrix_in_GT_out_bl", previous_fm_matrix_in_GT_out_bl, get(fm_matrix_in_GT_out_bl));
        compareAndPrint("fm_matrix_in_GT_out_br", previous_fm_matrix_in_GT_out_br, get(fm_matrix_in_GT_out_br));
        compareAndPrint("fm_matrix_in_GT_out_tr", previous_fm_matrix_in_GT_out_tr, get(fm_matrix_in_GT_out_tr));
        compareAndPrint("fm_matrix_in_GT_out_tl", previous_fm_matrix_in_GT_out_tl, get(fm_matrix_in_GT_out_tl));
        compareAndPrint("fm_matrix_in_GT_pan_bl", previous_fm_matrix_in_GT_pan_bl, get(fm_matrix_in_GT_pan_bl));
        compareAndPrint("fm_matrix_in_GT_pan_br", previous_fm_matrix_in_GT_pan_br, get(fm_matrix_in_GT_pan_br));
        compareAndPrint("fm_matrix_in_GT_pan_tr", previous_fm_matrix_in_GT_pan_tr, get(fm_matrix_in_GT_pan_tr));
        compareAndPrint("fm_matrix_in_GT_pan_tl", previous_fm_matrix_in_GT_pan_tl, get(fm_matrix_in_GT_pan_tl));
        compareAndPrint("fm_matrix_in_GT_in_bl", previous_fm_matrix_in_GT_in_bl, get(fm_matrix_in_GT_in_bl));
        compareAndPrint("fm_matrix_in_GT_in_br", previous_fm_matrix_in_GT_in_br, get(fm_matrix_in_GT_in_br));
        compareAndPrint("fm_matrix_in_GT_in_tr", previous_fm_matrix_in_GT_in_tr, get(fm_matrix_in_GT_in_tr));
        compareAndPrint("fm_matrix_in_GT_in_tl", previous_fm_matrix_in_GT_in_tl, get(fm_matrix_in_GT_in_tl));
        compareAndPrint("filter_bypass", previous_filter_bypass, get(filter_bypass));
        compareAndPrint("saturator_bypass", previous_saturator_bypass, get(saturator_bypass));
        compareAndPrint("pitch_envelope_amount", previous_pitch_envelope_amount, get(pitch_envelope_amount));
        compareAndPrint("stretch_octaves", previous_stretch_octaves, get(stretch_octaves));
        compareAndPrint("pitchbend_mode", previous_pitchbend_mode, get(pitchbend_mode));
        compareAndPrint("input_on_off_bl", previous_input_on_off_bl, get(input_on_off_bl));
        compareAndPrint("input_on_off_br", previous_input_on_off_br, get(input_on_off_br));
        compareAndPrint("input_on_off_tr", previous_input_on_off_tr, get(input_on_off_tr));
        compareAndPrint("input_on_off_tl", previous_input_on_off_tl, get(input_on_off_tl));
        compareAndPrint("op_a_envelope_tempo_sync", previous_op_a_envelope_tempo_sync, get(op_a_envelope_tempo_sync));
        compareAndPrint("op_b_envelope_tempo_sync", previous_op_b_envelope_tempo_sync, get(op_b_envelope_tempo_sync));
        compareAndPrint("op_c_envelope_tempo_sync", previous_op_c_envelope_tempo_sync, get(op_c_envelope_tempo_sync));
        compareAndPrint("op_d_envelope_tempo_sync", previous_op_d_envelope_tempo_sync, get(op_d_envelope_tempo_sync));
        compareAndPrint("op_e_envelope_tempo_sync", previous_op_e_envelope_tempo_sync, get(op_e_envelope_tempo_sync));
        compareAndPrint("op_f_envelope_tempo_sync", previous_op_f_envelope_tempo_sync, get(op_f_envelope_tempo_sync));
        compareAndPrint("op_x_envelope_tempo_sync", previous_op_x_envelope_tempo_sync, get(op_x_envelope_tempo_sync));
        compareAndPrint("op_z_envelope_tempo_sync", previous_op_z_envelope_tempo_sync, get(op_z_envelope_tempo_sync));
        compareAndPrint("pitch_envelope_tempo_sync", previous_pitch_envelope_tempo_sync, get(pitch_envelope_tempo_sync));
        compareAndPrint("freerun_or_keysync_of_op_a", previous_freerun_or_keysync_of_op_a, get(freerun_or_keysync_of_op_a));
        compareAndPrint("freerun_or_keysync_of_op_b", previous_freerun_or_keysync_of_op_b, get(freerun_or_keysync_of_op_b));
        compareAndPrint("freerun_or_keysync_of_op_c", previous_freerun_or_keysync_of_op_c, get(freerun_or_keysync_of_op_c));
        compareAndPrint("freerun_or_keysync_of_op_d", previous_freerun_or_keysync_of_op_d, get(freerun_or_keysync_of_op_d));
        compareAndPrint("freerun_or_keysync_of_op_e", previous_freerun_or_keysync_of_op_e, get(freerun_or_keysync_of_op_e));
        compareAndPrint("freerun_or_keysync_of_op_f", previous_freerun_or_keysync_of_op_f, get(freerun_or_keysync_of_op_f));
        compareAndPrint("freerun_or_keysync_of_op_x", previous_freerun_or_keysync_of_op_x, get(freerun_or_keysync_of_op_x));
        compareAndPrint("freerun_or_keysync_of_op_z", previous_freerun_or_keysync_of_op_z, get(freerun_or_keysync_of_op_z));
        compareAndPrint("freerun_or_keysync_of_pitch", previous_freerun_or_keysync_of_pitch, get(freerun_or_keysync_of_pitch));
        compareAndPrint("op_a_velocity_sensivity", previous_op_a_velocity_sensivity, get(op_a_velocity_sensivity));
        compareAndPrint("op_b_velocity_sensivity", previous_op_b_velocity_sensivity, get(op_b_velocity_sensivity));
        compareAndPrint("op_c_velocity_sensivity", previous_op_c_velocity_sensivity, get(op_c_velocity_sensivity));
        compareAndPrint("op_d_velocity_sensivity", previous_op_d_velocity_sensivity, get(op_d_velocity_sensivity));
        compareAndPrint("op_e_velocity_sensivity", previous_op_e_velocity_sensivity, get(op_e_velocity_sensivity));
        compareAndPrint("op_f_velocity_sensivity", previous_op_f_velocity_sensivity, get(op_f_velocity_sensivity));
        compareAndPrint("op_x_velocity_sensivity", previous_op_x_velocity_sensivity, get(op_x_velocity_sensivity));
        compareAndPrint("op_z_velocity_sensivity", previous_op_z_velocity_sensivity, get(op_z_velocity_sensivity));
        compareAndPrint("pitch_velocity_sensivity", previous_pitch_velocity_sensivity, get(pitch_velocity_sensivity));
        compareAndPrint("op_a_envelope_keyboard_scaling", previous_op_a_envelope_keyboard_scaling, get(op_a_envelope_keyboard_scaling));
        compareAndPrint("op_b_envelope_keyboard_scaling", previous_op_b_envelope_keyboard_scaling, get(op_b_envelope_keyboard_scaling));
        compareAndPrint("op_c_envelope_keyboard_scaling", previous_op_c_envelope_keyboard_scaling, get(op_c_envelope_keyboard_scaling));
        compareAndPrint("op_d_envelope_keyboard_scaling", previous_op_d_envelope_keyboard_scaling, get(op_d_envelope_keyboard_scaling));
        compareAndPrint("op_e_envelope_keyboard_scaling", previous_op_e_envelope_keyboard_scaling, get(op_e_envelope_keyboard_scaling));
        compareAndPrint("op_f_envelope_keyboard_scaling", previous_op_f_envelope_keyboard_scaling, get(op_f_envelope_keyboard_scaling));
        compareAndPrint("op_x_envelope_keyboard_scaling", previous_op_x_envelope_keyboard_scaling, get(op_x_envelope_keyboard_scaling));
        compareAndPrint("op_z_envelope_keyboard_scaling", previous_op_z_envelope_keyboard_scaling, get(op_z_envelope_keyboard_scaling));
        compareAndPrint("pitch_envelope_keyboard_scaling", previous_pitch_envelope_keyboard_scaling, get(pitch_envelope_keyboard_scaling));
        compareAndPrint("op_a_envelope_velocity_scaling", previous_op_a_envelope_velocity_scaling, get(op_a_envelope_velocity_scaling));
        compareAndPrint("op_b_envelope_velocity_scaling", previous_op_b_envelope_velocity_scaling, get(op_b_envelope_velocity_scaling));
        compareAndPrint("op_c_envelope_velocity_scaling", previous_op_c_envelope_velocity_scaling, get(op_c_envelope_velocity_scaling));
        compareAndPrint("op_d_envelope_velocity_scaling", previous_op_d_envelope_velocity_scaling, get(op_d_envelope_velocity_scaling));
        compareAndPrint("op_e_envelope_velocity_scaling", previous_op_e_envelope_velocity_scaling, get(op_e_envelope_velocity_scaling));
        compareAndPrint("op_f_envelope_velocity_scaling", previous_op_f_envelope_velocity_scaling, get(op_f_envelope_velocity_scaling));
        compareAndPrint("op_x_envelope_velocity_scaling", previous_op_x_envelope_velocity_scaling, get(op_x_envelope_velocity_scaling));
        compareAndPrint("op_z_envelope_velocity_scaling", previous_op_z_envelope_velocity_scaling, get(op_z_envelope_velocity_scaling));
        compareAndPrint("pitch_envelope_velocity_scaling", previous_pitch_envelope_velocity_scaling, get(pitch_envelope_velocity_scaling));
        compareAndPrint("op_a_wave_invert", previous_op_a_wave_invert, get(op_a_wave_invert));
        compareAndPrint("op_b_wave_invert", previous_op_b_wave_invert, get(op_b_wave_invert));
        compareAndPrint("op_c_wave_invert", previous_op_c_wave_invert, get(op_c_wave_invert));
        compareAndPrint("op_d_wave_invert", previous_op_d_wave_invert, get(op_d_wave_invert));
        compareAndPrint("op_e_wave_invert", previous_op_e_wave_invert, get(op_e_wave_invert));
        compareAndPrint("op_f_wave_invert", previous_op_f_wave_invert, get(op_f_wave_invert));
        compareAndPrint("op_x_wave_invert", previous_op_x_wave_invert, get(op_x_wave_invert));
        compareAndPrint("op_z_wave_invert", previous_op_z_wave_invert, get(op_z_wave_invert));
        compareAndPrint("pitch_wave_invert", previous_pitch_wave_invert, get(pitch_wave_invert));
        compareAndPrint("op_a_pitch_envelope", previous_op_a_pitch_envelope, get(op_a_pitch_envelope));
        compareAndPrint("op_b_pitch_envelope", previous_op_b_pitch_envelope, get(op_b_pitch_envelope));
        compareAndPrint("op_c_pitch_envelope", previous_op_c_pitch_envelope, get(op_c_pitch_envelope));
        compareAndPrint("op_d_pitch_envelope", previous_op_d_pitch_envelope, get(op_d_pitch_envelope));
        compareAndPrint("op_e_pitch_envelope", previous_op_e_pitch_envelope, get(op_e_pitch_envelope));
        compareAndPrint("op_f_pitch_envelope", previous_op_f_pitch_envelope, get(op_f_pitch_envelope));
        compareAndPrint("op_x_pitch_envelope", previous_op_x_pitch_envelope, get(op_x_pitch_envelope));
        compareAndPrint("op_z_pitch_envelope", previous_op_z_pitch_envelope, get(op_z_pitch_envelope));
        compareAndPrint("pitch_pitch_envelope", previous_pitch_pitch_envelope, get(pitch_pitch_envelope));
        compareAndPrint("op_a_envelope_mode_loop", previous_op_a_envelope_mode_loop, get(op_a_envelope_mode_loop));
        compareAndPrint("op_b_envelope_mode_loop", previous_op_b_envelope_mode_loop, get(op_b_envelope_mode_loop));
        compareAndPrint("op_c_envelope_mode_loop", previous_op_c_envelope_mode_loop, get(op_c_envelope_mode_loop));
        compareAndPrint("op_d_envelope_mode_loop", previous_op_d_envelope_mode_loop, get(op_d_envelope_mode_loop));
        compareAndPrint("op_e_envelope_mode_loop", previous_op_e_envelope_mode_loop, get(op_e_envelope_mode_loop));
        compareAndPrint("op_f_envelope_mode_loop", previous_op_f_envelope_mode_loop, get(op_f_envelope_mode_loop));
        compareAndPrint("op_x_envelope_mode_loop", previous_op_x_envelope_mode_loop, get(op_x_envelope_mode_loop));
        compareAndPrint("op_z_envelope_mode_loop", previous_op_z_envelope_mode_loop, get(op_z_envelope_mode_loop));
        compareAndPrint("pitch_envelope_mode_loop", previous_pitch_envelope_mode_loop, get(pitch_envelope_mode_loop));
        compareAndPrint("op_a_envelope_mode_release", previous_op_a_envelope_mode_release, get(op_a_envelope_mode_release));
        compareAndPrint("op_b_envelope_mode_release", previous_op_b_envelope_mode_release, get(op_b_envelope_mode_release));
        compareAndPrint("op_c_envelope_mode_release", previous_op_c_envelope_mode_release, get(op_c_envelope_mode_release));
        compareAndPrint("op_d_envelope_mode_release", previous_op_d_envelope_mode_release, get(op_d_envelope_mode_release));
        compareAndPrint("op_e_envelope_mode_release", previous_op_e_envelope_mode_release, get(op_e_envelope_mode_release));
        compareAndPrint("op_f_envelope_mode_release", previous_op_f_envelope_mode_release, get(op_f_envelope_mode_release));
        compareAndPrint("op_x_envelope_mode_release", previous_op_x_envelope_mode_release, get(op_x_envelope_mode_release));
        compareAndPrint("op_z_envelope_mode_release", previous_op_z_envelope_mode_release, get(op_z_envelope_mode_release));
        compareAndPrint("pitch_envelope_mode_release", previous_pitch_envelope_mode_release, get(pitch_envelope_mode_release));
        compareAndPrint("op_a_on_off_bl", previous_op_a_on_off_bl, get(op_a_on_off_bl));
        compareAndPrint("op_a_on_off_br", previous_op_a_on_off_br, get(op_a_on_off_br));
        compareAndPrint("op_a_on_off_tr", previous_op_a_on_off_tr, get(op_a_on_off_tr));
        compareAndPrint("op_a_on_off_tl", previous_op_a_on_off_tl, get(op_a_on_off_tl));
        compareAndPrint("op_b_on_off_bl", previous_op_b_on_off_bl, get(op_b_on_off_bl));
        compareAndPrint("op_b_on_off_br", previous_op_b_on_off_br, get(op_b_on_off_br));
        compareAndPrint("op_b_on_off_tr", previous_op_b_on_off_tr, get(op_b_on_off_tr));
        compareAndPrint("op_b_on_off_tl", previous_op_b_on_off_tl, get(op_b_on_off_tl));
        compareAndPrint("op_c_on_off_bl", previous_op_c_on_off_bl, get(op_c_on_off_bl));
        compareAndPrint("op_c_on_off_br", previous_op_c_on_off_br, get(op_c_on_off_br));
        compareAndPrint("op_c_on_off_tr", previous_op_c_on_off_tr, get(op_c_on_off_tr));
        compareAndPrint("op_c_on_off_tl", previous_op_c_on_off_tl, get(op_c_on_off_tl));
        compareAndPrint("op_d_on_off_bl", previous_op_d_on_off_bl, get(op_d_on_off_bl));
        compareAndPrint("op_d_on_off_br", previous_op_d_on_off_br, get(op_d_on_off_br));
        compareAndPrint("op_d_on_off_tr", previous_op_d_on_off_tr, get(op_d_on_off_tr));
        compareAndPrint("op_d_on_off_tl", previous_op_d_on_off_tl, get(op_d_on_off_tl));
        compareAndPrint("op_e_on_off_bl", previous_op_e_on_off_bl, get(op_e_on_off_bl));
        compareAndPrint("op_e_on_off_br", previous_op_e_on_off_br, get(op_e_on_off_br));
        compareAndPrint("op_e_on_off_tr", previous_op_e_on_off_tr, get(op_e_on_off_tr));
        compareAndPrint("op_e_on_off_tl", previous_op_e_on_off_tl, get(op_e_on_off_tl));
        compareAndPrint("op_f_on_off_bl", previous_op_f_on_off_bl, get(op_f_on_off_bl));
        compareAndPrint("op_f_on_off_br", previous_op_f_on_off_br, get(op_f_on_off_br));
        compareAndPrint("op_f_on_off_tr", previous_op_f_on_off_tr, get(op_f_on_off_tr));
        compareAndPrint("op_f_on_off_tl", previous_op_f_on_off_tl, get(op_f_on_off_tl));
        compareAndPrint("op_x_on_off_bl", previous_op_x_on_off_bl, get(op_x_on_off_bl));
        compareAndPrint("op_x_on_off_br", previous_op_x_on_off_br, get(op_x_on_off_br));
        compareAndPrint("op_x_on_off_tr", previous_op_x_on_off_tr, get(op_x_on_off_tr));
        compareAndPrint("op_x_on_off_tl", previous_op_x_on_off_tl, get(op_x_on_off_tl));
        compareAndPrint("op_z_on_off_bl", previous_op_z_on_off_bl, get(op_z_on_off_bl));
        compareAndPrint("op_z_on_off_br", previous_op_z_on_off_br, get(op_z_on_off_br));
        compareAndPrint("op_z_on_off_tr", previous_op_z_on_off_tr, get(op_z_on_off_tr));
        compareAndPrint("op_z_on_off_tl", previous_op_z_on_off_tl, get(op_z_on_off_tl));
        compareAndPrint("pitch_on_off_bl", previous_pitch_on_off_bl, get(pitch_on_off_bl));
        compareAndPrint("pitch_on_off_br", previous_pitch_on_off_br, get(pitch_on_off_br));
        compareAndPrint("pitch_on_off_tr", previous_pitch_on_off_tr, get(pitch_on_off_tr));
        compareAndPrint("pitch_on_off_tl", previous_pitch_on_off_tl, get(pitch_on_off_tl));
        compareAndPrint("op_a_output_level_bl", previous_op_a_output_level_bl, get(op_a_output_level_bl));
        compareAndPrint("op_a_output_level_br", previous_op_a_output_level_br, get(op_a_output_level_br));
        compareAndPrint("op_a_output_level_tr", previous_op_a_output_level_tr, get(op_a_output_level_tr));
        compareAndPrint("op_a_output_level_tl", previous_op_a_output_level_tl, get(op_a_output_level_tl));
        compareAndPrint("op_b_output_level_bl", previous_op_b_output_level_bl, get(op_b_output_level_bl));
        compareAndPrint("op_b_output_level_br", previous_op_b_output_level_br, get(op_b_output_level_br));
        compareAndPrint("op_b_output_level_tr", previous_op_b_output_level_tr, get(op_b_output_level_tr));
        compareAndPrint("op_b_output_level_tl", previous_op_b_output_level_tl, get(op_b_output_level_tl));
        compareAndPrint("op_c_output_level_bl", previous_op_c_output_level_bl, get(op_c_output_level_bl));
        compareAndPrint("op_c_output_level_br", previous_op_c_output_level_br, get(op_c_output_level_br));
        compareAndPrint("op_c_output_level_tr", previous_op_c_output_level_tr, get(op_c_output_level_tr));
        compareAndPrint("op_c_output_level_tl", previous_op_c_output_level_tl, get(op_c_output_level_tl));
        compareAndPrint("op_d_output_level_bl", previous_op_d_output_level_bl, get(op_d_output_level_bl));
        compareAndPrint("op_d_output_level_br", previous_op_d_output_level_br, get(op_d_output_level_br));
        compareAndPrint("op_d_output_level_tr", previous_op_d_output_level_tr, get(op_d_output_level_tr));
        compareAndPrint("op_d_output_level_tl", previous_op_d_output_level_tl, get(op_d_output_level_tl));
        compareAndPrint("op_e_output_level_bl", previous_op_e_output_level_bl, get(op_e_output_level_bl));
        compareAndPrint("op_e_output_level_br", previous_op_e_output_level_br, get(op_e_output_level_br));
        compareAndPrint("op_e_output_level_tr", previous_op_e_output_level_tr, get(op_e_output_level_tr));
        compareAndPrint("op_e_output_level_tl", previous_op_e_output_level_tl, get(op_e_output_level_tl));
        compareAndPrint("op_f_output_level_bl", previous_op_f_output_level_bl, get(op_f_output_level_bl));
        compareAndPrint("op_f_output_level_br", previous_op_f_output_level_br, get(op_f_output_level_br));
        compareAndPrint("op_f_output_level_tr", previous_op_f_output_level_tr, get(op_f_output_level_tr));
        compareAndPrint("op_f_output_level_tl", previous_op_f_output_level_tl, get(op_f_output_level_tl));
        compareAndPrint("op_x_output_level_bl", previous_op_x_output_level_bl, get(op_x_output_level_bl));
        compareAndPrint("op_x_output_level_br", previous_op_x_output_level_br, get(op_x_output_level_br));
        compareAndPrint("op_x_output_level_tr", previous_op_x_output_level_tr, get(op_x_output_level_tr));
        compareAndPrint("op_x_output_level_tl", previous_op_x_output_level_tl, get(op_x_output_level_tl));
        compareAndPrint("op_z_output_level_bl", previous_op_z_output_level_bl, get(op_z_output_level_bl));
        compareAndPrint("op_z_output_level_br", previous_op_z_output_level_br, get(op_z_output_level_br));
        compareAndPrint("op_z_output_level_tr", previous_op_z_output_level_tr, get(op_z_output_level_tr));
        compareAndPrint("op_z_output_level_tl", previous_op_z_output_level_tl, get(op_z_output_level_tl));
        compareAndPrint("pitch_output_level_bl", previous_pitch_output_level_bl, get(pitch_output_level_bl));
        compareAndPrint("pitch_output_level_br", previous_pitch_output_level_br, get(pitch_output_level_br));
        compareAndPrint("pitch_output_level_tr", previous_pitch_output_level_tr, get(pitch_output_level_tr));
        compareAndPrint("pitch_output_level_tl", previous_pitch_output_level_tl, get(pitch_output_level_tl));
        compareAndPrint("op_a_waveformbl", previous_op_a_waveformbl, get(op_a_waveformbl));
        compareAndPrint("op_a_waveformbr", previous_op_a_waveformbr, get(op_a_waveformbr));
        compareAndPrint("op_a_waveformtr", previous_op_a_waveformtr, get(op_a_waveformtr));
        compareAndPrint("op_a_waveformtl", previous_op_a_waveformtl, get(op_a_waveformtl));
        compareAndPrint("op_b_waveformbl", previous_op_b_waveformbl, get(op_b_waveformbl));
        compareAndPrint("op_b_waveformbr", previous_op_b_waveformbr, get(op_b_waveformbr));
        compareAndPrint("op_b_waveformtr", previous_op_b_waveformtr, get(op_b_waveformtr));
        compareAndPrint("op_b_waveformtl", previous_op_b_waveformtl, get(op_b_waveformtl));
        compareAndPrint("op_c_waveformbl", previous_op_c_waveformbl, get(op_c_waveformbl));
        compareAndPrint("op_c_waveformbr", previous_op_c_waveformbr, get(op_c_waveformbr));
        compareAndPrint("op_c_waveformtr", previous_op_c_waveformtr, get(op_c_waveformtr));
        compareAndPrint("op_c_waveformtl", previous_op_c_waveformtl, get(op_c_waveformtl));
        compareAndPrint("op_d_waveformbl", previous_op_d_waveformbl, get(op_d_waveformbl));
        compareAndPrint("op_d_waveformbr", previous_op_d_waveformbr, get(op_d_waveformbr));
        compareAndPrint("op_d_waveformtr", previous_op_d_waveformtr, get(op_d_waveformtr));
        compareAndPrint("op_d_waveformtl", previous_op_d_waveformtl, get(op_d_waveformtl));
        compareAndPrint("op_e_waveformbl", previous_op_e_waveformbl, get(op_e_waveformbl));
        compareAndPrint("op_e_waveformbr", previous_op_e_waveformbr, get(op_e_waveformbr));
        compareAndPrint("op_e_waveformtr", previous_op_e_waveformtr, get(op_e_waveformtr));
        compareAndPrint("op_e_waveformtl", previous_op_e_waveformtl, get(op_e_waveformtl));
        compareAndPrint("op_f_waveformbl", previous_op_f_waveformbl, get(op_f_waveformbl));
        compareAndPrint("op_f_waveformbr", previous_op_f_waveformbr, get(op_f_waveformbr));
        compareAndPrint("op_f_waveformtr", previous_op_f_waveformtr, get(op_f_waveformtr));
        compareAndPrint("op_f_waveformtl", previous_op_f_waveformtl, get(op_f_waveformtl));
        compareAndPrint("op_x_waveformbl", previous_op_x_waveformbl, get(op_x_waveformbl));
        compareAndPrint("op_x_waveformbr", previous_op_x_waveformbr, get(op_x_waveformbr));
        compareAndPrint("op_x_waveformtr", previous_op_x_waveformtr, get(op_x_waveformtr));
        compareAndPrint("op_x_waveformtl", previous_op_x_waveformtl, get(op_x_waveformtl));
        compareAndPrint("op_z_waveformbl", previous_op_z_waveformbl, get(op_z_waveformbl));
        compareAndPrint("op_z_waveformbr", previous_op_z_waveformbr, get(op_z_waveformbr));
        compareAndPrint("op_z_waveformtr", previous_op_z_waveformtr, get(op_z_waveformtr));
        compareAndPrint("op_z_waveformtl", previous_op_z_waveformtl, get(op_z_waveformtl));
        compareAndPrint("pitch_waveformbl", previous_pitch_waveformbl, get(pitch_waveformbl));
        compareAndPrint("pitch_waveformbr", previous_pitch_waveformbr, get(pitch_waveformbr));
        compareAndPrint("pitch_waveformtr", previous_pitch_waveformtr, get(pitch_waveformtr));
        compareAndPrint("pitch_waveformtl", previous_pitch_waveformtl, get(pitch_waveformtl));
        compareAndPrint("op_a_frequency_ratiobl", previous_op_a_frequency_ratiobl, get(op_a_frequency_ratiobl));
        compareAndPrint("op_a_frequency_ratiobr", previous_op_a_frequency_ratiobr, get(op_a_frequency_ratiobr));
        compareAndPrint("op_a_frequency_ratiotr", previous_op_a_frequency_ratiotr, get(op_a_frequency_ratiotr));
        compareAndPrint("op_a_frequency_ratiotl", previous_op_a_frequency_ratiotl, get(op_a_frequency_ratiotl));
        compareAndPrint("op_b_frequency_ratiobl", previous_op_b_frequency_ratiobl, get(op_b_frequency_ratiobl));
        compareAndPrint("op_b_frequency_ratiobr", previous_op_b_frequency_ratiobr, get(op_b_frequency_ratiobr));
        compareAndPrint("op_b_frequency_ratiotr", previous_op_b_frequency_ratiotr, get(op_b_frequency_ratiotr));
        compareAndPrint("op_b_frequency_ratiotl", previous_op_b_frequency_ratiotl, get(op_b_frequency_ratiotl));
        compareAndPrint("op_c_frequency_ratiobl", previous_op_c_frequency_ratiobl, get(op_c_frequency_ratiobl));
        compareAndPrint("op_c_frequency_ratiobr", previous_op_c_frequency_ratiobr, get(op_c_frequency_ratiobr));
        compareAndPrint("op_c_frequency_ratiotr", previous_op_c_frequency_ratiotr, get(op_c_frequency_ratiotr));
        compareAndPrint("op_c_frequency_ratiotl", previous_op_c_frequency_ratiotl, get(op_c_frequency_ratiotl));
        compareAndPrint("op_d_frequency_ratiobl", previous_op_d_frequency_ratiobl, get(op_d_frequency_ratiobl));
        compareAndPrint("op_d_frequency_ratiobr", previous_op_d_frequency_ratiobr, get(op_d_frequency_ratiobr));
        compareAndPrint("op_d_frequency_ratiotr", previous_op_d_frequency_ratiotr, get(op_d_frequency_ratiotr));
        compareAndPrint("op_d_frequency_ratiotl", previous_op_d_frequency_ratiotl, get(op_d_frequency_ratiotl));
        compareAndPrint("op_e_frequency_ratiobl", previous_op_e_frequency_ratiobl, get(op_e_frequency_ratiobl));
        compareAndPrint("op_e_frequency_ratiobr", previous_op_e_frequency_ratiobr, get(op_e_frequency_ratiobr));
        compareAndPrint("op_e_frequency_ratiotr", previous_op_e_frequency_ratiotr, get(op_e_frequency_ratiotr));
        compareAndPrint("op_e_frequency_ratiotl", previous_op_e_frequency_ratiotl, get(op_e_frequency_ratiotl));
        compareAndPrint("op_f_frequency_ratiobl", previous_op_f_frequency_ratiobl, get(op_f_frequency_ratiobl));
        compareAndPrint("op_f_frequency_ratiobr", previous_op_f_frequency_ratiobr, get(op_f_frequency_ratiobr));
        compareAndPrint("op_f_frequency_ratiotr", previous_op_f_frequency_ratiotr, get(op_f_frequency_ratiotr));
        compareAndPrint("op_f_frequency_ratiotl", previous_op_f_frequency_ratiotl, get(op_f_frequency_ratiotl));
        compareAndPrint("op_x_frequency_ratiobl", previous_op_x_frequency_ratiobl, get(op_x_frequency_ratiobl));
        compareAndPrint("op_x_frequency_ratiobr", previous_op_x_frequency_ratiobr, get(op_x_frequency_ratiobr));
        compareAndPrint("op_x_frequency_ratiotr", previous_op_x_frequency_ratiotr, get(op_x_frequency_ratiotr));
        compareAndPrint("op_x_frequency_ratiotl", previous_op_x_frequency_ratiotl, get(op_x_frequency_ratiotl));
        compareAndPrint("op_z_frequency_ratiobl", previous_op_z_frequency_ratiobl, get(op_z_frequency_ratiobl));
        compareAndPrint("op_z_frequency_ratiobr", previous_op_z_frequency_ratiobr, get(op_z_frequency_ratiobr));
        compareAndPrint("op_z_frequency_ratiotr", previous_op_z_frequency_ratiotr, get(op_z_frequency_ratiotr));
        compareAndPrint("op_z_frequency_ratiotl", previous_op_z_frequency_ratiotl, get(op_z_frequency_ratiotl));
        compareAndPrint("pitch_frequency_ratiobl", previous_pitch_frequency_ratiobl, get(pitch_frequency_ratiobl));
        compareAndPrint("pitch_frequency_ratiobr", previous_pitch_frequency_ratiobr, get(pitch_frequency_ratiobr));
        compareAndPrint("pitch_frequency_ratiotr", previous_pitch_frequency_ratiotr, get(pitch_frequency_ratiotr));
        compareAndPrint("pitch_frequency_ratiotl", previous_pitch_frequency_ratiotl, get(pitch_frequency_ratiotl));
        compareAndPrint("op_a_frequency_offsetbl", previous_op_a_frequency_offsetbl, get(op_a_frequency_offsetbl));
        compareAndPrint("op_a_frequency_offsetbr", previous_op_a_frequency_offsetbr, get(op_a_frequency_offsetbr));
        compareAndPrint("op_a_frequency_offsettr", previous_op_a_frequency_offsettr, get(op_a_frequency_offsettr));
        compareAndPrint("op_a_frequency_offsettl", previous_op_a_frequency_offsettl, get(op_a_frequency_offsettl));
        compareAndPrint("op_b_frequency_offsetbl", previous_op_b_frequency_offsetbl, get(op_b_frequency_offsetbl));
        compareAndPrint("op_b_frequency_offsetbr", previous_op_b_frequency_offsetbr, get(op_b_frequency_offsetbr));
        compareAndPrint("op_b_frequency_offsettr", previous_op_b_frequency_offsettr, get(op_b_frequency_offsettr));
        compareAndPrint("op_b_frequency_offsettl", previous_op_b_frequency_offsettl, get(op_b_frequency_offsettl));
        compareAndPrint("op_c_frequency_offsetbl", previous_op_c_frequency_offsetbl, get(op_c_frequency_offsetbl));
        compareAndPrint("op_c_frequency_offsetbr", previous_op_c_frequency_offsetbr, get(op_c_frequency_offsetbr));
        compareAndPrint("op_c_frequency_offsettr", previous_op_c_frequency_offsettr, get(op_c_frequency_offsettr));
        compareAndPrint("op_c_frequency_offsettl", previous_op_c_frequency_offsettl, get(op_c_frequency_offsettl));
        compareAndPrint("op_d_frequency_offsetbl", previous_op_d_frequency_offsetbl, get(op_d_frequency_offsetbl));
        compareAndPrint("op_d_frequency_offsetbr", previous_op_d_frequency_offsetbr, get(op_d_frequency_offsetbr));
        compareAndPrint("op_d_frequency_offsettr", previous_op_d_frequency_offsettr, get(op_d_frequency_offsettr));
        compareAndPrint("op_d_frequency_offsettl", previous_op_d_frequency_offsettl, get(op_d_frequency_offsettl));
        compareAndPrint("op_e_frequency_offsetbl", previous_op_e_frequency_offsetbl, get(op_e_frequency_offsetbl));
        compareAndPrint("op_e_frequency_offsetbr", previous_op_e_frequency_offsetbr, get(op_e_frequency_offsetbr));
        compareAndPrint("op_e_frequency_offsettr", previous_op_e_frequency_offsettr, get(op_e_frequency_offsettr));
        compareAndPrint("op_e_frequency_offsettl", previous_op_e_frequency_offsettl, get(op_e_frequency_offsettl));
        compareAndPrint("op_f_frequency_offsetbl", previous_op_f_frequency_offsetbl, get(op_f_frequency_offsetbl));
        compareAndPrint("op_f_frequency_offsetbr", previous_op_f_frequency_offsetbr, get(op_f_frequency_offsetbr));
        compareAndPrint("op_f_frequency_offsettr", previous_op_f_frequency_offsettr, get(op_f_frequency_offsettr));
        compareAndPrint("op_f_frequency_offsettl", previous_op_f_frequency_offsettl, get(op_f_frequency_offsettl));
        compareAndPrint("op_x_frequency_offsetbl", previous_op_x_frequency_offsetbl, get(op_x_frequency_offsetbl));
        compareAndPrint("op_x_frequency_offsetbr", previous_op_x_frequency_offsetbr, get(op_x_frequency_offsetbr));
        compareAndPrint("op_x_frequency_offsettr", previous_op_x_frequency_offsettr, get(op_x_frequency_offsettr));
        compareAndPrint("op_x_frequency_offsettl", previous_op_x_frequency_offsettl, get(op_x_frequency_offsettl));
        compareAndPrint("op_z_frequency_offsetbl", previous_op_z_frequency_offsetbl, get(op_z_frequency_offsetbl));
        compareAndPrint("op_z_frequency_offsetbr", previous_op_z_frequency_offsetbr, get(op_z_frequency_offsetbr));
        compareAndPrint("op_z_frequency_offsettr", previous_op_z_frequency_offsettr, get(op_z_frequency_offsettr));
        compareAndPrint("op_z_frequency_offsettl", previous_op_z_frequency_offsettl, get(op_z_frequency_offsettl));
        compareAndPrint("pitch_frequency_offsetbl", previous_pitch_frequency_offsetbl, get(pitch_frequency_offsetbl));
        compareAndPrint("pitch_frequency_offsetbr", previous_pitch_frequency_offsetbr, get(pitch_frequency_offsetbr));
        compareAndPrint("pitch_frequency_offsettr", previous_pitch_frequency_offsettr, get(pitch_frequency_offsettr));
        compareAndPrint("pitch_frequency_offsettl", previous_pitch_frequency_offsettl, get(pitch_frequency_offsettl));
        compareAndPrint("filt_routing_serial_parallel_bl", previous_filt_routing_serial_parallel_bl, get(filt_routing_serial_parallel_bl));
        compareAndPrint("filt_routing_serial_parallel_br", previous_filt_routing_serial_parallel_br, get(filt_routing_serial_parallel_br));
        compareAndPrint("filt_routing_serial_parallel_tr", previous_filt_routing_serial_parallel_tr, get(filt_routing_serial_parallel_tr));
        compareAndPrint("filt_routing_serial_parallel_tl", previous_filt_routing_serial_parallel_tl, get(filt_routing_serial_parallel_tl));
        compareAndPrint("filter_routing_mix_bl", previous_filter_routing_mix_bl, get(filter_routing_mix_bl));
        compareAndPrint("filter_routing_mix_br", previous_filter_routing_mix_br, get(filter_routing_mix_br));
        compareAndPrint("filter_routing_mix_tr", previous_filter_routing_mix_tr, get(filter_routing_mix_tr));
        compareAndPrint("filter_routing_mix_tl", previous_filter_routing_mix_tl, get(filter_routing_mix_tl));
        compareAndPrint("filter_1_mode_bl", previous_filter_1_mode_bl, get(filter_1_mode_bl));
        compareAndPrint("filter_1_mode_br", previous_filter_1_mode_br, get(filter_1_mode_br));
        compareAndPrint("filter_1_mode_tr", previous_filter_1_mode_tr, get(filter_1_mode_tr));
        compareAndPrint("filter_1_mode_tl", previous_filter_1_mode_tl, get(filter_1_mode_tl));
        compareAndPrint("filter_2_mode_bl", previous_filter_2_mode_bl, get(filter_2_mode_bl));
        compareAndPrint("filter_2_mode_br", previous_filter_2_mode_br, get(filter_2_mode_br));
        compareAndPrint("filter_2_mode_tr", previous_filter_2_mode_tr, get(filter_2_mode_tr));
        compareAndPrint("filter_2_mode_tl", previous_filter_2_mode_tl, get(filter_2_mode_tl));
        compareAndPrint("filter_cutoff_bl", previous_filter_cutoff_bl, get(filter_cutoff_bl));
        compareAndPrint("filter_cutoff_br", previous_filter_cutoff_br, get(filter_cutoff_br));
        compareAndPrint("filter_cutoff_tr", previous_filter_cutoff_tr, get(filter_cutoff_tr));
        compareAndPrint("filter_cutoff_tl", previous_filter_cutoff_tl, get(filter_cutoff_tl));
        compareAndPrint("filter_cutoff_spread_bl", previous_filter_cutoff_spread_bl, get(filter_cutoff_spread_bl));
        compareAndPrint("filter_cutoff_spread_br", previous_filter_cutoff_spread_br, get(filter_cutoff_spread_br));
        compareAndPrint("filter_cutoff_spread_tr", previous_filter_cutoff_spread_tr, get(filter_cutoff_spread_tr));
        compareAndPrint("filter_cutoff_spread_tl", previous_filter_cutoff_spread_tl, get(filter_cutoff_spread_tl));
        compareAndPrint("filter_envelope_amount_bl", previous_filter_envelope_amount_bl, get(filter_envelope_amount_bl));
        compareAndPrint("filter_envelope_amount_br", previous_filter_envelope_amount_br, get(filter_envelope_amount_br));
        compareAndPrint("filter_envelope_amount_tr", previous_filter_envelope_amount_tr, get(filter_envelope_amount_tr));
        compareAndPrint("filter_envelope_amount_tl", previous_filter_envelope_amount_tl, get(filter_envelope_amount_tl));
        compareAndPrint("filter_1_resonance_bl", previous_filter_1_resonance_bl, get(filter_1_resonance_bl));
        compareAndPrint("filter_1_resonance_br", previous_filter_1_resonance_br, get(filter_1_resonance_br));
        compareAndPrint("filter_1_resonance_tr", previous_filter_1_resonance_tr, get(filter_1_resonance_tr));
        compareAndPrint("filter_1_resonance_tl", previous_filter_1_resonance_tl, get(filter_1_resonance_tl));
        compareAndPrint("filter_2_resonance_bl", previous_filter_2_resonance_bl, get(filter_2_resonance_bl));
        compareAndPrint("filter_2_resonance_br", previous_filter_2_resonance_br, get(filter_2_resonance_br));
        compareAndPrint("filter_2_resonance_tr", previous_filter_2_resonance_tr, get(filter_2_resonance_tr));
        compareAndPrint("filter_2_resonance_tl", previous_filter_2_resonance_tl, get(filter_2_resonance_tl));
        compareAndPrint("noise_cutoff_bl", previous_noise_cutoff_bl, get(noise_cutoff_bl));
        compareAndPrint("noise_cutoff_br", previous_noise_cutoff_br, get(noise_cutoff_br));
        compareAndPrint("noise_cutoff_tr", previous_noise_cutoff_tr, get(noise_cutoff_tr));
        compareAndPrint("noise_cutoff_tl", previous_noise_cutoff_tl, get(noise_cutoff_tl));
        compareAndPrint("noise_resonance_bl", previous_noise_resonance_bl, get(noise_resonance_bl));
        compareAndPrint("noise_resonance_br", previous_noise_resonance_br, get(noise_resonance_br));
        compareAndPrint("noise_resonance_tr", previous_noise_resonance_tr, get(noise_resonance_tr));
        compareAndPrint("noise_resonance_tl", previous_noise_resonance_tl, get(noise_resonance_tl));
        compareAndPrint("noise_amplitude_bl", previous_noise_amplitude_bl, get(noise_amplitude_bl));
        compareAndPrint("noise_amplitude_br", previous_noise_amplitude_br, get(noise_amplitude_br));
        compareAndPrint("noise_amplitude_tr", previous_noise_amplitude_tr, get(noise_amplitude_tr));
        compareAndPrint("noise_amplitude_tl", previous_noise_amplitude_tl, get(noise_amplitude_tl));
        compareAndPrint("saturator_gain_bl", previous_saturator_gain_bl, get(saturator_gain_bl));
        compareAndPrint("saturator_gain_br", previous_saturator_gain_br, get(saturator_gain_br));
        compareAndPrint("saturator_gain_tr", previous_saturator_gain_tr, get(saturator_gain_tr));
        compareAndPrint("saturator_gain_tl", previous_saturator_gain_tl, get(saturator_gain_tl));
        compareAndPrint("saturator_level_bl", previous_saturator_level_bl, get(saturator_level_bl));
        compareAndPrint("saturator_level_br", previous_saturator_level_br, get(saturator_level_br));
        compareAndPrint("saturator_level_tr", previous_saturator_level_tr, get(saturator_level_tr));
        compareAndPrint("saturator_level_tl", previous_saturator_level_tl, get(saturator_level_tl));
        compareAndPrint("saturator_asymmetry_bl", previous_saturator_asymmetry_bl, get(saturator_asymmetry_bl));
        compareAndPrint("saturator_asymmetry_br", previous_saturator_asymmetry_br, get(saturator_asymmetry_br));
        compareAndPrint("saturator_asymmetry_tr", previous_saturator_asymmetry_tr, get(saturator_asymmetry_tr));
        compareAndPrint("saturator_asymmetry_tl", previous_saturator_asymmetry_tl, get(saturator_asymmetry_tl));
        compareAndPrint("op_a_modulation_pitchbend_up", previous_op_a_modulation_pitchbend_up, get(op_a_modulation_pitchbend_up));
        compareAndPrint("op_b_modulation_pitchbend_up", previous_op_b_modulation_pitchbend_up, get(op_b_modulation_pitchbend_up));
        compareAndPrint("op_c_modulation_pitchbend_up", previous_op_c_modulation_pitchbend_up, get(op_c_modulation_pitchbend_up));
        compareAndPrint("op_d_modulation_pitchbend_up", previous_op_d_modulation_pitchbend_up, get(op_d_modulation_pitchbend_up));
        compareAndPrint("op_e_modulation_pitchbend_up", previous_op_e_modulation_pitchbend_up, get(op_e_modulation_pitchbend_up));
        compareAndPrint("op_f_modulation_pitchbend_up", previous_op_f_modulation_pitchbend_up, get(op_f_modulation_pitchbend_up));
        compareAndPrint("op_x_modulation_pitchbend_up", previous_op_x_modulation_pitchbend_up, get(op_x_modulation_pitchbend_up));
        compareAndPrint("op_z_modulation_pitchbend_up", previous_op_z_modulation_pitchbend_up, get(op_z_modulation_pitchbend_up));
        compareAndPrint("pitch_modulation_pitchbend_up", previous_pitch_modulation_pitchbend_up, get(pitch_modulation_pitchbend_up));
        compareAndPrint("op_a_modulation_pitchbend_down", previous_op_a_modulation_pitchbend_down, get(op_a_modulation_pitchbend_down));
        compareAndPrint("op_b_modulation_pitchbend_down", previous_op_b_modulation_pitchbend_down, get(op_b_modulation_pitchbend_down));
        compareAndPrint("op_c_modulation_pitchbend_down", previous_op_c_modulation_pitchbend_down, get(op_c_modulation_pitchbend_down));
        compareAndPrint("op_d_modulation_pitchbend_down", previous_op_d_modulation_pitchbend_down, get(op_d_modulation_pitchbend_down));
        compareAndPrint("op_e_modulation_pitchbend_down", previous_op_e_modulation_pitchbend_down, get(op_e_modulation_pitchbend_down));
        compareAndPrint("op_f_modulation_pitchbend_down", previous_op_f_modulation_pitchbend_down, get(op_f_modulation_pitchbend_down));
        compareAndPrint("op_x_modulation_pitchbend_down", previous_op_x_modulation_pitchbend_down, get(op_x_modulation_pitchbend_down));
        compareAndPrint("op_z_modulation_pitchbend_down", previous_op_z_modulation_pitchbend_down, get(op_z_modulation_pitchbend_down));
        compareAndPrint("pitch_modulation_pitchbend_down", previous_pitch_modulation_pitchbend_down, get(pitch_modulation_pitchbend_down));
        compareAndPrint("op_a_modulation_aftertouch", previous_op_a_modulation_aftertouch, get(op_a_modulation_aftertouch));
        compareAndPrint("op_b_modulation_aftertouch", previous_op_b_modulation_aftertouch, get(op_b_modulation_aftertouch));
        compareAndPrint("op_c_modulation_aftertouch", previous_op_c_modulation_aftertouch, get(op_c_modulation_aftertouch));
        compareAndPrint("op_d_modulation_aftertouch", previous_op_d_modulation_aftertouch, get(op_d_modulation_aftertouch));
        compareAndPrint("op_e_modulation_aftertouch", previous_op_e_modulation_aftertouch, get(op_e_modulation_aftertouch));
        compareAndPrint("op_f_modulation_aftertouch", previous_op_f_modulation_aftertouch, get(op_f_modulation_aftertouch));
        compareAndPrint("op_x_modulation_aftertouch", previous_op_x_modulation_aftertouch, get(op_x_modulation_aftertouch));
        compareAndPrint("op_z_modulation_aftertouch", previous_op_z_modulation_aftertouch, get(op_z_modulation_aftertouch));
        compareAndPrint("pitch_modulation_aftertouch", previous_pitch_modulation_aftertouch, get(pitch_modulation_aftertouch));
        compareAndPrint("op_a_modulation_modwheel", previous_op_a_modulation_modwheel, get(op_a_modulation_modwheel));
        compareAndPrint("op_b_modulation_modwheel", previous_op_b_modulation_modwheel, get(op_b_modulation_modwheel));
        compareAndPrint("op_c_modulation_modwheel", previous_op_c_modulation_modwheel, get(op_c_modulation_modwheel));
        compareAndPrint("op_d_modulation_modwheel", previous_op_d_modulation_modwheel, get(op_d_modulation_modwheel));
        compareAndPrint("op_e_modulation_modwheel", previous_op_e_modulation_modwheel, get(op_e_modulation_modwheel));
        compareAndPrint("op_f_modulation_modwheel", previous_op_f_modulation_modwheel, get(op_f_modulation_modwheel));
        compareAndPrint("op_x_modulation_modwheel", previous_op_x_modulation_modwheel, get(op_x_modulation_modwheel));
        compareAndPrint("op_z_modulation_modwheel", previous_op_z_modulation_modwheel, get(op_z_modulation_modwheel));
        compareAndPrint("pitch_modulation_modwheel", previous_pitch_modulation_modwheel, get(pitch_modulation_modwheel));
        compareAndPrint("op_a_modulation_breath_ctlr", previous_op_a_modulation_breath_ctlr, get(op_a_modulation_breath_ctlr));
        compareAndPrint("op_b_modulation_breath_ctlr", previous_op_b_modulation_breath_ctlr, get(op_b_modulation_breath_ctlr));
        compareAndPrint("op_c_modulation_breath_ctlr", previous_op_c_modulation_breath_ctlr, get(op_c_modulation_breath_ctlr));
        compareAndPrint("op_d_modulation_breath_ctlr", previous_op_d_modulation_breath_ctlr, get(op_d_modulation_breath_ctlr));
        compareAndPrint("op_e_modulation_breath_ctlr", previous_op_e_modulation_breath_ctlr, get(op_e_modulation_breath_ctlr));
        compareAndPrint("op_f_modulation_breath_ctlr", previous_op_f_modulation_breath_ctlr, get(op_f_modulation_breath_ctlr));
        compareAndPrint("op_x_modulation_breath_ctlr", previous_op_x_modulation_breath_ctlr, get(op_x_modulation_breath_ctlr));
        compareAndPrint("op_z_modulation_breath_ctlr", previous_op_z_modulation_breath_ctlr, get(op_z_modulation_breath_ctlr));
        compareAndPrint("pitch_modulation_breath_ctlr", previous_pitch_modulation_breath_ctlr, get(pitch_modulation_breath_ctlr));
        compareAndPrint("op_a_modulation_controller_1", previous_op_a_modulation_controller_1, get(op_a_modulation_controller_1));
        compareAndPrint("op_b_modulation_controller_1", previous_op_b_modulation_controller_1, get(op_b_modulation_controller_1));
        compareAndPrint("op_c_modulation_controller_1", previous_op_c_modulation_controller_1, get(op_c_modulation_controller_1));
        compareAndPrint("op_d_modulation_controller_1", previous_op_d_modulation_controller_1, get(op_d_modulation_controller_1));
        compareAndPrint("op_e_modulation_controller_1", previous_op_e_modulation_controller_1, get(op_e_modulation_controller_1));
        compareAndPrint("op_f_modulation_controller_1", previous_op_f_modulation_controller_1, get(op_f_modulation_controller_1));
        compareAndPrint("op_x_modulation_controller_1", previous_op_x_modulation_controller_1, get(op_x_modulation_controller_1));
        compareAndPrint("op_z_modulation_controller_1", previous_op_z_modulation_controller_1, get(op_z_modulation_controller_1));
        compareAndPrint("pitch_modulation_controller_1", previous_pitch_modulation_controller_1, get(pitch_modulation_controller_1));
        compareAndPrint("op_a_modulation_controller_2", previous_op_a_modulation_controller_2, get(op_a_modulation_controller_2));
        compareAndPrint("op_b_modulation_controller_2", previous_op_b_modulation_controller_2, get(op_b_modulation_controller_2));
        compareAndPrint("op_c_modulation_controller_2", previous_op_c_modulation_controller_2, get(op_c_modulation_controller_2));
        compareAndPrint("op_d_modulation_controller_2", previous_op_d_modulation_controller_2, get(op_d_modulation_controller_2));
        compareAndPrint("op_e_modulation_controller_2", previous_op_e_modulation_controller_2, get(op_e_modulation_controller_2));
        compareAndPrint("op_f_modulation_controller_2", previous_op_f_modulation_controller_2, get(op_f_modulation_controller_2));
        compareAndPrint("op_x_modulation_controller_2", previous_op_x_modulation_controller_2, get(op_x_modulation_controller_2));
        compareAndPrint("op_z_modulation_controller_2", previous_op_z_modulation_controller_2, get(op_z_modulation_controller_2));
        compareAndPrint("pitch_modulation_controller_2", previous_pitch_modulation_controller_2, get(pitch_modulation_controller_2));
        compareAndPrint("op_a_modulation_input_envelope", previous_op_a_modulation_input_envelope, get(op_a_modulation_input_envelope));
        compareAndPrint("op_b_modulation_input_envelope", previous_op_b_modulation_input_envelope, get(op_b_modulation_input_envelope));
        compareAndPrint("op_c_modulation_input_envelope", previous_op_c_modulation_input_envelope, get(op_c_modulation_input_envelope));
        compareAndPrint("op_d_modulation_input_envelope", previous_op_d_modulation_input_envelope, get(op_d_modulation_input_envelope));
        compareAndPrint("op_e_modulation_input_envelope", previous_op_e_modulation_input_envelope, get(op_e_modulation_input_envelope));
        compareAndPrint("op_f_modulation_input_envelope", previous_op_f_modulation_input_envelope, get(op_f_modulation_input_envelope));
        compareAndPrint("op_x_modulation_input_envelope", previous_op_x_modulation_input_envelope, get(op_x_modulation_input_envelope));
        compareAndPrint("op_z_modulation_input_envelope", previous_op_z_modulation_input_envelope, get(op_z_modulation_input_envelope));
        compareAndPrint("pitch_modulation_input_envelope", previous_pitch_modulation_input_envelope, get(pitch_modulation_input_envelope));
        compareAndPrint("op_a_modulation_lfo_1", previous_op_a_modulation_lfo_1, get(op_a_modulation_lfo_1));
        compareAndPrint("op_b_modulation_lfo_1", previous_op_b_modulation_lfo_1, get(op_b_modulation_lfo_1));
        compareAndPrint("op_c_modulation_lfo_1", previous_op_c_modulation_lfo_1, get(op_c_modulation_lfo_1));
        compareAndPrint("op_d_modulation_lfo_1", previous_op_d_modulation_lfo_1, get(op_d_modulation_lfo_1));
        compareAndPrint("op_e_modulation_lfo_1", previous_op_e_modulation_lfo_1, get(op_e_modulation_lfo_1));
        compareAndPrint("op_f_modulation_lfo_1", previous_op_f_modulation_lfo_1, get(op_f_modulation_lfo_1));
        compareAndPrint("op_x_modulation_lfo_1", previous_op_x_modulation_lfo_1, get(op_x_modulation_lfo_1));
        compareAndPrint("op_z_modulation_lfo_1", previous_op_z_modulation_lfo_1, get(op_z_modulation_lfo_1));
        compareAndPrint("pitch_modulation_lfo_1", previous_pitch_modulation_lfo_1, get(pitch_modulation_lfo_1));
        compareAndPrint("op_a_modulation_lfo_1_MULTIPLY_atc", previous_op_a_modulation_lfo_1_MULTIPLY_atc, get(op_a_modulation_lfo_1_MULTIPLY_atc));
        compareAndPrint("op_b_modulation_lfo_1_MULTIPLY_atc", previous_op_b_modulation_lfo_1_MULTIPLY_atc, get(op_b_modulation_lfo_1_MULTIPLY_atc));
        compareAndPrint("op_c_modulation_lfo_1_MULTIPLY_atc", previous_op_c_modulation_lfo_1_MULTIPLY_atc, get(op_c_modulation_lfo_1_MULTIPLY_atc));
        compareAndPrint("op_d_modulation_lfo_1_MULTIPLY_atc", previous_op_d_modulation_lfo_1_MULTIPLY_atc, get(op_d_modulation_lfo_1_MULTIPLY_atc));
        compareAndPrint("op_e_modulation_lfo_1_MULTIPLY_atc", previous_op_e_modulation_lfo_1_MULTIPLY_atc, get(op_e_modulation_lfo_1_MULTIPLY_atc));
        compareAndPrint("op_f_modulation_lfo_1_MULTIPLY_atc", previous_op_f_modulation_lfo_1_MULTIPLY_atc, get(op_f_modulation_lfo_1_MULTIPLY_atc));
        compareAndPrint("op_x_modulation_lfo_1_MULTIPLY_atc", previous_op_x_modulation_lfo_1_MULTIPLY_atc, get(op_x_modulation_lfo_1_MULTIPLY_atc));
        compareAndPrint("op_z_modulation_lfo_1_MULTIPLY_atc", previous_op_z_modulation_lfo_1_MULTIPLY_atc, get(op_z_modulation_lfo_1_MULTIPLY_atc));
        compareAndPrint("pitch_modulation_lfo_1_MULTIPLY_atc", previous_pitch_modulation_lfo_1_MULTIPLY_atc, get(pitch_modulation_lfo_1_MULTIPLY_atc));
        compareAndPrint("op_a_modulation_lfo_1_MULTIPLY_mw", previous_op_a_modulation_lfo_1_MULTIPLY_mw, get(op_a_modulation_lfo_1_MULTIPLY_mw));
        compareAndPrint("op_b_modulation_lfo_1_MULTIPLY_mw", previous_op_b_modulation_lfo_1_MULTIPLY_mw, get(op_b_modulation_lfo_1_MULTIPLY_mw));
        compareAndPrint("op_c_modulation_lfo_1_MULTIPLY_mw", previous_op_c_modulation_lfo_1_MULTIPLY_mw, get(op_c_modulation_lfo_1_MULTIPLY_mw));
        compareAndPrint("op_d_modulation_lfo_1_MULTIPLY_mw", previous_op_d_modulation_lfo_1_MULTIPLY_mw, get(op_d_modulation_lfo_1_MULTIPLY_mw));
        compareAndPrint("op_e_modulation_lfo_1_MULTIPLY_mw", previous_op_e_modulation_lfo_1_MULTIPLY_mw, get(op_e_modulation_lfo_1_MULTIPLY_mw));
        compareAndPrint("op_f_modulation_lfo_1_MULTIPLY_mw", previous_op_f_modulation_lfo_1_MULTIPLY_mw, get(op_f_modulation_lfo_1_MULTIPLY_mw));
        compareAndPrint("op_x_modulation_lfo_1_MULTIPLY_mw", previous_op_x_modulation_lfo_1_MULTIPLY_mw, get(op_x_modulation_lfo_1_MULTIPLY_mw));
        compareAndPrint("op_z_modulation_lfo_1_MULTIPLY_mw", previous_op_z_modulation_lfo_1_MULTIPLY_mw, get(op_z_modulation_lfo_1_MULTIPLY_mw));
        compareAndPrint("pitch_modulation_lfo_1_MULTIPLY_mw", previous_pitch_modulation_lfo_1_MULTIPLY_mw, get(pitch_modulation_lfo_1_MULTIPLY_mw));
        compareAndPrint("op_a_modulation_lfo_1_MULTIPLY_bc", previous_op_a_modulation_lfo_1_MULTIPLY_bc, get(op_a_modulation_lfo_1_MULTIPLY_bc));
        compareAndPrint("op_b_modulation_lfo_1_MULTIPLY_bc", previous_op_b_modulation_lfo_1_MULTIPLY_bc, get(op_b_modulation_lfo_1_MULTIPLY_bc));
        compareAndPrint("op_c_modulation_lfo_1_MULTIPLY_bc", previous_op_c_modulation_lfo_1_MULTIPLY_bc, get(op_c_modulation_lfo_1_MULTIPLY_bc));
        compareAndPrint("op_d_modulation_lfo_1_MULTIPLY_bc", previous_op_d_modulation_lfo_1_MULTIPLY_bc, get(op_d_modulation_lfo_1_MULTIPLY_bc));
        compareAndPrint("op_e_modulation_lfo_1_MULTIPLY_bc", previous_op_e_modulation_lfo_1_MULTIPLY_bc, get(op_e_modulation_lfo_1_MULTIPLY_bc));
        compareAndPrint("op_f_modulation_lfo_1_MULTIPLY_bc", previous_op_f_modulation_lfo_1_MULTIPLY_bc, get(op_f_modulation_lfo_1_MULTIPLY_bc));
        compareAndPrint("op_x_modulation_lfo_1_MULTIPLY_bc", previous_op_x_modulation_lfo_1_MULTIPLY_bc, get(op_x_modulation_lfo_1_MULTIPLY_bc));
        compareAndPrint("op_z_modulation_lfo_1_MULTIPLY_bc", previous_op_z_modulation_lfo_1_MULTIPLY_bc, get(op_z_modulation_lfo_1_MULTIPLY_bc));
        compareAndPrint("pitch_modulation_lfo_1_MULTIPLY_bc", previous_pitch_modulation_lfo_1_MULTIPLY_bc, get(pitch_modulation_lfo_1_MULTIPLY_bc));
        compareAndPrint("op_a_modulation_lfo_1_MULTIPLY_ctrl_1", previous_op_a_modulation_lfo_1_MULTIPLY_ctrl_1, get(op_a_modulation_lfo_1_MULTIPLY_ctrl_1));
        compareAndPrint("op_b_modulation_lfo_1_MULTIPLY_ctrl_1", previous_op_b_modulation_lfo_1_MULTIPLY_ctrl_1, get(op_b_modulation_lfo_1_MULTIPLY_ctrl_1));
        compareAndPrint("op_c_modulation_lfo_1_MULTIPLY_ctrl_1", previous_op_c_modulation_lfo_1_MULTIPLY_ctrl_1, get(op_c_modulation_lfo_1_MULTIPLY_ctrl_1));
        compareAndPrint("op_d_modulation_lfo_1_MULTIPLY_ctrl_1", previous_op_d_modulation_lfo_1_MULTIPLY_ctrl_1, get(op_d_modulation_lfo_1_MULTIPLY_ctrl_1));
        compareAndPrint("op_e_modulation_lfo_1_MULTIPLY_ctrl_1", previous_op_e_modulation_lfo_1_MULTIPLY_ctrl_1, get(op_e_modulation_lfo_1_MULTIPLY_ctrl_1));
        compareAndPrint("op_f_modulation_lfo_1_MULTIPLY_ctrl_1", previous_op_f_modulation_lfo_1_MULTIPLY_ctrl_1, get(op_f_modulation_lfo_1_MULTIPLY_ctrl_1));
        compareAndPrint("op_x_modulation_lfo_1_MULTIPLY_ctrl_1", previous_op_x_modulation_lfo_1_MULTIPLY_ctrl_1, get(op_x_modulation_lfo_1_MULTIPLY_ctrl_1));
        compareAndPrint("op_z_modulation_lfo_1_MULTIPLY_ctrl_1", previous_op_z_modulation_lfo_1_MULTIPLY_ctrl_1, get(op_z_modulation_lfo_1_MULTIPLY_ctrl_1));
        compareAndPrint("pitch_modulation_lfo_1_MULTIPLY_ctrl_1", previous_pitch_modulation_lfo_1_MULTIPLY_ctrl_1, get(pitch_modulation_lfo_1_MULTIPLY_ctrl_1));
        compareAndPrint("op_a_modulation_lfo_1_MULTIPLY_ctrl_2", previous_op_a_modulation_lfo_1_MULTIPLY_ctrl_2, get(op_a_modulation_lfo_1_MULTIPLY_ctrl_2));
        compareAndPrint("op_b_modulation_lfo_1_MULTIPLY_ctrl_2", previous_op_b_modulation_lfo_1_MULTIPLY_ctrl_2, get(op_b_modulation_lfo_1_MULTIPLY_ctrl_2));
        compareAndPrint("op_c_modulation_lfo_1_MULTIPLY_ctrl_2", previous_op_c_modulation_lfo_1_MULTIPLY_ctrl_2, get(op_c_modulation_lfo_1_MULTIPLY_ctrl_2));
        compareAndPrint("op_d_modulation_lfo_1_MULTIPLY_ctrl_2", previous_op_d_modulation_lfo_1_MULTIPLY_ctrl_2, get(op_d_modulation_lfo_1_MULTIPLY_ctrl_2));
        compareAndPrint("op_e_modulation_lfo_1_MULTIPLY_ctrl_2", previous_op_e_modulation_lfo_1_MULTIPLY_ctrl_2, get(op_e_modulation_lfo_1_MULTIPLY_ctrl_2));
        compareAndPrint("op_f_modulation_lfo_1_MULTIPLY_ctrl_2", previous_op_f_modulation_lfo_1_MULTIPLY_ctrl_2, get(op_f_modulation_lfo_1_MULTIPLY_ctrl_2));
        compareAndPrint("op_x_modulation_lfo_1_MULTIPLY_ctrl_2", previous_op_x_modulation_lfo_1_MULTIPLY_ctrl_2, get(op_x_modulation_lfo_1_MULTIPLY_ctrl_2));
        compareAndPrint("op_z_modulation_lfo_1_MULTIPLY_ctrl_2", previous_op_z_modulation_lfo_1_MULTIPLY_ctrl_2, get(op_z_modulation_lfo_1_MULTIPLY_ctrl_2));
        compareAndPrint("pitch_modulation_lfo_1_MULTIPLY_ctrl_2", previous_pitch_modulation_lfo_1_MULTIPLY_ctrl_2, get(pitch_modulation_lfo_1_MULTIPLY_ctrl_2));
        compareAndPrint("op_a_modulation_lfo_2", previous_op_a_modulation_lfo_2, get(op_a_modulation_lfo_2));
        compareAndPrint("op_b_modulation_lfo_2", previous_op_b_modulation_lfo_2, get(op_b_modulation_lfo_2));
        compareAndPrint("op_c_modulation_lfo_2", previous_op_c_modulation_lfo_2, get(op_c_modulation_lfo_2));
        compareAndPrint("op_d_modulation_lfo_2", previous_op_d_modulation_lfo_2, get(op_d_modulation_lfo_2));
        compareAndPrint("op_e_modulation_lfo_2", previous_op_e_modulation_lfo_2, get(op_e_modulation_lfo_2));
        compareAndPrint("op_f_modulation_lfo_2", previous_op_f_modulation_lfo_2, get(op_f_modulation_lfo_2));
        compareAndPrint("op_x_modulation_lfo_2", previous_op_x_modulation_lfo_2, get(op_x_modulation_lfo_2));
        compareAndPrint("op_z_modulation_lfo_2", previous_op_z_modulation_lfo_2, get(op_z_modulation_lfo_2));
        compareAndPrint("pitch_modulation_lfo_2", previous_pitch_modulation_lfo_2, get(pitch_modulation_lfo_2));
        compareAndPrint("op_a_modulation_lfo_2_MULTIPLY_atc", previous_op_a_modulation_lfo_2_MULTIPLY_atc, get(op_a_modulation_lfo_2_MULTIPLY_atc));
        compareAndPrint("op_b_modulation_lfo_2_MULTIPLY_atc", previous_op_b_modulation_lfo_2_MULTIPLY_atc, get(op_b_modulation_lfo_2_MULTIPLY_atc));
        compareAndPrint("op_c_modulation_lfo_2_MULTIPLY_atc", previous_op_c_modulation_lfo_2_MULTIPLY_atc, get(op_c_modulation_lfo_2_MULTIPLY_atc));
        compareAndPrint("op_d_modulation_lfo_2_MULTIPLY_atc", previous_op_d_modulation_lfo_2_MULTIPLY_atc, get(op_d_modulation_lfo_2_MULTIPLY_atc));
        compareAndPrint("op_e_modulation_lfo_2_MULTIPLY_atc", previous_op_e_modulation_lfo_2_MULTIPLY_atc, get(op_e_modulation_lfo_2_MULTIPLY_atc));
        compareAndPrint("op_f_modulation_lfo_2_MULTIPLY_atc", previous_op_f_modulation_lfo_2_MULTIPLY_atc, get(op_f_modulation_lfo_2_MULTIPLY_atc));
        compareAndPrint("op_x_modulation_lfo_2_MULTIPLY_atc", previous_op_x_modulation_lfo_2_MULTIPLY_atc, get(op_x_modulation_lfo_2_MULTIPLY_atc));
        compareAndPrint("op_z_modulation_lfo_2_MULTIPLY_atc", previous_op_z_modulation_lfo_2_MULTIPLY_atc, get(op_z_modulation_lfo_2_MULTIPLY_atc));
        compareAndPrint("pitch_modulation_lfo_2_MULTIPLY_atc", previous_pitch_modulation_lfo_2_MULTIPLY_atc, get(pitch_modulation_lfo_2_MULTIPLY_atc));
        compareAndPrint("op_a_modulation_lfo_2_MULTIPLY_mw", previous_op_a_modulation_lfo_2_MULTIPLY_mw, get(op_a_modulation_lfo_2_MULTIPLY_mw));
        compareAndPrint("op_b_modulation_lfo_2_MULTIPLY_mw", previous_op_b_modulation_lfo_2_MULTIPLY_mw, get(op_b_modulation_lfo_2_MULTIPLY_mw));
        compareAndPrint("op_c_modulation_lfo_2_MULTIPLY_mw", previous_op_c_modulation_lfo_2_MULTIPLY_mw, get(op_c_modulation_lfo_2_MULTIPLY_mw));
        compareAndPrint("op_d_modulation_lfo_2_MULTIPLY_mw", previous_op_d_modulation_lfo_2_MULTIPLY_mw, get(op_d_modulation_lfo_2_MULTIPLY_mw));
        compareAndPrint("op_e_modulation_lfo_2_MULTIPLY_mw", previous_op_e_modulation_lfo_2_MULTIPLY_mw, get(op_e_modulation_lfo_2_MULTIPLY_mw));
        compareAndPrint("op_f_modulation_lfo_2_MULTIPLY_mw", previous_op_f_modulation_lfo_2_MULTIPLY_mw, get(op_f_modulation_lfo_2_MULTIPLY_mw));
        compareAndPrint("op_x_modulation_lfo_2_MULTIPLY_mw", previous_op_x_modulation_lfo_2_MULTIPLY_mw, get(op_x_modulation_lfo_2_MULTIPLY_mw));
        compareAndPrint("op_z_modulation_lfo_2_MULTIPLY_mw", previous_op_z_modulation_lfo_2_MULTIPLY_mw, get(op_z_modulation_lfo_2_MULTIPLY_mw));
        compareAndPrint("pitch_modulation_lfo_2_MULTIPLY_mw", previous_pitch_modulation_lfo_2_MULTIPLY_mw, get(pitch_modulation_lfo_2_MULTIPLY_mw));
        compareAndPrint("op_a_modulation_lfo_2_MULTIPLY_bc", previous_op_a_modulation_lfo_2_MULTIPLY_bc, get(op_a_modulation_lfo_2_MULTIPLY_bc));
        compareAndPrint("op_b_modulation_lfo_2_MULTIPLY_bc", previous_op_b_modulation_lfo_2_MULTIPLY_bc, get(op_b_modulation_lfo_2_MULTIPLY_bc));
        compareAndPrint("op_c_modulation_lfo_2_MULTIPLY_bc", previous_op_c_modulation_lfo_2_MULTIPLY_bc, get(op_c_modulation_lfo_2_MULTIPLY_bc));
        compareAndPrint("op_d_modulation_lfo_2_MULTIPLY_bc", previous_op_d_modulation_lfo_2_MULTIPLY_bc, get(op_d_modulation_lfo_2_MULTIPLY_bc));
        compareAndPrint("op_e_modulation_lfo_2_MULTIPLY_bc", previous_op_e_modulation_lfo_2_MULTIPLY_bc, get(op_e_modulation_lfo_2_MULTIPLY_bc));
        compareAndPrint("op_f_modulation_lfo_2_MULTIPLY_bc", previous_op_f_modulation_lfo_2_MULTIPLY_bc, get(op_f_modulation_lfo_2_MULTIPLY_bc));
        compareAndPrint("op_x_modulation_lfo_2_MULTIPLY_bc", previous_op_x_modulation_lfo_2_MULTIPLY_bc, get(op_x_modulation_lfo_2_MULTIPLY_bc));
        compareAndPrint("op_z_modulation_lfo_2_MULTIPLY_bc", previous_op_z_modulation_lfo_2_MULTIPLY_bc, get(op_z_modulation_lfo_2_MULTIPLY_bc));
        compareAndPrint("pitch_modulation_lfo_2_MULTIPLY_bc", previous_pitch_modulation_lfo_2_MULTIPLY_bc, get(pitch_modulation_lfo_2_MULTIPLY_bc));
        compareAndPrint("op_a_modulation_lfo_2_MULTIPLY_ctrl_1", previous_op_a_modulation_lfo_2_MULTIPLY_ctrl_1, get(op_a_modulation_lfo_2_MULTIPLY_ctrl_1));
        compareAndPrint("op_b_modulation_lfo_2_MULTIPLY_ctrl_1", previous_op_b_modulation_lfo_2_MULTIPLY_ctrl_1, get(op_b_modulation_lfo_2_MULTIPLY_ctrl_1));
        compareAndPrint("op_c_modulation_lfo_2_MULTIPLY_ctrl_1", previous_op_c_modulation_lfo_2_MULTIPLY_ctrl_1, get(op_c_modulation_lfo_2_MULTIPLY_ctrl_1));
        compareAndPrint("op_d_modulation_lfo_2_MULTIPLY_ctrl_1", previous_op_d_modulation_lfo_2_MULTIPLY_ctrl_1, get(op_d_modulation_lfo_2_MULTIPLY_ctrl_1));
        compareAndPrint("op_e_modulation_lfo_2_MULTIPLY_ctrl_1", previous_op_e_modulation_lfo_2_MULTIPLY_ctrl_1, get(op_e_modulation_lfo_2_MULTIPLY_ctrl_1));
        compareAndPrint("op_f_modulation_lfo_2_MULTIPLY_ctrl_1", previous_op_f_modulation_lfo_2_MULTIPLY_ctrl_1, get(op_f_modulation_lfo_2_MULTIPLY_ctrl_1));
        compareAndPrint("op_x_modulation_lfo_2_MULTIPLY_ctrl_1", previous_op_x_modulation_lfo_2_MULTIPLY_ctrl_1, get(op_x_modulation_lfo_2_MULTIPLY_ctrl_1));
        compareAndPrint("op_z_modulation_lfo_2_MULTIPLY_ctrl_1", previous_op_z_modulation_lfo_2_MULTIPLY_ctrl_1, get(op_z_modulation_lfo_2_MULTIPLY_ctrl_1));
        compareAndPrint("pitch_modulation_lfo_2_MULTIPLY_ctrl_1", previous_pitch_modulation_lfo_2_MULTIPLY_ctrl_1, get(pitch_modulation_lfo_2_MULTIPLY_ctrl_1));
        compareAndPrint("op_a_modulation_lfo_2_MULTIPLY_ctrl_2", previous_op_a_modulation_lfo_2_MULTIPLY_ctrl_2, get(op_a_modulation_lfo_2_MULTIPLY_ctrl_2));
        compareAndPrint("op_b_modulation_lfo_2_MULTIPLY_ctrl_2", previous_op_b_modulation_lfo_2_MULTIPLY_ctrl_2, get(op_b_modulation_lfo_2_MULTIPLY_ctrl_2));
        compareAndPrint("op_c_modulation_lfo_2_MULTIPLY_ctrl_2", previous_op_c_modulation_lfo_2_MULTIPLY_ctrl_2, get(op_c_modulation_lfo_2_MULTIPLY_ctrl_2));
        compareAndPrint("op_d_modulation_lfo_2_MULTIPLY_ctrl_2", previous_op_d_modulation_lfo_2_MULTIPLY_ctrl_2, get(op_d_modulation_lfo_2_MULTIPLY_ctrl_2));
        compareAndPrint("op_e_modulation_lfo_2_MULTIPLY_ctrl_2", previous_op_e_modulation_lfo_2_MULTIPLY_ctrl_2, get(op_e_modulation_lfo_2_MULTIPLY_ctrl_2));
        compareAndPrint("op_f_modulation_lfo_2_MULTIPLY_ctrl_2", previous_op_f_modulation_lfo_2_MULTIPLY_ctrl_2, get(op_f_modulation_lfo_2_MULTIPLY_ctrl_2));
        compareAndPrint("op_x_modulation_lfo_2_MULTIPLY_ctrl_2", previous_op_x_modulation_lfo_2_MULTIPLY_ctrl_2, get(op_x_modulation_lfo_2_MULTIPLY_ctrl_2));
        compareAndPrint("op_z_modulation_lfo_2_MULTIPLY_ctrl_2", previous_op_z_modulation_lfo_2_MULTIPLY_ctrl_2, get(op_z_modulation_lfo_2_MULTIPLY_ctrl_2));
        compareAndPrint("pitch_modulation_lfo_2_MULTIPLY_ctrl_2", previous_pitch_modulation_lfo_2_MULTIPLY_ctrl_2, get(pitch_modulation_lfo_2_MULTIPLY_ctrl_2));
        compareAndPrint("lfo_1_invert", previous_lfo_1_invert, get(lfo_1_invert));
        compareAndPrint("lfo_2_invert", previous_lfo_2_invert, get(lfo_2_invert));
        compareAndPrint("lfo_1_on_off", previous_lfo_1_on_off, get(lfo_1_on_off));
        compareAndPrint("number_of_lfo1_waveform", previous_number_of_lfo1_waveform, get(number_of_lfo1_waveform));
        compareAndPrint("lfo_1_rate", previous_lfo_1_rate, get(lfo_1_rate));
        compareAndPrint("lfo_1_delay_time", previous_lfo_1_delay_time, get(lfo_1_delay_time));
        compareAndPrint("freerun_or_keysync_of_lfo_1", previous_freerun_or_keysync_of_lfo_1, get(freerun_or_keysync_of_lfo_1));
        compareAndPrint("midi_tempo_sync_of_lfo_1_rate", previous_midi_tempo_sync_of_lfo_1_rate, get(midi_tempo_sync_of_lfo_1_rate));
        compareAndPrint("velocity_scaling_of_lfo_1_rate", previous_velocity_scaling_of_lfo_1_rate, get(velocity_scaling_of_lfo_1_rate));
    }

    void doRecordParams() {
        previous_easy_edit_effect_strength = get(easy_edit_effect_strength);
        previous_easy_edit_timbre_brightness = get(easy_edit_timbre_brightness);
        previous_easy_edit_timbre_harmonic = get(easy_edit_timbre_harmonic);
        previous_easy_edit_timbre_detune = get(easy_edit_timbre_detune);
        previous_easy_edit_timbre_env_amount = get(easy_edit_timbre_env_amount);
        previous_easy_edit_timbre_velocity_sens_ = get(easy_edit_timbre_velocity_sens_);
        previous_easy_edit_timbre_envelope_attack = get(easy_edit_timbre_envelope_attack);
        previous_easy_edit_timbre_envelope_decay = get(easy_edit_timbre_envelope_decay);
        previous_easy_edit_timbreenvelope_sustain = get(easy_edit_timbreenvelope_sustain);
        previous_easy_edit_timbreenvelope_release = get(easy_edit_timbreenvelope_release);
        previous_easy_edit_lfo_rate = get(easy_edit_lfo_rate);
        previous_easy_edit_lfo_vibrato = get(easy_edit_lfo_vibrato);
        previous_easy_edit_lfo_timbre = get(easy_edit_lfo_timbre);
        previous_easy_edit_lfo_tremolo = get(easy_edit_lfo_tremolo);
        previous_easy_edit_output_volume = get(easy_edit_output_volume);
        previous_easy_edit_output_stereo_width = get(easy_edit_output_stereo_width);
        previous_easy_edit_output_velocity_sens_ = get(easy_edit_output_velocity_sens_);
        previous_easy_edit_volume_envelope_attack = get(easy_edit_volume_envelope_attack);
        previous_easy_edit_volume_envelope_decay = get(easy_edit_volume_envelope_decay);
        previous_easy_edit_volumeenvelope_sustain = get(easy_edit_volumeenvelope_sustain);
        previous_easy_edit_volumeenvelope_release = get(easy_edit_volumeenvelope_release);
        previous_morph_x = get(morph_x);
        previous_morph_y = get(morph_y);
        previous_morph_random_x = get(morph_random_x);
        previous_morph_random_y = get(morph_random_y);
        previous_morph_random_seed = get(morph_random_seed);
        previous_effects_amount_bl = get(effects_amount_bl);
        previous_effects_amount_br = get(effects_amount_br);
        previous_effects_amount_tr = get(effects_amount_tr);
        previous_effects_amount_tl = get(effects_amount_tl);
        previous_overdrive_on_off = get(overdrive_on_off);
        previous_overdrive_drive = get(overdrive_drive);
        previous_overdrive_tone = get(overdrive_tone);
        previous_overdrive_bass = get(overdrive_bass);
        previous_overdrive_volume = get(overdrive_volume);
        previous_tubeamp_on_off = get(tubeamp_on_off);
        previous_tubeamp_drive = get(tubeamp_drive);
        previous_tubeamp_volume = get(tubeamp_volume);
        previous_cabinet_on_off = get(cabinet_on_off);
        previous_cabinet_type = get(cabinet_type);
        previous_cabinet_size = get(cabinet_size);
        previous_cabinet_air = get(cabinet_air);
        previous_cabinet_bass = get(cabinet_bass);
        previous_cabinet_treble = get(cabinet_treble);
        previous_shelfeq_on_off = get(shelfeq_on_off);
        previous_shelfeq_low_frequency = get(shelfeq_low_frequency);
        previous_shelfeq_low_gain = get(shelfeq_low_gain);
        previous_shelfeq_high_frequency = get(shelfeq_high_frequency);
        previous_shelfeq_high_gain = get(shelfeq_high_gain);
        previous_shelfeq_volume = get(shelfeq_volume);
        previous_peakeq_on_off = get(peakeq_on_off);
        previous_peakeq_frequency_1 = get(peakeq_frequency_1);
        previous_peakeq_gain_1 = get(peakeq_gain_1);
        previous_peakeq_quality_1 = get(peakeq_quality_1);
        previous_peakeq_frequency_2 = get(peakeq_frequency_2);
        previous_peakeq_gain_2 = get(peakeq_gain_2);
        previous_peakeq_quality_2 = get(peakeq_quality_2);
        previous_peakeq_volume = get(peakeq_volume);
        previous_talkwah_on_off = get(talkwah_on_off);
        previous_talkwah_mouth = get(talkwah_mouth);
        previous_talkwah_modwheel = get(talkwah_modwheel);
        previous_talkwah_size = get(talkwah_size);
        previous_talkwah_bright = get(talkwah_bright);
        previous_phaser_on_off = get(phaser_on_off);
        previous_phaser_modulation_rate = get(phaser_modulation_rate);
        previous_phaser_color = get(phaser_color);
        previous_phaser_rotate = get(phaser_rotate);
        previous_phaser_sweep_minimum = get(phaser_sweep_minimum);
        previous_phaser_sweep_maximum = get(phaser_sweep_maximum);
        previous_phaser_midi_tempo_sync = get(phaser_midi_tempo_sync);
        previous_phaser_dry_wet = get(phaser_dry_wet);
        previous_phaser_invert = get(phaser_invert);
        previous_phaser_notches = get(phaser_notches);
        previous_flanger_on_off = get(flanger_on_off);
        previous_flanger_modulation_rate = get(flanger_modulation_rate);
        previous_flanger_static = get(flanger_static);
        previous_flanger_modulation_depth = get(flanger_modulation_depth);
        previous_flanger_color = get(flanger_color);
        previous_flanger_rotate = get(flanger_rotate);
        previous_flanger_midi_tempo_sync = get(flanger_midi_tempo_sync);
        previous_flanger_invert = get(flanger_invert);
        previous_flanger_dry_wet = get(flanger_dry_wet);
        previous_tremolo_on_off = get(tremolo_on_off);
        previous_tremolo_rate = get(tremolo_rate);
        previous_tremolo_intensity = get(tremolo_intensity);
        previous_tremolo_midi_tempo_sync = get(tremolo_midi_tempo_sync);
        previous_tremolo_stereo_panning = get(tremolo_stereo_panning);
        previous_tremolo_pulse_width = get(tremolo_pulse_width);
        previous_tremolo_attack = get(tremolo_attack);
        previous_tremolo_decay = get(tremolo_decay);
        previous_reverb_on_off = get(reverb_on_off);
        previous_reverb_dry_wet = get(reverb_dry_wet);
        previous_reverb_bright = get(reverb_bright);
        previous_reverb_roomsize = get(reverb_roomsize);
        previous_reverb_treble = get(reverb_treble);
        previous_psychedelay_on_off = get(psychedelay_on_off);
        previous_psychedelay_dry_wet = get(psychedelay_dry_wet);
        previous_psychedelay_delay_time = get(psychedelay_delay_time);
        previous_psychedelay_reverse_delay = get(psychedelay_reverse_delay);
        previous_psychedelay_delay_detune = get(psychedelay_delay_detune);
        previous_psychedelay_feedback = get(psychedelay_feedback);
        previous_psychedelay_delay_pitch_shift = get(psychedelay_delay_pitch_shift);
        previous_psychedelay_midi_tempo_sync = get(psychedelay_midi_tempo_sync);
        previous_psychedelay_stereo = get(psychedelay_stereo);
        previous_delay_delay_time = get(delay_delay_time);
        previous_delay_diffusion = get(delay_diffusion);
        previous_delay_modulation_depth = get(delay_modulation_depth);
        previous_delay_feedback = get(delay_feedback);
        previous_delay_high_cut = get(delay_high_cut);
        previous_delay_low_cut = get(delay_low_cut);
        previous_delay_invert = get(delay_invert);
        previous_delay_on_off = get(delay_on_off);
        previous_delay_dry_wet = get(delay_dry_wet);
        previous_delay_modulation_rate = get(delay_modulation_rate);
        previous_delay_sync_delays = get(delay_sync_delays);
        previous_delay_midi_tempo_sync = get(delay_midi_tempo_sync);
        previous_master_volume = get(master_volume);
        previous_input_volume = get(input_volume);
        previous_master_tune = get(master_tune);
        previous_pitch_transpose = get(pitch_transpose);
        previous_unison_detune = get(unison_detune);
        previous_unison_mono = get(unison_mono);
        previous_unison_pan = get(unison_pan);
        previous_portamento_on_off = get(portamento_on_off);
        previous_portamento_auto = get(portamento_auto);
        previous_portamento_time = get(portamento_time);
        previous_analog_quality_bl = get(analog_quality_bl);
        previous_analog_quality_br = get(analog_quality_br);
        previous_analog_quality_tr = get(analog_quality_tr);
        previous_analog_quality_tl = get(analog_quality_tl);
        previous_digital_quality_bl = get(digital_quality_bl);
        previous_digital_quality_br = get(digital_quality_br);
        previous_digital_quality_tr = get(digital_quality_tr);
        previous_digital_quality_tl = get(digital_quality_tl);
        previous_arpeggiator_on = get(arpeggiator_on);
        previous_arpeggiator_note_length = get(arpeggiator_note_length);
        previous_arpeggiator_fixed_velocity = get(arpeggiator_fixed_velocity);
        previous_arpeggiator_velocity = get(arpeggiator_velocity);
        previous_arpeggiator_accent = get(arpeggiator_accent);
        previous_arpeggiator_shuffle = get(arpeggiator_shuffle);
        previous_arpeggiator_hold = get(arpeggiator_hold);
        previous_arpeggiator_rotate_right = get(arpeggiator_rotate_right);
        previous_arpeggiator_rotate_left = get(arpeggiator_rotate_left);
        previous_arpeggiator_number_of_steps = get(arpeggiator_number_of_steps);
        previous_arpeggiator_mode = get(arpeggiator_mode);
        previous_arpeggiator_down = get(arpeggiator_down);
        previous_arpeggiator_1_shot = get(arpeggiator_1_shot);
        previous_arpeggiator_tempo = get(arpeggiator_tempo);
        previous_arpeggiator_tripplets = get(arpeggiator_tripplets);
        previous_arpeggiator_dotted = get(arpeggiator_dotted);
        previous_arpeggiator_key_sync = get(arpeggiator_key_sync);
        previous_arpeggiator_bpm_sync = get(arpeggiator_bpm_sync);
        previous_arpeggiator_bpm = get(arpeggiator_bpm);
        previous_arpeggiator_split_on = get(arpeggiator_split_on);
        previous_arpeggiator_split_note = get(arpeggiator_split_note);
        previous_arpeggiator_split_bass = get(arpeggiator_split_bass);
        previous_microtune_root_note = get(microtune_root_note);
        previous_microtuning_of_note_c_ = get(microtuning_of_note_c_);
        previous_microtuning_of_note_c_sharp = get(microtuning_of_note_c_sharp);
        previous_microtuning_of_note_d_ = get(microtuning_of_note_d_);
        previous_microtuning_of_note_d_sharp = get(microtuning_of_note_d_sharp);
        previous_microtuning_of_note_e_ = get(microtuning_of_note_e_);
        previous_microtuning_of_note_f_ = get(microtuning_of_note_f_);
        previous_microtuning_of_note_f_sharp = get(microtuning_of_note_f_sharp);
        previous_microtuning_of_note_g_ = get(microtuning_of_note_g_);
        previous_microtuning_of_note_g_sharp = get(microtuning_of_note_g_sharp);
        previous_microtuning_of_note_a_ = get(microtuning_of_note_a_);
        previous_microtuning_of_note_a_sharp = get(microtuning_of_note_a_sharp);
        previous_microtuning_of_note_h_ = get(microtuning_of_note_h_);
        previous_fm_matrix_op_a_GT_op_a_bl = get(fm_matrix_op_a_GT_op_a_bl);
        previous_fm_matrix_op_a_GT_op_a_br = get(fm_matrix_op_a_GT_op_a_br);
        previous_fm_matrix_op_a_GT_op_a_tr = get(fm_matrix_op_a_GT_op_a_tr);
        previous_fm_matrix_op_a_GT_op_a_tl = get(fm_matrix_op_a_GT_op_a_tl);
        previous_fm_matrix_op_a_GT_op_b_bl = get(fm_matrix_op_a_GT_op_b_bl);
        previous_fm_matrix_op_a_GT_op_b_br = get(fm_matrix_op_a_GT_op_b_br);
        previous_fm_matrix_op_a_GT_op_b_tr = get(fm_matrix_op_a_GT_op_b_tr);
        previous_fm_matrix_op_a_GT_op_b_tl = get(fm_matrix_op_a_GT_op_b_tl);
        previous_fm_matrix_op_a_GT_op_c_bl = get(fm_matrix_op_a_GT_op_c_bl);
        previous_fm_matrix_op_a_GT_op_c_br = get(fm_matrix_op_a_GT_op_c_br);
        previous_fm_matrix_op_a_GT_op_c_tr = get(fm_matrix_op_a_GT_op_c_tr);
        previous_fm_matrix_op_a_GT_op_c_tl = get(fm_matrix_op_a_GT_op_c_tl);
        previous_fm_matrix_op_a_GT_op_d_bl = get(fm_matrix_op_a_GT_op_d_bl);
        previous_fm_matrix_op_a_GT_op_d_br = get(fm_matrix_op_a_GT_op_d_br);
        previous_fm_matrix_op_a_GT_op_d_tr = get(fm_matrix_op_a_GT_op_d_tr);
        previous_fm_matrix_op_a_GT_op_d_tl = get(fm_matrix_op_a_GT_op_d_tl);
        previous_fm_matrix_op_a_GT_op_e_bl = get(fm_matrix_op_a_GT_op_e_bl);
        previous_fm_matrix_op_a_GT_op_e_br = get(fm_matrix_op_a_GT_op_e_br);
        previous_fm_matrix_op_a_GT_op_e_tr = get(fm_matrix_op_a_GT_op_e_tr);
        previous_fm_matrix_op_a_GT_op_e_tl = get(fm_matrix_op_a_GT_op_e_tl);
        previous_fm_matrix_op_a_GT_op_f_bl = get(fm_matrix_op_a_GT_op_f_bl);
        previous_fm_matrix_op_a_GT_op_f_br = get(fm_matrix_op_a_GT_op_f_br);
        previous_fm_matrix_op_a_GT_op_f_tr = get(fm_matrix_op_a_GT_op_f_tr);
        previous_fm_matrix_op_a_GT_op_f_tl = get(fm_matrix_op_a_GT_op_f_tl);
        previous_fm_matrix_op_a_GT_op_x_bl = get(fm_matrix_op_a_GT_op_x_bl);
        previous_fm_matrix_op_a_GT_op_x_br = get(fm_matrix_op_a_GT_op_x_br);
        previous_fm_matrix_op_a_GT_op_x_tr = get(fm_matrix_op_a_GT_op_x_tr);
        previous_fm_matrix_op_a_GT_op_x_tl = get(fm_matrix_op_a_GT_op_x_tl);
        previous_fm_matrix_op_a_GT_op_z_bl = get(fm_matrix_op_a_GT_op_z_bl);
        previous_fm_matrix_op_a_GT_op_z_br = get(fm_matrix_op_a_GT_op_z_br);
        previous_fm_matrix_op_a_GT_op_z_tr = get(fm_matrix_op_a_GT_op_z_tr);
        previous_fm_matrix_op_a_GT_op_z_tl = get(fm_matrix_op_a_GT_op_z_tl);
        previous_fm_matrix_op_a_GT_out_bl = get(fm_matrix_op_a_GT_out_bl);
        previous_fm_matrix_op_a_GT_out_br = get(fm_matrix_op_a_GT_out_br);
        previous_fm_matrix_op_a_GT_out_tr = get(fm_matrix_op_a_GT_out_tr);
        previous_fm_matrix_op_a_GT_out_tl = get(fm_matrix_op_a_GT_out_tl);
        previous_fm_matrix_op_a_GT_pan_bl = get(fm_matrix_op_a_GT_pan_bl);
        previous_fm_matrix_op_a_GT_pan_br = get(fm_matrix_op_a_GT_pan_br);
        previous_fm_matrix_op_a_GT_pan_tr = get(fm_matrix_op_a_GT_pan_tr);
        previous_fm_matrix_op_a_GT_pan_tl = get(fm_matrix_op_a_GT_pan_tl);
        previous_fm_matrix_op_a_GT_in_bl = get(fm_matrix_op_a_GT_in_bl);
        previous_fm_matrix_op_a_GT_in_br = get(fm_matrix_op_a_GT_in_br);
        previous_fm_matrix_op_a_GT_in_tr = get(fm_matrix_op_a_GT_in_tr);
        previous_fm_matrix_op_a_GT_in_tl = get(fm_matrix_op_a_GT_in_tl);
        previous_fm_matrix_op_b_GT_op_a_bl = get(fm_matrix_op_b_GT_op_a_bl);
        previous_fm_matrix_op_b_GT_op_a_br = get(fm_matrix_op_b_GT_op_a_br);
        previous_fm_matrix_op_b_GT_op_a_tr = get(fm_matrix_op_b_GT_op_a_tr);
        previous_fm_matrix_op_b_GT_op_a_tl = get(fm_matrix_op_b_GT_op_a_tl);
        previous_fm_matrix_op_b_GT_op_b_bl = get(fm_matrix_op_b_GT_op_b_bl);
        previous_fm_matrix_op_b_GT_op_b_br = get(fm_matrix_op_b_GT_op_b_br);
        previous_fm_matrix_op_b_GT_op_b_tr = get(fm_matrix_op_b_GT_op_b_tr);
        previous_fm_matrix_op_b_GT_op_b_tl = get(fm_matrix_op_b_GT_op_b_tl);
        previous_fm_matrix_op_b_GT_op_c_bl = get(fm_matrix_op_b_GT_op_c_bl);
        previous_fm_matrix_op_b_GT_op_c_br = get(fm_matrix_op_b_GT_op_c_br);
        previous_fm_matrix_op_b_GT_op_c_tr = get(fm_matrix_op_b_GT_op_c_tr);
        previous_fm_matrix_op_b_GT_op_c_tl = get(fm_matrix_op_b_GT_op_c_tl);
        previous_fm_matrix_op_b_GT_op_d_bl = get(fm_matrix_op_b_GT_op_d_bl);
        previous_fm_matrix_op_b_GT_op_d_br = get(fm_matrix_op_b_GT_op_d_br);
        previous_fm_matrix_op_b_GT_op_d_tr = get(fm_matrix_op_b_GT_op_d_tr);
        previous_fm_matrix_op_b_GT_op_d_tl = get(fm_matrix_op_b_GT_op_d_tl);
        previous_fm_matrix_op_b_GT_op_e_bl = get(fm_matrix_op_b_GT_op_e_bl);
        previous_fm_matrix_op_b_GT_op_e_br = get(fm_matrix_op_b_GT_op_e_br);
        previous_fm_matrix_op_b_GT_op_e_tr = get(fm_matrix_op_b_GT_op_e_tr);
        previous_fm_matrix_op_b_GT_op_e_tl = get(fm_matrix_op_b_GT_op_e_tl);
        previous_fm_matrix_op_b_GT_op_f_bl = get(fm_matrix_op_b_GT_op_f_bl);
        previous_fm_matrix_op_b_GT_op_f_br = get(fm_matrix_op_b_GT_op_f_br);
        previous_fm_matrix_op_b_GT_op_f_tr = get(fm_matrix_op_b_GT_op_f_tr);
        previous_fm_matrix_op_b_GT_op_f_tl = get(fm_matrix_op_b_GT_op_f_tl);
        previous_fm_matrix_op_b_GT_op_x_bl = get(fm_matrix_op_b_GT_op_x_bl);
        previous_fm_matrix_op_b_GT_op_x_br = get(fm_matrix_op_b_GT_op_x_br);
        previous_fm_matrix_op_b_GT_op_x_tr = get(fm_matrix_op_b_GT_op_x_tr);
        previous_fm_matrix_op_b_GT_op_x_tl = get(fm_matrix_op_b_GT_op_x_tl);
        previous_fm_matrix_op_b_GT_op_z_bl = get(fm_matrix_op_b_GT_op_z_bl);
        previous_fm_matrix_op_b_GT_op_z_br = get(fm_matrix_op_b_GT_op_z_br);
        previous_fm_matrix_op_b_GT_op_z_tr = get(fm_matrix_op_b_GT_op_z_tr);
        previous_fm_matrix_op_b_GT_op_z_tl = get(fm_matrix_op_b_GT_op_z_tl);
        previous_fm_matrix_op_b_GT_out_bl = get(fm_matrix_op_b_GT_out_bl);
        previous_fm_matrix_op_b_GT_out_br = get(fm_matrix_op_b_GT_out_br);
        previous_fm_matrix_op_b_GT_out_tr = get(fm_matrix_op_b_GT_out_tr);
        previous_fm_matrix_op_b_GT_out_tl = get(fm_matrix_op_b_GT_out_tl);
        previous_fm_matrix_op_b_GT_pan_bl = get(fm_matrix_op_b_GT_pan_bl);
        previous_fm_matrix_op_b_GT_pan_br = get(fm_matrix_op_b_GT_pan_br);
        previous_fm_matrix_op_b_GT_pan_tr = get(fm_matrix_op_b_GT_pan_tr);
        previous_fm_matrix_op_b_GT_pan_tl = get(fm_matrix_op_b_GT_pan_tl);
        previous_fm_matrix_op_b_GT_in_bl = get(fm_matrix_op_b_GT_in_bl);
        previous_fm_matrix_op_b_GT_in_br = get(fm_matrix_op_b_GT_in_br);
        previous_fm_matrix_op_b_GT_in_tr = get(fm_matrix_op_b_GT_in_tr);
        previous_fm_matrix_op_b_GT_in_tl = get(fm_matrix_op_b_GT_in_tl);
        previous_fm_matrix_op_c_GT_op_a_bl = get(fm_matrix_op_c_GT_op_a_bl);
        previous_fm_matrix_op_c_GT_op_a_br = get(fm_matrix_op_c_GT_op_a_br);
        previous_fm_matrix_op_c_GT_op_a_tr = get(fm_matrix_op_c_GT_op_a_tr);
        previous_fm_matrix_op_c_GT_op_a_tl = get(fm_matrix_op_c_GT_op_a_tl);
        previous_fm_matrix_op_c_GT_op_b_bl = get(fm_matrix_op_c_GT_op_b_bl);
        previous_fm_matrix_op_c_GT_op_b_br = get(fm_matrix_op_c_GT_op_b_br);
        previous_fm_matrix_op_c_GT_op_b_tr = get(fm_matrix_op_c_GT_op_b_tr);
        previous_fm_matrix_op_c_GT_op_b_tl = get(fm_matrix_op_c_GT_op_b_tl);
        previous_fm_matrix_op_c_GT_op_c_bl = get(fm_matrix_op_c_GT_op_c_bl);
        previous_fm_matrix_op_c_GT_op_c_br = get(fm_matrix_op_c_GT_op_c_br);
        previous_fm_matrix_op_c_GT_op_c_tr = get(fm_matrix_op_c_GT_op_c_tr);
        previous_fm_matrix_op_c_GT_op_c_tl = get(fm_matrix_op_c_GT_op_c_tl);
        previous_fm_matrix_op_c_GT_op_d_bl = get(fm_matrix_op_c_GT_op_d_bl);
        previous_fm_matrix_op_c_GT_op_d_br = get(fm_matrix_op_c_GT_op_d_br);
        previous_fm_matrix_op_c_GT_op_d_tr = get(fm_matrix_op_c_GT_op_d_tr);
        previous_fm_matrix_op_c_GT_op_d_tl = get(fm_matrix_op_c_GT_op_d_tl);
        previous_fm_matrix_op_c_GT_op_e_bl = get(fm_matrix_op_c_GT_op_e_bl);
        previous_fm_matrix_op_c_GT_op_e_br = get(fm_matrix_op_c_GT_op_e_br);
        previous_fm_matrix_op_c_GT_op_e_tr = get(fm_matrix_op_c_GT_op_e_tr);
        previous_fm_matrix_op_c_GT_op_e_tl = get(fm_matrix_op_c_GT_op_e_tl);
        previous_fm_matrix_op_c_GT_op_f_bl = get(fm_matrix_op_c_GT_op_f_bl);
        previous_fm_matrix_op_c_GT_op_f_br = get(fm_matrix_op_c_GT_op_f_br);
        previous_fm_matrix_op_c_GT_op_f_tr = get(fm_matrix_op_c_GT_op_f_tr);
        previous_fm_matrix_op_c_GT_op_f_tl = get(fm_matrix_op_c_GT_op_f_tl);
        previous_fm_matrix_op_c_GT_op_x_bl = get(fm_matrix_op_c_GT_op_x_bl);
        previous_fm_matrix_op_c_GT_op_x_br = get(fm_matrix_op_c_GT_op_x_br);
        previous_fm_matrix_op_c_GT_op_x_tr = get(fm_matrix_op_c_GT_op_x_tr);
        previous_fm_matrix_op_c_GT_op_x_tl = get(fm_matrix_op_c_GT_op_x_tl);
        previous_fm_matrix_op_c_GT_op_z_bl = get(fm_matrix_op_c_GT_op_z_bl);
        previous_fm_matrix_op_c_GT_op_z_br = get(fm_matrix_op_c_GT_op_z_br);
        previous_fm_matrix_op_c_GT_op_z_tr = get(fm_matrix_op_c_GT_op_z_tr);
        previous_fm_matrix_op_c_GT_op_z_tl = get(fm_matrix_op_c_GT_op_z_tl);
        previous_fm_matrix_op_c_GT_out_bl = get(fm_matrix_op_c_GT_out_bl);
        previous_fm_matrix_op_c_GT_out_br = get(fm_matrix_op_c_GT_out_br);
        previous_fm_matrix_op_c_GT_out_tr = get(fm_matrix_op_c_GT_out_tr);
        previous_fm_matrix_op_c_GT_out_tl = get(fm_matrix_op_c_GT_out_tl);
        previous_fm_matrix_op_c_GT_pan_bl = get(fm_matrix_op_c_GT_pan_bl);
        previous_fm_matrix_op_c_GT_pan_br = get(fm_matrix_op_c_GT_pan_br);
        previous_fm_matrix_op_c_GT_pan_tr = get(fm_matrix_op_c_GT_pan_tr);
        previous_fm_matrix_op_c_GT_pan_tl = get(fm_matrix_op_c_GT_pan_tl);
        previous_fm_matrix_op_c_GT_in_bl = get(fm_matrix_op_c_GT_in_bl);
        previous_fm_matrix_op_c_GT_in_br = get(fm_matrix_op_c_GT_in_br);
        previous_fm_matrix_op_c_GT_in_tr = get(fm_matrix_op_c_GT_in_tr);
        previous_fm_matrix_op_c_GT_in_tl = get(fm_matrix_op_c_GT_in_tl);
        previous_fm_matrix_op_d_GT_op_a_bl = get(fm_matrix_op_d_GT_op_a_bl);
        previous_fm_matrix_op_d_GT_op_a_br = get(fm_matrix_op_d_GT_op_a_br);
        previous_fm_matrix_op_d_GT_op_a_tr = get(fm_matrix_op_d_GT_op_a_tr);
        previous_fm_matrix_op_d_GT_op_a_tl = get(fm_matrix_op_d_GT_op_a_tl);
        previous_fm_matrix_op_d_GT_op_b_bl = get(fm_matrix_op_d_GT_op_b_bl);
        previous_fm_matrix_op_d_GT_op_b_br = get(fm_matrix_op_d_GT_op_b_br);
        previous_fm_matrix_op_d_GT_op_b_tr = get(fm_matrix_op_d_GT_op_b_tr);
        previous_fm_matrix_op_d_GT_op_b_tl = get(fm_matrix_op_d_GT_op_b_tl);
        previous_fm_matrix_op_d_GT_op_c_bl = get(fm_matrix_op_d_GT_op_c_bl);
        previous_fm_matrix_op_d_GT_op_c_br = get(fm_matrix_op_d_GT_op_c_br);
        previous_fm_matrix_op_d_GT_op_c_tr = get(fm_matrix_op_d_GT_op_c_tr);
        previous_fm_matrix_op_d_GT_op_c_tl = get(fm_matrix_op_d_GT_op_c_tl);
        previous_fm_matrix_op_d_GT_op_d_bl = get(fm_matrix_op_d_GT_op_d_bl);
        previous_fm_matrix_op_d_GT_op_d_br = get(fm_matrix_op_d_GT_op_d_br);
        previous_fm_matrix_op_d_GT_op_d_tr = get(fm_matrix_op_d_GT_op_d_tr);
        previous_fm_matrix_op_d_GT_op_d_tl = get(fm_matrix_op_d_GT_op_d_tl);
        previous_fm_matrix_op_d_GT_op_e_bl = get(fm_matrix_op_d_GT_op_e_bl);
        previous_fm_matrix_op_d_GT_op_e_br = get(fm_matrix_op_d_GT_op_e_br);
        previous_fm_matrix_op_d_GT_op_e_tr = get(fm_matrix_op_d_GT_op_e_tr);
        previous_fm_matrix_op_d_GT_op_e_tl = get(fm_matrix_op_d_GT_op_e_tl);
        previous_fm_matrix_op_d_GT_op_f_bl = get(fm_matrix_op_d_GT_op_f_bl);
        previous_fm_matrix_op_d_GT_op_f_br = get(fm_matrix_op_d_GT_op_f_br);
        previous_fm_matrix_op_d_GT_op_f_tr = get(fm_matrix_op_d_GT_op_f_tr);
        previous_fm_matrix_op_d_GT_op_f_tl = get(fm_matrix_op_d_GT_op_f_tl);
        previous_fm_matrix_op_d_GT_op_x_bl = get(fm_matrix_op_d_GT_op_x_bl);
        previous_fm_matrix_op_d_GT_op_x_br = get(fm_matrix_op_d_GT_op_x_br);
        previous_fm_matrix_op_d_GT_op_x_tr = get(fm_matrix_op_d_GT_op_x_tr);
        previous_fm_matrix_op_d_GT_op_x_tl = get(fm_matrix_op_d_GT_op_x_tl);
        previous_fm_matrix_op_d_GT_op_z_bl = get(fm_matrix_op_d_GT_op_z_bl);
        previous_fm_matrix_op_d_GT_op_z_br = get(fm_matrix_op_d_GT_op_z_br);
        previous_fm_matrix_op_d_GT_op_z_tr = get(fm_matrix_op_d_GT_op_z_tr);
        previous_fm_matrix_op_d_GT_op_z_tl = get(fm_matrix_op_d_GT_op_z_tl);
        previous_fm_matrix_op_d_GT_out_bl = get(fm_matrix_op_d_GT_out_bl);
        previous_fm_matrix_op_d_GT_out_br = get(fm_matrix_op_d_GT_out_br);
        previous_fm_matrix_op_d_GT_out_tr = get(fm_matrix_op_d_GT_out_tr);
        previous_fm_matrix_op_d_GT_out_tl = get(fm_matrix_op_d_GT_out_tl);
        previous_fm_matrix_op_d_GT_pan_bl = get(fm_matrix_op_d_GT_pan_bl);
        previous_fm_matrix_op_d_GT_pan_br = get(fm_matrix_op_d_GT_pan_br);
        previous_fm_matrix_op_d_GT_pan_tr = get(fm_matrix_op_d_GT_pan_tr);
        previous_fm_matrix_op_d_GT_pan_tl = get(fm_matrix_op_d_GT_pan_tl);
        previous_fm_matrix_op_d_GT_in_bl = get(fm_matrix_op_d_GT_in_bl);
        previous_fm_matrix_op_d_GT_in_br = get(fm_matrix_op_d_GT_in_br);
        previous_fm_matrix_op_d_GT_in_tr = get(fm_matrix_op_d_GT_in_tr);
        previous_fm_matrix_op_d_GT_in_tl = get(fm_matrix_op_d_GT_in_tl);
        previous_fm_matrix_op_e_GT_op_a_bl = get(fm_matrix_op_e_GT_op_a_bl);
        previous_fm_matrix_op_e_GT_op_a_br = get(fm_matrix_op_e_GT_op_a_br);
        previous_fm_matrix_op_e_GT_op_a_tr = get(fm_matrix_op_e_GT_op_a_tr);
        previous_fm_matrix_op_e_GT_op_a_tl = get(fm_matrix_op_e_GT_op_a_tl);
        previous_fm_matrix_op_e_GT_op_b_bl = get(fm_matrix_op_e_GT_op_b_bl);
        previous_fm_matrix_op_e_GT_op_b_br = get(fm_matrix_op_e_GT_op_b_br);
        previous_fm_matrix_op_e_GT_op_b_tr = get(fm_matrix_op_e_GT_op_b_tr);
        previous_fm_matrix_op_e_GT_op_b_tl = get(fm_matrix_op_e_GT_op_b_tl);
        previous_fm_matrix_op_e_GT_op_c_bl = get(fm_matrix_op_e_GT_op_c_bl);
        previous_fm_matrix_op_e_GT_op_c_br = get(fm_matrix_op_e_GT_op_c_br);
        previous_fm_matrix_op_e_GT_op_c_tr = get(fm_matrix_op_e_GT_op_c_tr);
        previous_fm_matrix_op_e_GT_op_c_tl = get(fm_matrix_op_e_GT_op_c_tl);
        previous_fm_matrix_op_e_GT_op_d_bl = get(fm_matrix_op_e_GT_op_d_bl);
        previous_fm_matrix_op_e_GT_op_d_br = get(fm_matrix_op_e_GT_op_d_br);
        previous_fm_matrix_op_e_GT_op_d_tr = get(fm_matrix_op_e_GT_op_d_tr);
        previous_fm_matrix_op_e_GT_op_d_tl = get(fm_matrix_op_e_GT_op_d_tl);
        previous_fm_matrix_op_e_GT_op_e_bl = get(fm_matrix_op_e_GT_op_e_bl);
        previous_fm_matrix_op_e_GT_op_e_br = get(fm_matrix_op_e_GT_op_e_br);
        previous_fm_matrix_op_e_GT_op_e_tr = get(fm_matrix_op_e_GT_op_e_tr);
        previous_fm_matrix_op_e_GT_op_e_tl = get(fm_matrix_op_e_GT_op_e_tl);
        previous_fm_matrix_op_e_GT_op_f_bl = get(fm_matrix_op_e_GT_op_f_bl);
        previous_fm_matrix_op_e_GT_op_f_br = get(fm_matrix_op_e_GT_op_f_br);
        previous_fm_matrix_op_e_GT_op_f_tr = get(fm_matrix_op_e_GT_op_f_tr);
        previous_fm_matrix_op_e_GT_op_f_tl = get(fm_matrix_op_e_GT_op_f_tl);
        previous_fm_matrix_op_e_GT_op_x_bl = get(fm_matrix_op_e_GT_op_x_bl);
        previous_fm_matrix_op_e_GT_op_x_br = get(fm_matrix_op_e_GT_op_x_br);
        previous_fm_matrix_op_e_GT_op_x_tr = get(fm_matrix_op_e_GT_op_x_tr);
        previous_fm_matrix_op_e_GT_op_x_tl = get(fm_matrix_op_e_GT_op_x_tl);
        previous_fm_matrix_op_e_GT_op_z_bl = get(fm_matrix_op_e_GT_op_z_bl);
        previous_fm_matrix_op_e_GT_op_z_br = get(fm_matrix_op_e_GT_op_z_br);
        previous_fm_matrix_op_e_GT_op_z_tr = get(fm_matrix_op_e_GT_op_z_tr);
        previous_fm_matrix_op_e_GT_op_z_tl = get(fm_matrix_op_e_GT_op_z_tl);
        previous_fm_matrix_op_e_GT_out_bl = get(fm_matrix_op_e_GT_out_bl);
        previous_fm_matrix_op_e_GT_out_br = get(fm_matrix_op_e_GT_out_br);
        previous_fm_matrix_op_e_GT_out_tr = get(fm_matrix_op_e_GT_out_tr);
        previous_fm_matrix_op_e_GT_out_tl = get(fm_matrix_op_e_GT_out_tl);
        previous_fm_matrix_op_e_GT_pan_bl = get(fm_matrix_op_e_GT_pan_bl);
        previous_fm_matrix_op_e_GT_pan_br = get(fm_matrix_op_e_GT_pan_br);
        previous_fm_matrix_op_e_GT_pan_tr = get(fm_matrix_op_e_GT_pan_tr);
        previous_fm_matrix_op_e_GT_pan_tl = get(fm_matrix_op_e_GT_pan_tl);
        previous_fm_matrix_op_e_GT_in_bl = get(fm_matrix_op_e_GT_in_bl);
        previous_fm_matrix_op_e_GT_in_br = get(fm_matrix_op_e_GT_in_br);
        previous_fm_matrix_op_e_GT_in_tr = get(fm_matrix_op_e_GT_in_tr);
        previous_fm_matrix_op_e_GT_in_tl = get(fm_matrix_op_e_GT_in_tl);
        previous_fm_matrix_op_f_GT_op_a_bl = get(fm_matrix_op_f_GT_op_a_bl);
        previous_fm_matrix_op_f_GT_op_a_br = get(fm_matrix_op_f_GT_op_a_br);
        previous_fm_matrix_op_f_GT_op_a_tr = get(fm_matrix_op_f_GT_op_a_tr);
        previous_fm_matrix_op_f_GT_op_a_tl = get(fm_matrix_op_f_GT_op_a_tl);
        previous_fm_matrix_op_f_GT_op_b_bl = get(fm_matrix_op_f_GT_op_b_bl);
        previous_fm_matrix_op_f_GT_op_b_br = get(fm_matrix_op_f_GT_op_b_br);
        previous_fm_matrix_op_f_GT_op_b_tr = get(fm_matrix_op_f_GT_op_b_tr);
        previous_fm_matrix_op_f_GT_op_b_tl = get(fm_matrix_op_f_GT_op_b_tl);
        previous_fm_matrix_op_f_GT_op_c_bl = get(fm_matrix_op_f_GT_op_c_bl);
        previous_fm_matrix_op_f_GT_op_c_br = get(fm_matrix_op_f_GT_op_c_br);
        previous_fm_matrix_op_f_GT_op_c_tr = get(fm_matrix_op_f_GT_op_c_tr);
        previous_fm_matrix_op_f_GT_op_c_tl = get(fm_matrix_op_f_GT_op_c_tl);
        previous_fm_matrix_op_f_GT_op_d_bl = get(fm_matrix_op_f_GT_op_d_bl);
        previous_fm_matrix_op_f_GT_op_d_br = get(fm_matrix_op_f_GT_op_d_br);
        previous_fm_matrix_op_f_GT_op_d_tr = get(fm_matrix_op_f_GT_op_d_tr);
        previous_fm_matrix_op_f_GT_op_d_tl = get(fm_matrix_op_f_GT_op_d_tl);
        previous_fm_matrix_op_f_GT_op_e_bl = get(fm_matrix_op_f_GT_op_e_bl);
        previous_fm_matrix_op_f_GT_op_e_br = get(fm_matrix_op_f_GT_op_e_br);
        previous_fm_matrix_op_f_GT_op_e_tr = get(fm_matrix_op_f_GT_op_e_tr);
        previous_fm_matrix_op_f_GT_op_e_tl = get(fm_matrix_op_f_GT_op_e_tl);
        previous_fm_matrix_op_f_GT_op_f_bl = get(fm_matrix_op_f_GT_op_f_bl);
        previous_fm_matrix_op_f_GT_op_f_br = get(fm_matrix_op_f_GT_op_f_br);
        previous_fm_matrix_op_f_GT_op_f_tr = get(fm_matrix_op_f_GT_op_f_tr);
        previous_fm_matrix_op_f_GT_op_f_tl = get(fm_matrix_op_f_GT_op_f_tl);
        previous_fm_matrix_op_f_GT_op_x_bl = get(fm_matrix_op_f_GT_op_x_bl);
        previous_fm_matrix_op_f_GT_op_x_br = get(fm_matrix_op_f_GT_op_x_br);
        previous_fm_matrix_op_f_GT_op_x_tr = get(fm_matrix_op_f_GT_op_x_tr);
        previous_fm_matrix_op_f_GT_op_x_tl = get(fm_matrix_op_f_GT_op_x_tl);
        previous_fm_matrix_op_f_GT_op_z_bl = get(fm_matrix_op_f_GT_op_z_bl);
        previous_fm_matrix_op_f_GT_op_z_br = get(fm_matrix_op_f_GT_op_z_br);
        previous_fm_matrix_op_f_GT_op_z_tr = get(fm_matrix_op_f_GT_op_z_tr);
        previous_fm_matrix_op_f_GT_op_z_tl = get(fm_matrix_op_f_GT_op_z_tl);
        previous_fm_matrix_op_f_GT_out_bl = get(fm_matrix_op_f_GT_out_bl);
        previous_fm_matrix_op_f_GT_out_br = get(fm_matrix_op_f_GT_out_br);
        previous_fm_matrix_op_f_GT_out_tr = get(fm_matrix_op_f_GT_out_tr);
        previous_fm_matrix_op_f_GT_out_tl = get(fm_matrix_op_f_GT_out_tl);
        previous_fm_matrix_op_f_GT_pan_bl = get(fm_matrix_op_f_GT_pan_bl);
        previous_fm_matrix_op_f_GT_pan_br = get(fm_matrix_op_f_GT_pan_br);
        previous_fm_matrix_op_f_GT_pan_tr = get(fm_matrix_op_f_GT_pan_tr);
        previous_fm_matrix_op_f_GT_pan_tl = get(fm_matrix_op_f_GT_pan_tl);
        previous_fm_matrix_op_f_GT_in_bl = get(fm_matrix_op_f_GT_in_bl);
        previous_fm_matrix_op_f_GT_in_br = get(fm_matrix_op_f_GT_in_br);
        previous_fm_matrix_op_f_GT_in_tr = get(fm_matrix_op_f_GT_in_tr);
        previous_fm_matrix_op_f_GT_in_tl = get(fm_matrix_op_f_GT_in_tl);
        previous_fm_matrix_op_x_GT_op_a_bl = get(fm_matrix_op_x_GT_op_a_bl);
        previous_fm_matrix_op_x_GT_op_a_br = get(fm_matrix_op_x_GT_op_a_br);
        previous_fm_matrix_op_x_GT_op_a_tr = get(fm_matrix_op_x_GT_op_a_tr);
        previous_fm_matrix_op_x_GT_op_a_tl = get(fm_matrix_op_x_GT_op_a_tl);
        previous_fm_matrix_op_x_GT_op_b_bl = get(fm_matrix_op_x_GT_op_b_bl);
        previous_fm_matrix_op_x_GT_op_b_br = get(fm_matrix_op_x_GT_op_b_br);
        previous_fm_matrix_op_x_GT_op_b_tr = get(fm_matrix_op_x_GT_op_b_tr);
        previous_fm_matrix_op_x_GT_op_b_tl = get(fm_matrix_op_x_GT_op_b_tl);
        previous_fm_matrix_op_x_GT_op_c_bl = get(fm_matrix_op_x_GT_op_c_bl);
        previous_fm_matrix_op_x_GT_op_c_br = get(fm_matrix_op_x_GT_op_c_br);
        previous_fm_matrix_op_x_GT_op_c_tr = get(fm_matrix_op_x_GT_op_c_tr);
        previous_fm_matrix_op_x_GT_op_c_tl = get(fm_matrix_op_x_GT_op_c_tl);
        previous_fm_matrix_op_x_GT_op_d_bl = get(fm_matrix_op_x_GT_op_d_bl);
        previous_fm_matrix_op_x_GT_op_d_br = get(fm_matrix_op_x_GT_op_d_br);
        previous_fm_matrix_op_x_GT_op_d_tr = get(fm_matrix_op_x_GT_op_d_tr);
        previous_fm_matrix_op_x_GT_op_d_tl = get(fm_matrix_op_x_GT_op_d_tl);
        previous_fm_matrix_op_x_GT_op_e_bl = get(fm_matrix_op_x_GT_op_e_bl);
        previous_fm_matrix_op_x_GT_op_e_br = get(fm_matrix_op_x_GT_op_e_br);
        previous_fm_matrix_op_x_GT_op_e_tr = get(fm_matrix_op_x_GT_op_e_tr);
        previous_fm_matrix_op_x_GT_op_e_tl = get(fm_matrix_op_x_GT_op_e_tl);
        previous_fm_matrix_op_x_GT_op_f_bl = get(fm_matrix_op_x_GT_op_f_bl);
        previous_fm_matrix_op_x_GT_op_f_br = get(fm_matrix_op_x_GT_op_f_br);
        previous_fm_matrix_op_x_GT_op_f_tr = get(fm_matrix_op_x_GT_op_f_tr);
        previous_fm_matrix_op_x_GT_op_f_tl = get(fm_matrix_op_x_GT_op_f_tl);
        previous_fm_matrix_op_x_GT_op_z_bl = get(fm_matrix_op_x_GT_op_z_bl);
        previous_fm_matrix_op_x_GT_op_z_br = get(fm_matrix_op_x_GT_op_z_br);
        previous_fm_matrix_op_x_GT_op_z_tr = get(fm_matrix_op_x_GT_op_z_tr);
        previous_fm_matrix_op_x_GT_op_z_tl = get(fm_matrix_op_x_GT_op_z_tl);
        previous_fm_matrix_op_x_GT_out_bl = get(fm_matrix_op_x_GT_out_bl);
        previous_fm_matrix_op_x_GT_out_br = get(fm_matrix_op_x_GT_out_br);
        previous_fm_matrix_op_x_GT_out_tr = get(fm_matrix_op_x_GT_out_tr);
        previous_fm_matrix_op_x_GT_out_tl = get(fm_matrix_op_x_GT_out_tl);
        previous_fm_matrix_op_x_GT_pan_bl = get(fm_matrix_op_x_GT_pan_bl);
        previous_fm_matrix_op_x_GT_pan_br = get(fm_matrix_op_x_GT_pan_br);
        previous_fm_matrix_op_x_GT_pan_tr = get(fm_matrix_op_x_GT_pan_tr);
        previous_fm_matrix_op_x_GT_pan_tl = get(fm_matrix_op_x_GT_pan_tl);
        previous_fm_matrix_op_x_GT_in_bl = get(fm_matrix_op_x_GT_in_bl);
        previous_fm_matrix_op_x_GT_in_br = get(fm_matrix_op_x_GT_in_br);
        previous_fm_matrix_op_x_GT_in_tr = get(fm_matrix_op_x_GT_in_tr);
        previous_fm_matrix_op_x_GT_in_tl = get(fm_matrix_op_x_GT_in_tl);
        previous_fm_matrix_op_z_GT_op_a_bl = get(fm_matrix_op_z_GT_op_a_bl);
        previous_fm_matrix_op_z_GT_op_a_br = get(fm_matrix_op_z_GT_op_a_br);
        previous_fm_matrix_op_z_GT_op_a_tr = get(fm_matrix_op_z_GT_op_a_tr);
        previous_fm_matrix_op_z_GT_op_a_tl = get(fm_matrix_op_z_GT_op_a_tl);
        previous_fm_matrix_op_z_GT_op_b_bl = get(fm_matrix_op_z_GT_op_b_bl);
        previous_fm_matrix_op_z_GT_op_b_br = get(fm_matrix_op_z_GT_op_b_br);
        previous_fm_matrix_op_z_GT_op_b_tr = get(fm_matrix_op_z_GT_op_b_tr);
        previous_fm_matrix_op_z_GT_op_b_tl = get(fm_matrix_op_z_GT_op_b_tl);
        previous_fm_matrix_op_z_GT_op_c_bl = get(fm_matrix_op_z_GT_op_c_bl);
        previous_fm_matrix_op_z_GT_op_c_br = get(fm_matrix_op_z_GT_op_c_br);
        previous_fm_matrix_op_z_GT_op_c_tr = get(fm_matrix_op_z_GT_op_c_tr);
        previous_fm_matrix_op_z_GT_op_c_tl = get(fm_matrix_op_z_GT_op_c_tl);
        previous_fm_matrix_op_z_GT_op_d_bl = get(fm_matrix_op_z_GT_op_d_bl);
        previous_fm_matrix_op_z_GT_op_d_br = get(fm_matrix_op_z_GT_op_d_br);
        previous_fm_matrix_op_z_GT_op_d_tr = get(fm_matrix_op_z_GT_op_d_tr);
        previous_fm_matrix_op_z_GT_op_d_tl = get(fm_matrix_op_z_GT_op_d_tl);
        previous_fm_matrix_op_z_GT_op_e_bl = get(fm_matrix_op_z_GT_op_e_bl);
        previous_fm_matrix_op_z_GT_op_e_br = get(fm_matrix_op_z_GT_op_e_br);
        previous_fm_matrix_op_z_GT_op_e_tr = get(fm_matrix_op_z_GT_op_e_tr);
        previous_fm_matrix_op_z_GT_op_e_tl = get(fm_matrix_op_z_GT_op_e_tl);
        previous_fm_matrix_op_z_GT_op_f_bl = get(fm_matrix_op_z_GT_op_f_bl);
        previous_fm_matrix_op_z_GT_op_f_br = get(fm_matrix_op_z_GT_op_f_br);
        previous_fm_matrix_op_z_GT_op_f_tr = get(fm_matrix_op_z_GT_op_f_tr);
        previous_fm_matrix_op_z_GT_op_f_tl = get(fm_matrix_op_z_GT_op_f_tl);
        previous_fm_matrix_op_z_GT_op_x_bl = get(fm_matrix_op_z_GT_op_x_bl);
        previous_fm_matrix_op_z_GT_op_x_br = get(fm_matrix_op_z_GT_op_x_br);
        previous_fm_matrix_op_z_GT_op_x_tr = get(fm_matrix_op_z_GT_op_x_tr);
        previous_fm_matrix_op_z_GT_op_x_tl = get(fm_matrix_op_z_GT_op_x_tl);
        previous_fm_matrix_op_z_GT_out_bl = get(fm_matrix_op_z_GT_out_bl);
        previous_fm_matrix_op_z_GT_out_br = get(fm_matrix_op_z_GT_out_br);
        previous_fm_matrix_op_z_GT_out_tr = get(fm_matrix_op_z_GT_out_tr);
        previous_fm_matrix_op_z_GT_out_tl = get(fm_matrix_op_z_GT_out_tl);
        previous_fm_matrix_op_z_GT_pan_bl = get(fm_matrix_op_z_GT_pan_bl);
        previous_fm_matrix_op_z_GT_pan_br = get(fm_matrix_op_z_GT_pan_br);
        previous_fm_matrix_op_z_GT_pan_tr = get(fm_matrix_op_z_GT_pan_tr);
        previous_fm_matrix_op_z_GT_pan_tl = get(fm_matrix_op_z_GT_pan_tl);
        previous_fm_matrix_op_z_GT_in_bl = get(fm_matrix_op_z_GT_in_bl);
        previous_fm_matrix_op_z_GT_in_br = get(fm_matrix_op_z_GT_in_br);
        previous_fm_matrix_op_z_GT_in_tr = get(fm_matrix_op_z_GT_in_tr);
        previous_fm_matrix_op_z_GT_in_tl = get(fm_matrix_op_z_GT_in_tl);
        previous_fm_matrix_in_GT_op_a_bl = get(fm_matrix_in_GT_op_a_bl);
        previous_fm_matrix_in_GT_op_a_br = get(fm_matrix_in_GT_op_a_br);
        previous_fm_matrix_in_GT_op_a_tr = get(fm_matrix_in_GT_op_a_tr);
        previous_fm_matrix_in_GT_op_a_tl = get(fm_matrix_in_GT_op_a_tl);
        previous_fm_matrix_in_GT_op_b_bl = get(fm_matrix_in_GT_op_b_bl);
        previous_fm_matrix_in_GT_op_b_br = get(fm_matrix_in_GT_op_b_br);
        previous_fm_matrix_in_GT_op_b_tr = get(fm_matrix_in_GT_op_b_tr);
        previous_fm_matrix_in_GT_op_b_tl = get(fm_matrix_in_GT_op_b_tl);
        previous_fm_matrix_in_GT_op_c_bl = get(fm_matrix_in_GT_op_c_bl);
        previous_fm_matrix_in_GT_op_c_br = get(fm_matrix_in_GT_op_c_br);
        previous_fm_matrix_in_GT_op_c_tr = get(fm_matrix_in_GT_op_c_tr);
        previous_fm_matrix_in_GT_op_c_tl = get(fm_matrix_in_GT_op_c_tl);
        previous_fm_matrix_in_GT_op_d_bl = get(fm_matrix_in_GT_op_d_bl);
        previous_fm_matrix_in_GT_op_d_br = get(fm_matrix_in_GT_op_d_br);
        previous_fm_matrix_in_GT_op_d_tr = get(fm_matrix_in_GT_op_d_tr);
        previous_fm_matrix_in_GT_op_d_tl = get(fm_matrix_in_GT_op_d_tl);
        previous_fm_matrix_in_GT_op_e_bl = get(fm_matrix_in_GT_op_e_bl);
        previous_fm_matrix_in_GT_op_e_br = get(fm_matrix_in_GT_op_e_br);
        previous_fm_matrix_in_GT_op_e_tr = get(fm_matrix_in_GT_op_e_tr);
        previous_fm_matrix_in_GT_op_e_tl = get(fm_matrix_in_GT_op_e_tl);
        previous_fm_matrix_in_GT_op_f_bl = get(fm_matrix_in_GT_op_f_bl);
        previous_fm_matrix_in_GT_op_f_br = get(fm_matrix_in_GT_op_f_br);
        previous_fm_matrix_in_GT_op_f_tr = get(fm_matrix_in_GT_op_f_tr);
        previous_fm_matrix_in_GT_op_f_tl = get(fm_matrix_in_GT_op_f_tl);
        previous_fm_matrix_in_GT_op_x_bl = get(fm_matrix_in_GT_op_x_bl);
        previous_fm_matrix_in_GT_op_x_br = get(fm_matrix_in_GT_op_x_br);
        previous_fm_matrix_in_GT_op_x_tr = get(fm_matrix_in_GT_op_x_tr);
        previous_fm_matrix_in_GT_op_x_tl = get(fm_matrix_in_GT_op_x_tl);
        previous_fm_matrix_in_GT_op_z_bl = get(fm_matrix_in_GT_op_z_bl);
        previous_fm_matrix_in_GT_op_z_br = get(fm_matrix_in_GT_op_z_br);
        previous_fm_matrix_in_GT_op_z_tr = get(fm_matrix_in_GT_op_z_tr);
        previous_fm_matrix_in_GT_op_z_tl = get(fm_matrix_in_GT_op_z_tl);
        previous_fm_matrix_in_GT_out_bl = get(fm_matrix_in_GT_out_bl);
        previous_fm_matrix_in_GT_out_br = get(fm_matrix_in_GT_out_br);
        previous_fm_matrix_in_GT_out_tr = get(fm_matrix_in_GT_out_tr);
        previous_fm_matrix_in_GT_out_tl = get(fm_matrix_in_GT_out_tl);
        previous_fm_matrix_in_GT_pan_bl = get(fm_matrix_in_GT_pan_bl);
        previous_fm_matrix_in_GT_pan_br = get(fm_matrix_in_GT_pan_br);
        previous_fm_matrix_in_GT_pan_tr = get(fm_matrix_in_GT_pan_tr);
        previous_fm_matrix_in_GT_pan_tl = get(fm_matrix_in_GT_pan_tl);
        previous_fm_matrix_in_GT_in_bl = get(fm_matrix_in_GT_in_bl);
        previous_fm_matrix_in_GT_in_br = get(fm_matrix_in_GT_in_br);
        previous_fm_matrix_in_GT_in_tr = get(fm_matrix_in_GT_in_tr);
        previous_fm_matrix_in_GT_in_tl = get(fm_matrix_in_GT_in_tl);
        previous_filter_bypass = get(filter_bypass);
        previous_saturator_bypass = get(saturator_bypass);
        previous_pitch_envelope_amount = get(pitch_envelope_amount);
        previous_stretch_octaves = get(stretch_octaves);
        previous_pitchbend_mode = get(pitchbend_mode);
        previous_input_on_off_bl = get(input_on_off_bl);
        previous_input_on_off_br = get(input_on_off_br);
        previous_input_on_off_tr = get(input_on_off_tr);
        previous_input_on_off_tl = get(input_on_off_tl);
        previous_op_a_envelope_tempo_sync = get(op_a_envelope_tempo_sync);
        previous_op_b_envelope_tempo_sync = get(op_b_envelope_tempo_sync);
        previous_op_c_envelope_tempo_sync = get(op_c_envelope_tempo_sync);
        previous_op_d_envelope_tempo_sync = get(op_d_envelope_tempo_sync);
        previous_op_e_envelope_tempo_sync = get(op_e_envelope_tempo_sync);
        previous_op_f_envelope_tempo_sync = get(op_f_envelope_tempo_sync);
        previous_op_x_envelope_tempo_sync = get(op_x_envelope_tempo_sync);
        previous_op_z_envelope_tempo_sync = get(op_z_envelope_tempo_sync);
        previous_pitch_envelope_tempo_sync = get(pitch_envelope_tempo_sync);
        previous_freerun_or_keysync_of_op_a = get(freerun_or_keysync_of_op_a);
        previous_freerun_or_keysync_of_op_b = get(freerun_or_keysync_of_op_b);
        previous_freerun_or_keysync_of_op_c = get(freerun_or_keysync_of_op_c);
        previous_freerun_or_keysync_of_op_d = get(freerun_or_keysync_of_op_d);
        previous_freerun_or_keysync_of_op_e = get(freerun_or_keysync_of_op_e);
        previous_freerun_or_keysync_of_op_f = get(freerun_or_keysync_of_op_f);
        previous_freerun_or_keysync_of_op_x = get(freerun_or_keysync_of_op_x);
        previous_freerun_or_keysync_of_op_z = get(freerun_or_keysync_of_op_z);
        previous_freerun_or_keysync_of_pitch = get(freerun_or_keysync_of_pitch);
        previous_op_a_velocity_sensivity = get(op_a_velocity_sensivity);
        previous_op_b_velocity_sensivity = get(op_b_velocity_sensivity);
        previous_op_c_velocity_sensivity = get(op_c_velocity_sensivity);
        previous_op_d_velocity_sensivity = get(op_d_velocity_sensivity);
        previous_op_e_velocity_sensivity = get(op_e_velocity_sensivity);
        previous_op_f_velocity_sensivity = get(op_f_velocity_sensivity);
        previous_op_x_velocity_sensivity = get(op_x_velocity_sensivity);
        previous_op_z_velocity_sensivity = get(op_z_velocity_sensivity);
        previous_pitch_velocity_sensivity = get(pitch_velocity_sensivity);
        previous_op_a_envelope_keyboard_scaling = get(op_a_envelope_keyboard_scaling);
        previous_op_b_envelope_keyboard_scaling = get(op_b_envelope_keyboard_scaling);
        previous_op_c_envelope_keyboard_scaling = get(op_c_envelope_keyboard_scaling);
        previous_op_d_envelope_keyboard_scaling = get(op_d_envelope_keyboard_scaling);
        previous_op_e_envelope_keyboard_scaling = get(op_e_envelope_keyboard_scaling);
        previous_op_f_envelope_keyboard_scaling = get(op_f_envelope_keyboard_scaling);
        previous_op_x_envelope_keyboard_scaling = get(op_x_envelope_keyboard_scaling);
        previous_op_z_envelope_keyboard_scaling = get(op_z_envelope_keyboard_scaling);
        previous_pitch_envelope_keyboard_scaling = get(pitch_envelope_keyboard_scaling);
        previous_op_a_envelope_velocity_scaling = get(op_a_envelope_velocity_scaling);
        previous_op_b_envelope_velocity_scaling = get(op_b_envelope_velocity_scaling);
        previous_op_c_envelope_velocity_scaling = get(op_c_envelope_velocity_scaling);
        previous_op_d_envelope_velocity_scaling = get(op_d_envelope_velocity_scaling);
        previous_op_e_envelope_velocity_scaling = get(op_e_envelope_velocity_scaling);
        previous_op_f_envelope_velocity_scaling = get(op_f_envelope_velocity_scaling);
        previous_op_x_envelope_velocity_scaling = get(op_x_envelope_velocity_scaling);
        previous_op_z_envelope_velocity_scaling = get(op_z_envelope_velocity_scaling);
        previous_pitch_envelope_velocity_scaling = get(pitch_envelope_velocity_scaling);
        previous_op_a_wave_invert = get(op_a_wave_invert);
        previous_op_b_wave_invert = get(op_b_wave_invert);
        previous_op_c_wave_invert = get(op_c_wave_invert);
        previous_op_d_wave_invert = get(op_d_wave_invert);
        previous_op_e_wave_invert = get(op_e_wave_invert);
        previous_op_f_wave_invert = get(op_f_wave_invert);
        previous_op_x_wave_invert = get(op_x_wave_invert);
        previous_op_z_wave_invert = get(op_z_wave_invert);
        previous_pitch_wave_invert = get(pitch_wave_invert);
        previous_op_a_pitch_envelope = get(op_a_pitch_envelope);
        previous_op_b_pitch_envelope = get(op_b_pitch_envelope);
        previous_op_c_pitch_envelope = get(op_c_pitch_envelope);
        previous_op_d_pitch_envelope = get(op_d_pitch_envelope);
        previous_op_e_pitch_envelope = get(op_e_pitch_envelope);
        previous_op_f_pitch_envelope = get(op_f_pitch_envelope);
        previous_op_x_pitch_envelope = get(op_x_pitch_envelope);
        previous_op_z_pitch_envelope = get(op_z_pitch_envelope);
        previous_pitch_pitch_envelope = get(pitch_pitch_envelope);
        previous_op_a_envelope_mode_loop = get(op_a_envelope_mode_loop);
        previous_op_b_envelope_mode_loop = get(op_b_envelope_mode_loop);
        previous_op_c_envelope_mode_loop = get(op_c_envelope_mode_loop);
        previous_op_d_envelope_mode_loop = get(op_d_envelope_mode_loop);
        previous_op_e_envelope_mode_loop = get(op_e_envelope_mode_loop);
        previous_op_f_envelope_mode_loop = get(op_f_envelope_mode_loop);
        previous_op_x_envelope_mode_loop = get(op_x_envelope_mode_loop);
        previous_op_z_envelope_mode_loop = get(op_z_envelope_mode_loop);
        previous_pitch_envelope_mode_loop = get(pitch_envelope_mode_loop);
        previous_op_a_envelope_mode_release = get(op_a_envelope_mode_release);
        previous_op_b_envelope_mode_release = get(op_b_envelope_mode_release);
        previous_op_c_envelope_mode_release = get(op_c_envelope_mode_release);
        previous_op_d_envelope_mode_release = get(op_d_envelope_mode_release);
        previous_op_e_envelope_mode_release = get(op_e_envelope_mode_release);
        previous_op_f_envelope_mode_release = get(op_f_envelope_mode_release);
        previous_op_x_envelope_mode_release = get(op_x_envelope_mode_release);
        previous_op_z_envelope_mode_release = get(op_z_envelope_mode_release);
        previous_pitch_envelope_mode_release = get(pitch_envelope_mode_release);
        previous_op_a_on_off_bl = get(op_a_on_off_bl);
        previous_op_a_on_off_br = get(op_a_on_off_br);
        previous_op_a_on_off_tr = get(op_a_on_off_tr);
        previous_op_a_on_off_tl = get(op_a_on_off_tl);
        previous_op_b_on_off_bl = get(op_b_on_off_bl);
        previous_op_b_on_off_br = get(op_b_on_off_br);
        previous_op_b_on_off_tr = get(op_b_on_off_tr);
        previous_op_b_on_off_tl = get(op_b_on_off_tl);
        previous_op_c_on_off_bl = get(op_c_on_off_bl);
        previous_op_c_on_off_br = get(op_c_on_off_br);
        previous_op_c_on_off_tr = get(op_c_on_off_tr);
        previous_op_c_on_off_tl = get(op_c_on_off_tl);
        previous_op_d_on_off_bl = get(op_d_on_off_bl);
        previous_op_d_on_off_br = get(op_d_on_off_br);
        previous_op_d_on_off_tr = get(op_d_on_off_tr);
        previous_op_d_on_off_tl = get(op_d_on_off_tl);
        previous_op_e_on_off_bl = get(op_e_on_off_bl);
        previous_op_e_on_off_br = get(op_e_on_off_br);
        previous_op_e_on_off_tr = get(op_e_on_off_tr);
        previous_op_e_on_off_tl = get(op_e_on_off_tl);
        previous_op_f_on_off_bl = get(op_f_on_off_bl);
        previous_op_f_on_off_br = get(op_f_on_off_br);
        previous_op_f_on_off_tr = get(op_f_on_off_tr);
        previous_op_f_on_off_tl = get(op_f_on_off_tl);
        previous_op_x_on_off_bl = get(op_x_on_off_bl);
        previous_op_x_on_off_br = get(op_x_on_off_br);
        previous_op_x_on_off_tr = get(op_x_on_off_tr);
        previous_op_x_on_off_tl = get(op_x_on_off_tl);
        previous_op_z_on_off_bl = get(op_z_on_off_bl);
        previous_op_z_on_off_br = get(op_z_on_off_br);
        previous_op_z_on_off_tr = get(op_z_on_off_tr);
        previous_op_z_on_off_tl = get(op_z_on_off_tl);
        previous_pitch_on_off_bl = get(pitch_on_off_bl);
        previous_pitch_on_off_br = get(pitch_on_off_br);
        previous_pitch_on_off_tr = get(pitch_on_off_tr);
        previous_pitch_on_off_tl = get(pitch_on_off_tl);
        previous_op_a_output_level_bl = get(op_a_output_level_bl);
        previous_op_a_output_level_br = get(op_a_output_level_br);
        previous_op_a_output_level_tr = get(op_a_output_level_tr);
        previous_op_a_output_level_tl = get(op_a_output_level_tl);
        previous_op_b_output_level_bl = get(op_b_output_level_bl);
        previous_op_b_output_level_br = get(op_b_output_level_br);
        previous_op_b_output_level_tr = get(op_b_output_level_tr);
        previous_op_b_output_level_tl = get(op_b_output_level_tl);
        previous_op_c_output_level_bl = get(op_c_output_level_bl);
        previous_op_c_output_level_br = get(op_c_output_level_br);
        previous_op_c_output_level_tr = get(op_c_output_level_tr);
        previous_op_c_output_level_tl = get(op_c_output_level_tl);
        previous_op_d_output_level_bl = get(op_d_output_level_bl);
        previous_op_d_output_level_br = get(op_d_output_level_br);
        previous_op_d_output_level_tr = get(op_d_output_level_tr);
        previous_op_d_output_level_tl = get(op_d_output_level_tl);
        previous_op_e_output_level_bl = get(op_e_output_level_bl);
        previous_op_e_output_level_br = get(op_e_output_level_br);
        previous_op_e_output_level_tr = get(op_e_output_level_tr);
        previous_op_e_output_level_tl = get(op_e_output_level_tl);
        previous_op_f_output_level_bl = get(op_f_output_level_bl);
        previous_op_f_output_level_br = get(op_f_output_level_br);
        previous_op_f_output_level_tr = get(op_f_output_level_tr);
        previous_op_f_output_level_tl = get(op_f_output_level_tl);
        previous_op_x_output_level_bl = get(op_x_output_level_bl);
        previous_op_x_output_level_br = get(op_x_output_level_br);
        previous_op_x_output_level_tr = get(op_x_output_level_tr);
        previous_op_x_output_level_tl = get(op_x_output_level_tl);
        previous_op_z_output_level_bl = get(op_z_output_level_bl);
        previous_op_z_output_level_br = get(op_z_output_level_br);
        previous_op_z_output_level_tr = get(op_z_output_level_tr);
        previous_op_z_output_level_tl = get(op_z_output_level_tl);
        previous_pitch_output_level_bl = get(pitch_output_level_bl);
        previous_pitch_output_level_br = get(pitch_output_level_br);
        previous_pitch_output_level_tr = get(pitch_output_level_tr);
        previous_pitch_output_level_tl = get(pitch_output_level_tl);
        previous_op_a_waveformbl = get(op_a_waveformbl);
        previous_op_a_waveformbr = get(op_a_waveformbr);
        previous_op_a_waveformtr = get(op_a_waveformtr);
        previous_op_a_waveformtl = get(op_a_waveformtl);
        previous_op_b_waveformbl = get(op_b_waveformbl);
        previous_op_b_waveformbr = get(op_b_waveformbr);
        previous_op_b_waveformtr = get(op_b_waveformtr);
        previous_op_b_waveformtl = get(op_b_waveformtl);
        previous_op_c_waveformbl = get(op_c_waveformbl);
        previous_op_c_waveformbr = get(op_c_waveformbr);
        previous_op_c_waveformtr = get(op_c_waveformtr);
        previous_op_c_waveformtl = get(op_c_waveformtl);
        previous_op_d_waveformbl = get(op_d_waveformbl);
        previous_op_d_waveformbr = get(op_d_waveformbr);
        previous_op_d_waveformtr = get(op_d_waveformtr);
        previous_op_d_waveformtl = get(op_d_waveformtl);
        previous_op_e_waveformbl = get(op_e_waveformbl);
        previous_op_e_waveformbr = get(op_e_waveformbr);
        previous_op_e_waveformtr = get(op_e_waveformtr);
        previous_op_e_waveformtl = get(op_e_waveformtl);
        previous_op_f_waveformbl = get(op_f_waveformbl);
        previous_op_f_waveformbr = get(op_f_waveformbr);
        previous_op_f_waveformtr = get(op_f_waveformtr);
        previous_op_f_waveformtl = get(op_f_waveformtl);
        previous_op_x_waveformbl = get(op_x_waveformbl);
        previous_op_x_waveformbr = get(op_x_waveformbr);
        previous_op_x_waveformtr = get(op_x_waveformtr);
        previous_op_x_waveformtl = get(op_x_waveformtl);
        previous_op_z_waveformbl = get(op_z_waveformbl);
        previous_op_z_waveformbr = get(op_z_waveformbr);
        previous_op_z_waveformtr = get(op_z_waveformtr);
        previous_op_z_waveformtl = get(op_z_waveformtl);
        previous_pitch_waveformbl = get(pitch_waveformbl);
        previous_pitch_waveformbr = get(pitch_waveformbr);
        previous_pitch_waveformtr = get(pitch_waveformtr);
        previous_pitch_waveformtl = get(pitch_waveformtl);
        previous_op_a_frequency_ratiobl = get(op_a_frequency_ratiobl);
        previous_op_a_frequency_ratiobr = get(op_a_frequency_ratiobr);
        previous_op_a_frequency_ratiotr = get(op_a_frequency_ratiotr);
        previous_op_a_frequency_ratiotl = get(op_a_frequency_ratiotl);
        previous_op_b_frequency_ratiobl = get(op_b_frequency_ratiobl);
        previous_op_b_frequency_ratiobr = get(op_b_frequency_ratiobr);
        previous_op_b_frequency_ratiotr = get(op_b_frequency_ratiotr);
        previous_op_b_frequency_ratiotl = get(op_b_frequency_ratiotl);
        previous_op_c_frequency_ratiobl = get(op_c_frequency_ratiobl);
        previous_op_c_frequency_ratiobr = get(op_c_frequency_ratiobr);
        previous_op_c_frequency_ratiotr = get(op_c_frequency_ratiotr);
        previous_op_c_frequency_ratiotl = get(op_c_frequency_ratiotl);
        previous_op_d_frequency_ratiobl = get(op_d_frequency_ratiobl);
        previous_op_d_frequency_ratiobr = get(op_d_frequency_ratiobr);
        previous_op_d_frequency_ratiotr = get(op_d_frequency_ratiotr);
        previous_op_d_frequency_ratiotl = get(op_d_frequency_ratiotl);
        previous_op_e_frequency_ratiobl = get(op_e_frequency_ratiobl);
        previous_op_e_frequency_ratiobr = get(op_e_frequency_ratiobr);
        previous_op_e_frequency_ratiotr = get(op_e_frequency_ratiotr);
        previous_op_e_frequency_ratiotl = get(op_e_frequency_ratiotl);
        previous_op_f_frequency_ratiobl = get(op_f_frequency_ratiobl);
        previous_op_f_frequency_ratiobr = get(op_f_frequency_ratiobr);
        previous_op_f_frequency_ratiotr = get(op_f_frequency_ratiotr);
        previous_op_f_frequency_ratiotl = get(op_f_frequency_ratiotl);
        previous_op_x_frequency_ratiobl = get(op_x_frequency_ratiobl);
        previous_op_x_frequency_ratiobr = get(op_x_frequency_ratiobr);
        previous_op_x_frequency_ratiotr = get(op_x_frequency_ratiotr);
        previous_op_x_frequency_ratiotl = get(op_x_frequency_ratiotl);
        previous_op_z_frequency_ratiobl = get(op_z_frequency_ratiobl);
        previous_op_z_frequency_ratiobr = get(op_z_frequency_ratiobr);
        previous_op_z_frequency_ratiotr = get(op_z_frequency_ratiotr);
        previous_op_z_frequency_ratiotl = get(op_z_frequency_ratiotl);
        previous_pitch_frequency_ratiobl = get(pitch_frequency_ratiobl);
        previous_pitch_frequency_ratiobr = get(pitch_frequency_ratiobr);
        previous_pitch_frequency_ratiotr = get(pitch_frequency_ratiotr);
        previous_pitch_frequency_ratiotl = get(pitch_frequency_ratiotl);
        previous_op_a_frequency_offsetbl = get(op_a_frequency_offsetbl);
        previous_op_a_frequency_offsetbr = get(op_a_frequency_offsetbr);
        previous_op_a_frequency_offsettr = get(op_a_frequency_offsettr);
        previous_op_a_frequency_offsettl = get(op_a_frequency_offsettl);
        previous_op_b_frequency_offsetbl = get(op_b_frequency_offsetbl);
        previous_op_b_frequency_offsetbr = get(op_b_frequency_offsetbr);
        previous_op_b_frequency_offsettr = get(op_b_frequency_offsettr);
        previous_op_b_frequency_offsettl = get(op_b_frequency_offsettl);
        previous_op_c_frequency_offsetbl = get(op_c_frequency_offsetbl);
        previous_op_c_frequency_offsetbr = get(op_c_frequency_offsetbr);
        previous_op_c_frequency_offsettr = get(op_c_frequency_offsettr);
        previous_op_c_frequency_offsettl = get(op_c_frequency_offsettl);
        previous_op_d_frequency_offsetbl = get(op_d_frequency_offsetbl);
        previous_op_d_frequency_offsetbr = get(op_d_frequency_offsetbr);
        previous_op_d_frequency_offsettr = get(op_d_frequency_offsettr);
        previous_op_d_frequency_offsettl = get(op_d_frequency_offsettl);
        previous_op_e_frequency_offsetbl = get(op_e_frequency_offsetbl);
        previous_op_e_frequency_offsetbr = get(op_e_frequency_offsetbr);
        previous_op_e_frequency_offsettr = get(op_e_frequency_offsettr);
        previous_op_e_frequency_offsettl = get(op_e_frequency_offsettl);
        previous_op_f_frequency_offsetbl = get(op_f_frequency_offsetbl);
        previous_op_f_frequency_offsetbr = get(op_f_frequency_offsetbr);
        previous_op_f_frequency_offsettr = get(op_f_frequency_offsettr);
        previous_op_f_frequency_offsettl = get(op_f_frequency_offsettl);
        previous_op_x_frequency_offsetbl = get(op_x_frequency_offsetbl);
        previous_op_x_frequency_offsetbr = get(op_x_frequency_offsetbr);
        previous_op_x_frequency_offsettr = get(op_x_frequency_offsettr);
        previous_op_x_frequency_offsettl = get(op_x_frequency_offsettl);
        previous_op_z_frequency_offsetbl = get(op_z_frequency_offsetbl);
        previous_op_z_frequency_offsetbr = get(op_z_frequency_offsetbr);
        previous_op_z_frequency_offsettr = get(op_z_frequency_offsettr);
        previous_op_z_frequency_offsettl = get(op_z_frequency_offsettl);
        previous_pitch_frequency_offsetbl = get(pitch_frequency_offsetbl);
        previous_pitch_frequency_offsetbr = get(pitch_frequency_offsetbr);
        previous_pitch_frequency_offsettr = get(pitch_frequency_offsettr);
        previous_pitch_frequency_offsettl = get(pitch_frequency_offsettl);
        previous_filt_routing_serial_parallel_bl = get(filt_routing_serial_parallel_bl);
        previous_filt_routing_serial_parallel_br = get(filt_routing_serial_parallel_br);
        previous_filt_routing_serial_parallel_tr = get(filt_routing_serial_parallel_tr);
        previous_filt_routing_serial_parallel_tl = get(filt_routing_serial_parallel_tl);
        previous_filter_routing_mix_bl = get(filter_routing_mix_bl);
        previous_filter_routing_mix_br = get(filter_routing_mix_br);
        previous_filter_routing_mix_tr = get(filter_routing_mix_tr);
        previous_filter_routing_mix_tl = get(filter_routing_mix_tl);
        previous_filter_1_mode_bl = get(filter_1_mode_bl);
        previous_filter_1_mode_br = get(filter_1_mode_br);
        previous_filter_1_mode_tr = get(filter_1_mode_tr);
        previous_filter_1_mode_tl = get(filter_1_mode_tl);
        previous_filter_2_mode_bl = get(filter_2_mode_bl);
        previous_filter_2_mode_br = get(filter_2_mode_br);
        previous_filter_2_mode_tr = get(filter_2_mode_tr);
        previous_filter_2_mode_tl = get(filter_2_mode_tl);
        previous_filter_cutoff_bl = get(filter_cutoff_bl);
        previous_filter_cutoff_br = get(filter_cutoff_br);
        previous_filter_cutoff_tr = get(filter_cutoff_tr);
        previous_filter_cutoff_tl = get(filter_cutoff_tl);
        previous_filter_cutoff_spread_bl = get(filter_cutoff_spread_bl);
        previous_filter_cutoff_spread_br = get(filter_cutoff_spread_br);
        previous_filter_cutoff_spread_tr = get(filter_cutoff_spread_tr);
        previous_filter_cutoff_spread_tl = get(filter_cutoff_spread_tl);
        previous_filter_envelope_amount_bl = get(filter_envelope_amount_bl);
        previous_filter_envelope_amount_br = get(filter_envelope_amount_br);
        previous_filter_envelope_amount_tr = get(filter_envelope_amount_tr);
        previous_filter_envelope_amount_tl = get(filter_envelope_amount_tl);
        previous_filter_1_resonance_bl = get(filter_1_resonance_bl);
        previous_filter_1_resonance_br = get(filter_1_resonance_br);
        previous_filter_1_resonance_tr = get(filter_1_resonance_tr);
        previous_filter_1_resonance_tl = get(filter_1_resonance_tl);
        previous_filter_2_resonance_bl = get(filter_2_resonance_bl);
        previous_filter_2_resonance_br = get(filter_2_resonance_br);
        previous_filter_2_resonance_tr = get(filter_2_resonance_tr);
        previous_filter_2_resonance_tl = get(filter_2_resonance_tl);
        previous_noise_cutoff_bl = get(noise_cutoff_bl);
        previous_noise_cutoff_br = get(noise_cutoff_br);
        previous_noise_cutoff_tr = get(noise_cutoff_tr);
        previous_noise_cutoff_tl = get(noise_cutoff_tl);
        previous_noise_resonance_bl = get(noise_resonance_bl);
        previous_noise_resonance_br = get(noise_resonance_br);
        previous_noise_resonance_tr = get(noise_resonance_tr);
        previous_noise_resonance_tl = get(noise_resonance_tl);
        previous_noise_amplitude_bl = get(noise_amplitude_bl);
        previous_noise_amplitude_br = get(noise_amplitude_br);
        previous_noise_amplitude_tr = get(noise_amplitude_tr);
        previous_noise_amplitude_tl = get(noise_amplitude_tl);
        previous_saturator_gain_bl = get(saturator_gain_bl);
        previous_saturator_gain_br = get(saturator_gain_br);
        previous_saturator_gain_tr = get(saturator_gain_tr);
        previous_saturator_gain_tl = get(saturator_gain_tl);
        previous_saturator_level_bl = get(saturator_level_bl);
        previous_saturator_level_br = get(saturator_level_br);
        previous_saturator_level_tr = get(saturator_level_tr);
        previous_saturator_level_tl = get(saturator_level_tl);
        previous_saturator_asymmetry_bl = get(saturator_asymmetry_bl);
        previous_saturator_asymmetry_br = get(saturator_asymmetry_br);
        previous_saturator_asymmetry_tr = get(saturator_asymmetry_tr);
        previous_saturator_asymmetry_tl = get(saturator_asymmetry_tl);
        previous_op_a_modulation_pitchbend_up = get(op_a_modulation_pitchbend_up);
        previous_op_b_modulation_pitchbend_up = get(op_b_modulation_pitchbend_up);
        previous_op_c_modulation_pitchbend_up = get(op_c_modulation_pitchbend_up);
        previous_op_d_modulation_pitchbend_up = get(op_d_modulation_pitchbend_up);
        previous_op_e_modulation_pitchbend_up = get(op_e_modulation_pitchbend_up);
        previous_op_f_modulation_pitchbend_up = get(op_f_modulation_pitchbend_up);
        previous_op_x_modulation_pitchbend_up = get(op_x_modulation_pitchbend_up);
        previous_op_z_modulation_pitchbend_up = get(op_z_modulation_pitchbend_up);
        previous_pitch_modulation_pitchbend_up = get(pitch_modulation_pitchbend_up);
        previous_op_a_modulation_pitchbend_down = get(op_a_modulation_pitchbend_down);
        previous_op_b_modulation_pitchbend_down = get(op_b_modulation_pitchbend_down);
        previous_op_c_modulation_pitchbend_down = get(op_c_modulation_pitchbend_down);
        previous_op_d_modulation_pitchbend_down = get(op_d_modulation_pitchbend_down);
        previous_op_e_modulation_pitchbend_down = get(op_e_modulation_pitchbend_down);
        previous_op_f_modulation_pitchbend_down = get(op_f_modulation_pitchbend_down);
        previous_op_x_modulation_pitchbend_down = get(op_x_modulation_pitchbend_down);
        previous_op_z_modulation_pitchbend_down = get(op_z_modulation_pitchbend_down);
        previous_pitch_modulation_pitchbend_down = get(pitch_modulation_pitchbend_down);
        previous_op_a_modulation_aftertouch = get(op_a_modulation_aftertouch);
        previous_op_b_modulation_aftertouch = get(op_b_modulation_aftertouch);
        previous_op_c_modulation_aftertouch = get(op_c_modulation_aftertouch);
        previous_op_d_modulation_aftertouch = get(op_d_modulation_aftertouch);
        previous_op_e_modulation_aftertouch = get(op_e_modulation_aftertouch);
        previous_op_f_modulation_aftertouch = get(op_f_modulation_aftertouch);
        previous_op_x_modulation_aftertouch = get(op_x_modulation_aftertouch);
        previous_op_z_modulation_aftertouch = get(op_z_modulation_aftertouch);
        previous_pitch_modulation_aftertouch = get(pitch_modulation_aftertouch);
        previous_op_a_modulation_modwheel = get(op_a_modulation_modwheel);
        previous_op_b_modulation_modwheel = get(op_b_modulation_modwheel);
        previous_op_c_modulation_modwheel = get(op_c_modulation_modwheel);
        previous_op_d_modulation_modwheel = get(op_d_modulation_modwheel);
        previous_op_e_modulation_modwheel = get(op_e_modulation_modwheel);
        previous_op_f_modulation_modwheel = get(op_f_modulation_modwheel);
        previous_op_x_modulation_modwheel = get(op_x_modulation_modwheel);
        previous_op_z_modulation_modwheel = get(op_z_modulation_modwheel);
        previous_pitch_modulation_modwheel = get(pitch_modulation_modwheel);
        previous_op_a_modulation_breath_ctlr = get(op_a_modulation_breath_ctlr);
        previous_op_b_modulation_breath_ctlr = get(op_b_modulation_breath_ctlr);
        previous_op_c_modulation_breath_ctlr = get(op_c_modulation_breath_ctlr);
        previous_op_d_modulation_breath_ctlr = get(op_d_modulation_breath_ctlr);
        previous_op_e_modulation_breath_ctlr = get(op_e_modulation_breath_ctlr);
        previous_op_f_modulation_breath_ctlr = get(op_f_modulation_breath_ctlr);
        previous_op_x_modulation_breath_ctlr = get(op_x_modulation_breath_ctlr);
        previous_op_z_modulation_breath_ctlr = get(op_z_modulation_breath_ctlr);
        previous_pitch_modulation_breath_ctlr = get(pitch_modulation_breath_ctlr);
        previous_op_a_modulation_controller_1 = get(op_a_modulation_controller_1);
        previous_op_b_modulation_controller_1 = get(op_b_modulation_controller_1);
        previous_op_c_modulation_controller_1 = get(op_c_modulation_controller_1);
        previous_op_d_modulation_controller_1 = get(op_d_modulation_controller_1);
        previous_op_e_modulation_controller_1 = get(op_e_modulation_controller_1);
        previous_op_f_modulation_controller_1 = get(op_f_modulation_controller_1);
        previous_op_x_modulation_controller_1 = get(op_x_modulation_controller_1);
        previous_op_z_modulation_controller_1 = get(op_z_modulation_controller_1);
        previous_pitch_modulation_controller_1 = get(pitch_modulation_controller_1);
        previous_op_a_modulation_controller_2 = get(op_a_modulation_controller_2);
        previous_op_b_modulation_controller_2 = get(op_b_modulation_controller_2);
        previous_op_c_modulation_controller_2 = get(op_c_modulation_controller_2);
        previous_op_d_modulation_controller_2 = get(op_d_modulation_controller_2);
        previous_op_e_modulation_controller_2 = get(op_e_modulation_controller_2);
        previous_op_f_modulation_controller_2 = get(op_f_modulation_controller_2);
        previous_op_x_modulation_controller_2 = get(op_x_modulation_controller_2);
        previous_op_z_modulation_controller_2 = get(op_z_modulation_controller_2);
        previous_pitch_modulation_controller_2 = get(pitch_modulation_controller_2);
        previous_op_a_modulation_input_envelope = get(op_a_modulation_input_envelope);
        previous_op_b_modulation_input_envelope = get(op_b_modulation_input_envelope);
        previous_op_c_modulation_input_envelope = get(op_c_modulation_input_envelope);
        previous_op_d_modulation_input_envelope = get(op_d_modulation_input_envelope);
        previous_op_e_modulation_input_envelope = get(op_e_modulation_input_envelope);
        previous_op_f_modulation_input_envelope = get(op_f_modulation_input_envelope);
        previous_op_x_modulation_input_envelope = get(op_x_modulation_input_envelope);
        previous_op_z_modulation_input_envelope = get(op_z_modulation_input_envelope);
        previous_pitch_modulation_input_envelope = get(pitch_modulation_input_envelope);
        previous_op_a_modulation_lfo_1 = get(op_a_modulation_lfo_1);
        previous_op_b_modulation_lfo_1 = get(op_b_modulation_lfo_1);
        previous_op_c_modulation_lfo_1 = get(op_c_modulation_lfo_1);
        previous_op_d_modulation_lfo_1 = get(op_d_modulation_lfo_1);
        previous_op_e_modulation_lfo_1 = get(op_e_modulation_lfo_1);
        previous_op_f_modulation_lfo_1 = get(op_f_modulation_lfo_1);
        previous_op_x_modulation_lfo_1 = get(op_x_modulation_lfo_1);
        previous_op_z_modulation_lfo_1 = get(op_z_modulation_lfo_1);
        previous_pitch_modulation_lfo_1 = get(pitch_modulation_lfo_1);
        previous_op_a_modulation_lfo_1_MULTIPLY_atc = get(op_a_modulation_lfo_1_MULTIPLY_atc);
        previous_op_b_modulation_lfo_1_MULTIPLY_atc = get(op_b_modulation_lfo_1_MULTIPLY_atc);
        previous_op_c_modulation_lfo_1_MULTIPLY_atc = get(op_c_modulation_lfo_1_MULTIPLY_atc);
        previous_op_d_modulation_lfo_1_MULTIPLY_atc = get(op_d_modulation_lfo_1_MULTIPLY_atc);
        previous_op_e_modulation_lfo_1_MULTIPLY_atc = get(op_e_modulation_lfo_1_MULTIPLY_atc);
        previous_op_f_modulation_lfo_1_MULTIPLY_atc = get(op_f_modulation_lfo_1_MULTIPLY_atc);
        previous_op_x_modulation_lfo_1_MULTIPLY_atc = get(op_x_modulation_lfo_1_MULTIPLY_atc);
        previous_op_z_modulation_lfo_1_MULTIPLY_atc = get(op_z_modulation_lfo_1_MULTIPLY_atc);
        previous_pitch_modulation_lfo_1_MULTIPLY_atc = get(pitch_modulation_lfo_1_MULTIPLY_atc);
        previous_op_a_modulation_lfo_1_MULTIPLY_mw = get(op_a_modulation_lfo_1_MULTIPLY_mw);
        previous_op_b_modulation_lfo_1_MULTIPLY_mw = get(op_b_modulation_lfo_1_MULTIPLY_mw);
        previous_op_c_modulation_lfo_1_MULTIPLY_mw = get(op_c_modulation_lfo_1_MULTIPLY_mw);
        previous_op_d_modulation_lfo_1_MULTIPLY_mw = get(op_d_modulation_lfo_1_MULTIPLY_mw);
        previous_op_e_modulation_lfo_1_MULTIPLY_mw = get(op_e_modulation_lfo_1_MULTIPLY_mw);
        previous_op_f_modulation_lfo_1_MULTIPLY_mw = get(op_f_modulation_lfo_1_MULTIPLY_mw);
        previous_op_x_modulation_lfo_1_MULTIPLY_mw = get(op_x_modulation_lfo_1_MULTIPLY_mw);
        previous_op_z_modulation_lfo_1_MULTIPLY_mw = get(op_z_modulation_lfo_1_MULTIPLY_mw);
        previous_pitch_modulation_lfo_1_MULTIPLY_mw = get(pitch_modulation_lfo_1_MULTIPLY_mw);
        previous_op_a_modulation_lfo_1_MULTIPLY_bc = get(op_a_modulation_lfo_1_MULTIPLY_bc);
        previous_op_b_modulation_lfo_1_MULTIPLY_bc = get(op_b_modulation_lfo_1_MULTIPLY_bc);
        previous_op_c_modulation_lfo_1_MULTIPLY_bc = get(op_c_modulation_lfo_1_MULTIPLY_bc);
        previous_op_d_modulation_lfo_1_MULTIPLY_bc = get(op_d_modulation_lfo_1_MULTIPLY_bc);
        previous_op_e_modulation_lfo_1_MULTIPLY_bc = get(op_e_modulation_lfo_1_MULTIPLY_bc);
        previous_op_f_modulation_lfo_1_MULTIPLY_bc = get(op_f_modulation_lfo_1_MULTIPLY_bc);
        previous_op_x_modulation_lfo_1_MULTIPLY_bc = get(op_x_modulation_lfo_1_MULTIPLY_bc);
        previous_op_z_modulation_lfo_1_MULTIPLY_bc = get(op_z_modulation_lfo_1_MULTIPLY_bc);
        previous_pitch_modulation_lfo_1_MULTIPLY_bc = get(pitch_modulation_lfo_1_MULTIPLY_bc);
        previous_op_a_modulation_lfo_1_MULTIPLY_ctrl_1 = get(op_a_modulation_lfo_1_MULTIPLY_ctrl_1);
        previous_op_b_modulation_lfo_1_MULTIPLY_ctrl_1 = get(op_b_modulation_lfo_1_MULTIPLY_ctrl_1);
        previous_op_c_modulation_lfo_1_MULTIPLY_ctrl_1 = get(op_c_modulation_lfo_1_MULTIPLY_ctrl_1);
        previous_op_d_modulation_lfo_1_MULTIPLY_ctrl_1 = get(op_d_modulation_lfo_1_MULTIPLY_ctrl_1);
        previous_op_e_modulation_lfo_1_MULTIPLY_ctrl_1 = get(op_e_modulation_lfo_1_MULTIPLY_ctrl_1);
        previous_op_f_modulation_lfo_1_MULTIPLY_ctrl_1 = get(op_f_modulation_lfo_1_MULTIPLY_ctrl_1);
        previous_op_x_modulation_lfo_1_MULTIPLY_ctrl_1 = get(op_x_modulation_lfo_1_MULTIPLY_ctrl_1);
        previous_op_z_modulation_lfo_1_MULTIPLY_ctrl_1 = get(op_z_modulation_lfo_1_MULTIPLY_ctrl_1);
        previous_pitch_modulation_lfo_1_MULTIPLY_ctrl_1 = get(pitch_modulation_lfo_1_MULTIPLY_ctrl_1);
        previous_op_a_modulation_lfo_1_MULTIPLY_ctrl_2 = get(op_a_modulation_lfo_1_MULTIPLY_ctrl_2);
        previous_op_b_modulation_lfo_1_MULTIPLY_ctrl_2 = get(op_b_modulation_lfo_1_MULTIPLY_ctrl_2);
        previous_op_c_modulation_lfo_1_MULTIPLY_ctrl_2 = get(op_c_modulation_lfo_1_MULTIPLY_ctrl_2);
        previous_op_d_modulation_lfo_1_MULTIPLY_ctrl_2 = get(op_d_modulation_lfo_1_MULTIPLY_ctrl_2);
        previous_op_e_modulation_lfo_1_MULTIPLY_ctrl_2 = get(op_e_modulation_lfo_1_MULTIPLY_ctrl_2);
        previous_op_f_modulation_lfo_1_MULTIPLY_ctrl_2 = get(op_f_modulation_lfo_1_MULTIPLY_ctrl_2);
        previous_op_x_modulation_lfo_1_MULTIPLY_ctrl_2 = get(op_x_modulation_lfo_1_MULTIPLY_ctrl_2);
        previous_op_z_modulation_lfo_1_MULTIPLY_ctrl_2 = get(op_z_modulation_lfo_1_MULTIPLY_ctrl_2);
        previous_pitch_modulation_lfo_1_MULTIPLY_ctrl_2 = get(pitch_modulation_lfo_1_MULTIPLY_ctrl_2);
        previous_op_a_modulation_lfo_2 = get(op_a_modulation_lfo_2);
        previous_op_b_modulation_lfo_2 = get(op_b_modulation_lfo_2);
        previous_op_c_modulation_lfo_2 = get(op_c_modulation_lfo_2);
        previous_op_d_modulation_lfo_2 = get(op_d_modulation_lfo_2);
        previous_op_e_modulation_lfo_2 = get(op_e_modulation_lfo_2);
        previous_op_f_modulation_lfo_2 = get(op_f_modulation_lfo_2);
        previous_op_x_modulation_lfo_2 = get(op_x_modulation_lfo_2);
        previous_op_z_modulation_lfo_2 = get(op_z_modulation_lfo_2);
        previous_pitch_modulation_lfo_2 = get(pitch_modulation_lfo_2);
        previous_op_a_modulation_lfo_2_MULTIPLY_atc = get(op_a_modulation_lfo_2_MULTIPLY_atc);
        previous_op_b_modulation_lfo_2_MULTIPLY_atc = get(op_b_modulation_lfo_2_MULTIPLY_atc);
        previous_op_c_modulation_lfo_2_MULTIPLY_atc = get(op_c_modulation_lfo_2_MULTIPLY_atc);
        previous_op_d_modulation_lfo_2_MULTIPLY_atc = get(op_d_modulation_lfo_2_MULTIPLY_atc);
        previous_op_e_modulation_lfo_2_MULTIPLY_atc = get(op_e_modulation_lfo_2_MULTIPLY_atc);
        previous_op_f_modulation_lfo_2_MULTIPLY_atc = get(op_f_modulation_lfo_2_MULTIPLY_atc);
        previous_op_x_modulation_lfo_2_MULTIPLY_atc = get(op_x_modulation_lfo_2_MULTIPLY_atc);
        previous_op_z_modulation_lfo_2_MULTIPLY_atc = get(op_z_modulation_lfo_2_MULTIPLY_atc);
        previous_pitch_modulation_lfo_2_MULTIPLY_atc = get(pitch_modulation_lfo_2_MULTIPLY_atc);
        previous_op_a_modulation_lfo_2_MULTIPLY_mw = get(op_a_modulation_lfo_2_MULTIPLY_mw);
        previous_op_b_modulation_lfo_2_MULTIPLY_mw = get(op_b_modulation_lfo_2_MULTIPLY_mw);
        previous_op_c_modulation_lfo_2_MULTIPLY_mw = get(op_c_modulation_lfo_2_MULTIPLY_mw);
        previous_op_d_modulation_lfo_2_MULTIPLY_mw = get(op_d_modulation_lfo_2_MULTIPLY_mw);
        previous_op_e_modulation_lfo_2_MULTIPLY_mw = get(op_e_modulation_lfo_2_MULTIPLY_mw);
        previous_op_f_modulation_lfo_2_MULTIPLY_mw = get(op_f_modulation_lfo_2_MULTIPLY_mw);
        previous_op_x_modulation_lfo_2_MULTIPLY_mw = get(op_x_modulation_lfo_2_MULTIPLY_mw);
        previous_op_z_modulation_lfo_2_MULTIPLY_mw = get(op_z_modulation_lfo_2_MULTIPLY_mw);
        previous_pitch_modulation_lfo_2_MULTIPLY_mw = get(pitch_modulation_lfo_2_MULTIPLY_mw);
        previous_op_a_modulation_lfo_2_MULTIPLY_bc = get(op_a_modulation_lfo_2_MULTIPLY_bc);
        previous_op_b_modulation_lfo_2_MULTIPLY_bc = get(op_b_modulation_lfo_2_MULTIPLY_bc);
        previous_op_c_modulation_lfo_2_MULTIPLY_bc = get(op_c_modulation_lfo_2_MULTIPLY_bc);
        previous_op_d_modulation_lfo_2_MULTIPLY_bc = get(op_d_modulation_lfo_2_MULTIPLY_bc);
        previous_op_e_modulation_lfo_2_MULTIPLY_bc = get(op_e_modulation_lfo_2_MULTIPLY_bc);
        previous_op_f_modulation_lfo_2_MULTIPLY_bc = get(op_f_modulation_lfo_2_MULTIPLY_bc);
        previous_op_x_modulation_lfo_2_MULTIPLY_bc = get(op_x_modulation_lfo_2_MULTIPLY_bc);
        previous_op_z_modulation_lfo_2_MULTIPLY_bc = get(op_z_modulation_lfo_2_MULTIPLY_bc);
        previous_pitch_modulation_lfo_2_MULTIPLY_bc = get(pitch_modulation_lfo_2_MULTIPLY_bc);
        previous_op_a_modulation_lfo_2_MULTIPLY_ctrl_1 = get(op_a_modulation_lfo_2_MULTIPLY_ctrl_1);
        previous_op_b_modulation_lfo_2_MULTIPLY_ctrl_1 = get(op_b_modulation_lfo_2_MULTIPLY_ctrl_1);
        previous_op_c_modulation_lfo_2_MULTIPLY_ctrl_1 = get(op_c_modulation_lfo_2_MULTIPLY_ctrl_1);
        previous_op_d_modulation_lfo_2_MULTIPLY_ctrl_1 = get(op_d_modulation_lfo_2_MULTIPLY_ctrl_1);
        previous_op_e_modulation_lfo_2_MULTIPLY_ctrl_1 = get(op_e_modulation_lfo_2_MULTIPLY_ctrl_1);
        previous_op_f_modulation_lfo_2_MULTIPLY_ctrl_1 = get(op_f_modulation_lfo_2_MULTIPLY_ctrl_1);
        previous_op_x_modulation_lfo_2_MULTIPLY_ctrl_1 = get(op_x_modulation_lfo_2_MULTIPLY_ctrl_1);
        previous_op_z_modulation_lfo_2_MULTIPLY_ctrl_1 = get(op_z_modulation_lfo_2_MULTIPLY_ctrl_1);
        previous_pitch_modulation_lfo_2_MULTIPLY_ctrl_1 = get(pitch_modulation_lfo_2_MULTIPLY_ctrl_1);
        previous_op_a_modulation_lfo_2_MULTIPLY_ctrl_2 = get(op_a_modulation_lfo_2_MULTIPLY_ctrl_2);
        previous_op_b_modulation_lfo_2_MULTIPLY_ctrl_2 = get(op_b_modulation_lfo_2_MULTIPLY_ctrl_2);
        previous_op_c_modulation_lfo_2_MULTIPLY_ctrl_2 = get(op_c_modulation_lfo_2_MULTIPLY_ctrl_2);
        previous_op_d_modulation_lfo_2_MULTIPLY_ctrl_2 = get(op_d_modulation_lfo_2_MULTIPLY_ctrl_2);
        previous_op_e_modulation_lfo_2_MULTIPLY_ctrl_2 = get(op_e_modulation_lfo_2_MULTIPLY_ctrl_2);
        previous_op_f_modulation_lfo_2_MULTIPLY_ctrl_2 = get(op_f_modulation_lfo_2_MULTIPLY_ctrl_2);
        previous_op_x_modulation_lfo_2_MULTIPLY_ctrl_2 = get(op_x_modulation_lfo_2_MULTIPLY_ctrl_2);
        previous_op_z_modulation_lfo_2_MULTIPLY_ctrl_2 = get(op_z_modulation_lfo_2_MULTIPLY_ctrl_2);
        previous_pitch_modulation_lfo_2_MULTIPLY_ctrl_2 = get(pitch_modulation_lfo_2_MULTIPLY_ctrl_2);
        previous_lfo_1_invert = get(lfo_1_invert);
        previous_lfo_2_invert = get(lfo_2_invert);
        previous_lfo_1_on_off = get(lfo_1_on_off);
        previous_number_of_lfo1_waveform = get(number_of_lfo1_waveform);
        previous_lfo_1_rate = get(lfo_1_rate);
        previous_lfo_1_delay_time = get(lfo_1_delay_time);
        previous_freerun_or_keysync_of_lfo_1 = get(freerun_or_keysync_of_lfo_1);
        previous_midi_tempo_sync_of_lfo_1_rate = get(midi_tempo_sync_of_lfo_1_rate);
        previous_velocity_scaling_of_lfo_1_rate = get(velocity_scaling_of_lfo_1_rate);
    }
};