#pragma once
#include "aumMonitorableAudioUnit.h"

/******************************************************************************/
/* WARNING: THIS CLASS WAS GENERATED BY THE FOLLOWING FUNCTION:               */
/*                                                                            */
/*     aumUnit_Generic::generateClassFileForAudioUnit(string deviceName);     */
/*                                                                            */
/* IF YOU EDIT THIS FILE, YOU RISK HAVING YOUR CHANGES OVERWRITTEN THE NEXT   */
/* TIME THE FILE IS RE-WRITTEN BY THIS FUNCTION. TO EDIT THIS FILE, PLEASE    */
/* COPY IT TO ANY OTHER FOLDER, RENAME THE CLASS, AND THEN MAKE EDITS.        */
/******************************************************************************/

class aumUnit_Massive : public aumMonitorableAudioUnit
{
public:
    //MACRO 1
    //min: 0, max: 1, default: 0
    const static int macro_1 = 0;

    //MACRO 2
    //min: 0, max: 1, default: 0
    const static int macro_2 = 1;

    //MACRO 3
    //min: 0, max: 1, default: 0
    const static int macro_3 = 2;

    //MACRO 4
    //min: 0, max: 1, default: 0
    const static int macro_4 = 3;

    //MACRO 5
    //min: 0, max: 1, default: 0
    const static int macro_5 = 4;

    //MACRO 6
    //min: 0, max: 1, default: 0
    const static int macro_6 = 5;

    //MACRO 7
    //min: 0, max: 1, default: 0
    const static int macro_7 = 6;

    //MACRO 8
    //min: 0, max: 1, default: 0
    const static int macro_8 = 7;

    //OSC1-PITCH
    //min: 0, max: 1, default: 0.5
    const static int osc1_pitch = 8;

    //OSC1-POSITION
    //min: 0, max: 1, default: 0.5
    const static int osc1_position = 9;

    //OSC1-PARAM2
    //min: 0, max: 1, default: 1
    const static int osc1_param2 = 10;

    //OSC1-AMP
    //min: 0, max: 1, default: 1
    const static int osc1_amp = 11;

    //OSC1-FLT.ROUTING
    //min: 0, max: 1, default: 0.5
    const static int osc1_flt_routing = 12;

    //OSC2-PITCH
    //min: 0, max: 1, default: 0.5
    const static int osc2_pitch = 13;

    //OSC2-POSITION
    //min: 0, max: 1, default: 0
    const static int osc2_position = 14;

    //OSC2-PARAM2
    //min: 0, max: 1, default: 1
    const static int osc2_param2 = 15;

    //OSC2-AMP
    //min: 0, max: 1, default: 0
    const static int osc2_amp = 16;

    //OSC2-FLT.ROUTING
    //min: 0, max: 1, default: 0.5
    const static int osc2_flt_routing = 17;

    //OSC3-PITCH
    //min: 0, max: 1, default: 0.5
    const static int osc3_pitch = 18;

    //OSC3-POSITION
    //min: 0, max: 1, default: 0
    const static int osc3_position = 19;

    //OSC3-PARAM2
    //min: 0, max: 1, default: 1
    const static int osc3_param2 = 20;

    //OSC3-AMP
    //min: 0, max: 1, default: 0
    const static int osc3_amp = 21;

    //OSC3-FLT.ROUTING
    //min: 0, max: 1, default: 0.5
    const static int osc3_flt_routing = 22;

    //NOISE-COLOR
    //min: 0, max: 1, default: 0
    const static int noise_color = 23;

    //NOISE-AMP
    //min: 0, max: 1, default: 0
    const static int noise_amp = 24;

    //NOISE-FLTR. ROUTING
    //min: 0, max: 1, default: 0.5
    const static int noise_fltr_routing = 25;

    //FEEDBACK-AMP
    //min: 0, max: 1, default: 0
    const static int feedback_amp = 26;

    //FEEDBACK-FLT.ROUTING
    //min: 0, max: 1, default: 0.5
    const static int feedback_flt_routing = 27;

    //MOD.OSC-PITCH
    //min: 0, max: 1, default: 0.5
    const static int mod_osc_pitch = 28;

    //MOD.OSC-RNGMOD
    //min: 0, max: 1, default: 0
    const static int mod_osc_rngmod = 29;

    //MOD.OSC-PHASE
    //min: 0, max: 1, default: 0
    const static int mod_osc_phase = 30;

    //MOD.OSC-POSITION
    //min: 0, max: 1, default: 0
    const static int mod_osc_position = 31;

    //MOD.OSC-FLTR.FM
    //min: 0, max: 1, default: 0
    const static int mod_osc_fltr_fm = 32;

    //FILTER1-CUT/PRM.1
    //min: 0, max: 1, default: 0
    const static int filter1_cut_prm_1 = 33;

    //FILTER1-BW/PRM.2
    //min: 0, max: 1, default: 0
    const static int filter1_bw_prm_2 = 34;

    //FILTER1-RES/PRM.3
    //min: 0, max: 1, default: 0
    const static int filter1_res_prm_3 = 35;

    //FILTER2-CUT/PRM.1
    //min: 0, max: 1, default: 0
    const static int filter2_cut_prm_1 = 36;

    //FILTER2-BW/PRM.2
    //min: 0, max: 1, default: 0
    const static int filter2_bw_prm_2 = 37;

    //FILTER2-RES/PRM.3
    //min: 0, max: 1, default: 0
    const static int filter2_res_prm_3 = 38;

    //SERIELL-PARALLEL
    //min: 0, max: 1, default: 0
    const static int seriell_parallel = 39;

    //INSERT1-DW/PRM.1
    //min: 0, max: 1, default: 0
    const static int insert1_dw_prm_1 = 40;

    //INSERT1-PRM.2
    //min: 0, max: 1, default: 0
    const static int insert1_prm_2 = 41;

    //INSERT2-DW/PRM.1
    //min: 0, max: 1, default: 0
    const static int insert2_dw_prm_1 = 42;

    //INSERT2-PRM.2
    //min: 0, max: 1, default: 0
    const static int insert2_prm_2 = 43;

    //MASTER FX1-DRY WET
    //min: 0, max: 1, default: 0
    const static int master_fx1_dry_wet = 44;

    //MASTER FX1-PRM.2
    //min: 0, max: 1, default: 0.5
    const static int master_fx1_prm_2 = 45;

    //MASTER FX1-PRM.3
    //min: 0, max: 1, default: 0.5
    const static int master_fx1_prm_3 = 46;

    //MASTER FX1-PRM.4
    //min: 0, max: 1, default: 0.5
    const static int master_fx1_prm_4 = 47;

    //MASTER FX2-DRY WET
    //min: 0, max: 1, default: 0
    const static int master_fx2_dry_wet = 48;

    //MASTER FX2-PRM.2
    //min: 0, max: 1, default: 0.5
    const static int master_fx2_prm_2 = 49;

    //MASTER FX2-PRM.3
    //min: 0, max: 1, default: 0.5
    const static int master_fx2_prm_3 = 50;

    //MASTER FX2-PRM.4
    //min: 0, max: 1, default: 0.5
    const static int master_fx2_prm_4 = 51;

    //FILTER1-OUT GAIN
    //min: 0, max: 1, default: 0.8
    const static int filter1_out_gain = 52;

    //FILTER2-OUT GAIN
    //min: 0, max: 1, default: 0.8
    const static int filter2_out_gain = 53;

    //FILTER-1/2-CROSSFADE
    //min: 0, max: 1, default: 0.5
    const static int filter_1_2_crossfade = 54;

    //BYPASS-GAIN
    //min: 0, max: 1, default: 0
    const static int bypass_gain = 55;

    //PAN (Fltr-Path)
    //min: 0, max: 1, default: 0.5
    const static int pan_fltr_path_ = 56;

    //MASTER-VOLUME
    //min: 0, max: 1, default: 0.5
    const static int master_volume = 57;

    //MODULATOR5-RATE
    //min: 0, max: 1, default: 0.5
    const static int modulator5_rate = 58;

    //MODULATOR6-RATE
    //min: 0, max: 1, default: 0.5
    const static int modulator6_rate = 59;

    //MODULATOR7-RATE
    //min: 0, max: 1, default: 0.5
    const static int modulator7_rate = 60;

    //MODULATOR8-RATE
    //min: 0, max: 1, default: 0.5
    const static int modulator8_rate = 61;

    //MODULATOR5-AMP
    //min: 0, max: 1, default: 1
    const static int modulator5_amp = 62;

    //MODULATOR6-AMP
    //min: 0, max: 1, default: 1
    const static int modulator6_amp = 63;

    //MODULATOR7-AMP
    //min: 0, max: 1, default: 1
    const static int modulator7_amp = 64;

    //MODULATOR8-AMP
    //min: 0, max: 1, default: 1
    const static int modulator8_amp = 65;

    //MODULATOR5-CROSSF./GLIDE
    //min: 0, max: 1, default: 1
    const static int modulator5_crossf_glide = 66;

    //MODULATOR6-CROSSF./GLIDE
    //min: 0, max: 1, default: 1
    const static int modulator6_crossf_glide = 67;

    //MODULATOR7-CROSSF./GLIDE
    //min: 0, max: 1, default: 1
    const static int modulator7_crossf_glide = 68;

    //MODULATOR8-CROSSF./GLIDE
    //min: 0, max: 1, default: 1
    const static int modulator8_crossf_glide = 69;

    //MODULATOR5-IND.LEV
    //min: 0, max: 1, default: 0
    const static int modulator5_ind_lev = 70;

    //MODULATOR6-IND.LEV
    //min: 0, max: 1, default: 0
    const static int modulator6_ind_lev = 71;

    //MODULATOR7-IND.LEV
    //min: 0, max: 1, default: 0
    const static int modulator7_ind_lev = 72;

    //MODULATOR8-IND.LEV
    //min: 0, max: 1, default: 0
    const static int modulator8_ind_lev = 73;

    //MODULATOR15-SYNC on
    //min: 0, max: 1, default: 0
    const static int modulator15_sync_on = 74;

    //MODULATOR26-SYNC on
    //min: 0, max: 1, default: 0
    const static int modulator26_sync_on = 75;

    //MODULATOR37-SYNC on
    //min: 0, max: 1, default: 0
    const static int modulator37_sync_on = 76;

    //MODULATOR48-SYNC on
    //min: 0, max: 1, default: 0
    const static int modulator48_sync_on = 77;

    //MODULATOR5-RESTART on
    //min: 0, max: 1, default: 1
    const static int modulator5_restart_on = 78;

    //MODULATOR6-RESTART on
    //min: 0, max: 1, default: 1
    const static int modulator6_restart_on = 79;

    //MODULATOR7-RESTART on
    //min: 0, max: 1, default: 1
    const static int modulator7_restart_on = 80;

    //MODULATOR8-RESTART on
    //min: 0, max: 1, default: 1
    const static int modulator8_restart_on = 81;

    //ENVELOPE1-VELOCITY
    //min: 0, max: 1, default: 0
    const static int envelope1_velocity = 82;

    //ENVELOPE2-VELOCITY
    //min: 0, max: 1, default: 0
    const static int envelope2_velocity = 83;

    //ENVELOPE3-VELOCITY
    //min: 0, max: 1, default: 0
    const static int envelope3_velocity = 84;

    //ENVELOPE4-VELOCITY
    //min: 0, max: 1, default: 0
    const static int envelope4_velocity = 85;

    //ENVELOPE1-KEYTRACKING
    //min: 0, max: 1, default: 0
    const static int envelope1_keytracking = 86;

    //ENVELOPE2-KEYTRACKING
    //min: 0, max: 1, default: 0
    const static int envelope2_keytracking = 87;

    //ENVELOPE3-KEYTRACKING
    //min: 0, max: 1, default: 0
    const static int envelope3_keytracking = 88;

    //ENVELOPE4-KEYTRACKING
    //min: 0, max: 1, default: 0
    const static int envelope4_keytracking = 89;

    //ENVELOPE1-DELAY
    //min: 0, max: 1, default: 0
    const static int envelope1_delay = 90;

    //ENVELOPE2-DELAY
    //min: 0, max: 1, default: 0
    const static int envelope2_delay = 91;

    //ENVELOPE3-DELAY
    //min: 0, max: 1, default: 0
    const static int envelope3_delay = 92;

    //ENVELOPE4-DELAY
    //min: 0, max: 1, default: 0
    const static int envelope4_delay = 93;

    //ENVELOPE1-ATT.TME
    //min: 0, max: 1, default: 0.05
    const static int envelope1_att_tme = 94;

    //ENVELOPE2-ATT.TME
    //min: 0, max: 1, default: 0.05
    const static int envelope2_att_tme = 95;

    //ENVELOPE3-ATT.TME
    //min: 0, max: 1, default: 0.05
    const static int envelope3_att_tme = 96;

    //ENVELOPE4-ATT.TME
    //min: 0, max: 1, default: 0.05
    const static int envelope4_att_tme = 97;

    //ENVELOPE1-ATT.LEV
    //min: 0, max: 1, default: 1
    const static int envelope1_att_lev = 98;

    //ENVELOPE2-ATT.LEV
    //min: 0, max: 1, default: 1
    const static int envelope2_att_lev = 99;

    //ENVELOPE3-ATT.LEV
    //min: 0, max: 1, default: 1
    const static int envelope3_att_lev = 100;

    //ENVELOPE4-ATT.LEV
    //min: 0, max: 1, default: 1
    const static int envelope4_att_lev = 101;

    //ENVELOPE1-DEC.TME
    //min: 0, max: 1, default: 0.5
    const static int envelope1_dec_tme = 102;

    //ENVELOPE2-DEC.TME
    //min: 0, max: 1, default: 0.5
    const static int envelope2_dec_tme = 103;

    //ENVELOPE3-DEC.TME
    //min: 0, max: 1, default: 0.5
    const static int envelope3_dec_tme = 104;

    //ENVELOPE4-DEC.TME
    //min: 0, max: 1, default: 0.5
    const static int envelope4_dec_tme = 105;

    //ENVELOPE1-DEC.LEV
    //min: 0, max: 1, default: 0.5
    const static int envelope1_dec_lev = 106;

    //ENVELOPE2-DEC.LEV
    //min: 0, max: 1, default: 0.5
    const static int envelope2_dec_lev = 107;

    //ENVELOPE3-DEC.LEV
    //min: 0, max: 1, default: 0.5
    const static int envelope3_dec_lev = 108;

    //ENVELOPE4-DEC.LEV
    //min: 0, max: 1, default: 0.5
    const static int envelope4_dec_lev = 109;

    //ENVELOPE1-SUST.TME
    //min: 0, max: 1, default: 0.5
    const static int envelope1_sust_tme = 110;

    //ENVELOPE2-SUST.TME
    //min: 0, max: 1, default: 0.5
    const static int envelope2_sust_tme = 111;

    //ENVELOPE3-SUST.TME
    //min: 0, max: 1, default: 0.5
    const static int envelope3_sust_tme = 112;

    //ENVELOPE4-SUST.TME
    //min: 0, max: 1, default: 0.5
    const static int envelope4_sust_tme = 113;

    //ENVELOPE1-SUST.LEV
    //min: 0, max: 1, default: 1
    const static int envelope1_sust_lev = 114;

    //ENVELOPE2-SUST.LEV
    //min: 0, max: 1, default: 1
    const static int envelope2_sust_lev = 115;

    //ENVELOPE3-SUST.LEV
    //min: 0, max: 1, default: 1
    const static int envelope3_sust_lev = 116;

    //ENVELOPE4-SUST.LEV
    //min: 0, max: 1, default: 1
    const static int envelope4_sust_lev = 117;

    //ENVELOPE1-LOOP.MORPH
    //min: 0, max: 1, default: 0
    const static int envelope1_loop_morph = 118;

    //ENVELOPE2-LOOP.MORPH
    //min: 0, max: 1, default: 0
    const static int envelope2_loop_morph = 119;

    //ENVELOPE3-LOOP.MORPH
    //min: 0, max: 1, default: 0
    const static int envelope3_loop_morph = 120;

    //ENVELOPE4-LOOP.MORPH
    //min: 0, max: 1, default: 0
    const static int envelope4_loop_morph = 121;

    //ENVELOPE1-REL. TME
    //min: 0, max: 1, default: 0.1
    const static int envelope1_rel_tme = 122;

    //ENVELOPE2-REL. TME
    //min: 0, max: 1, default: 0.1
    const static int envelope2_rel_tme = 123;

    //ENVELOPE3-REL. TME
    //min: 0, max: 1, default: 0.1
    const static int envelope3_rel_tme = 124;

    //ENVELOPE4-REL. TME
    //min: 0, max: 1, default: 0.1
    const static int envelope4_rel_tme = 125;

    //GLIDE-TIME
    //min: 0, max: 1, default: 0
    const static int glide_time = 126;

    //VIBRATO-RATE
    //min: 0, max: 1, default: 0
    const static int vibrato_rate = 127;

    //VIBRATO-DEPTH
    //min: 0, max: 1, default: 0
    const static int vibrato_depth = 128;

    //UNI PITCH-CROSSFADE
    //min: 0, max: 1, default: 0
    const static int uni_pitch_crossfade = 129;

    //UNI WT.POS-CROSSFADE
    //min: 0, max: 1, default: 0
    const static int uni_wt_pos_crossfade = 130;

    //UNI PAN-CROSSFADE
    //min: 0, max: 1, default: 0.5
    const static int uni_pan_crossfade = 131;

    //EQ-LoShelf.BOOST
    //min: 0, max: 1, default: 0.5
    const static int eq_loshelf_boost = 132;

    //EQ-Peak.BOOST
    //min: 0, max: 1, default: 0.5
    const static int eq_peak_boost = 133;

    //EQ-Peak.FREQ
    //min: 0, max: 1, default: 0.5
    const static int eq_peak_freq = 134;

    //EQ-HiShelf.BOOST
    //min: 0, max: 1, default: 0.5
    const static int eq_hishelf_boost = 135;

    //Env.Hold Reset
    //min: 0, max: 1, default: 0
    const static int env_hold_reset = 136;

    //MODULATOR5-NUM
    //min: 0, max: 1, default: 0
    const static int modulator5_num = 137;

    //MODULATOR6-NUM
    //min: 0, max: 1, default: 0
    const static int modulator6_num = 138;

    //MODULATOR7-NUM
    //min: 0, max: 1, default: 0
    const static int modulator7_num = 139;

    //MODULATOR8-NUM
    //min: 0, max: 1, default: 0
    const static int modulator8_num = 140;

    //MODULATOR5-DEN
    //min: 0, max: 1, default: 0
    const static int modulator5_den = 141;

    //MODULATOR6-DEN
    //min: 0, max: 1, default: 0
    const static int modulator6_den = 142;

    //MODULATOR7-DEN
    //min: 0, max: 1, default: 0
    const static int modulator7_den = 143;

    //MODULATOR8-DEN
    //min: 0, max: 1, default: 0
    const static int modulator8_den = 144;

    //MODULATOR5-SNCPOS on
    //min: 0, max: 1, default: 1
    const static int modulator5_sncpos_on = 145;

    //MODULATOR6-SNCPOS on
    //min: 0, max: 1, default: 1
    const static int modulator6_sncpos_on = 146;

    //MODULATOR7-SNCPOS on
    //min: 0, max: 1, default: 1
    const static int modulator7_sncpos_on = 147;

    //MODULATOR8-SNCPOS on
    //min: 0, max: 1, default: 1
    const static int modulator8_sncpos_on = 148;

    //These variables store the most recenty recorded values
    //of each of the parameters, for recording and detection
    AudioUnitParameterValue previous_macro_1;
    AudioUnitParameterValue previous_macro_2;
    AudioUnitParameterValue previous_macro_3;
    AudioUnitParameterValue previous_macro_4;
    AudioUnitParameterValue previous_macro_5;
    AudioUnitParameterValue previous_macro_6;
    AudioUnitParameterValue previous_macro_7;
    AudioUnitParameterValue previous_macro_8;
    AudioUnitParameterValue previous_osc1_pitch;
    AudioUnitParameterValue previous_osc1_position;
    AudioUnitParameterValue previous_osc1_param2;
    AudioUnitParameterValue previous_osc1_amp;
    AudioUnitParameterValue previous_osc1_flt_routing;
    AudioUnitParameterValue previous_osc2_pitch;
    AudioUnitParameterValue previous_osc2_position;
    AudioUnitParameterValue previous_osc2_param2;
    AudioUnitParameterValue previous_osc2_amp;
    AudioUnitParameterValue previous_osc2_flt_routing;
    AudioUnitParameterValue previous_osc3_pitch;
    AudioUnitParameterValue previous_osc3_position;
    AudioUnitParameterValue previous_osc3_param2;
    AudioUnitParameterValue previous_osc3_amp;
    AudioUnitParameterValue previous_osc3_flt_routing;
    AudioUnitParameterValue previous_noise_color;
    AudioUnitParameterValue previous_noise_amp;
    AudioUnitParameterValue previous_noise_fltr_routing;
    AudioUnitParameterValue previous_feedback_amp;
    AudioUnitParameterValue previous_feedback_flt_routing;
    AudioUnitParameterValue previous_mod_osc_pitch;
    AudioUnitParameterValue previous_mod_osc_rngmod;
    AudioUnitParameterValue previous_mod_osc_phase;
    AudioUnitParameterValue previous_mod_osc_position;
    AudioUnitParameterValue previous_mod_osc_fltr_fm;
    AudioUnitParameterValue previous_filter1_cut_prm_1;
    AudioUnitParameterValue previous_filter1_bw_prm_2;
    AudioUnitParameterValue previous_filter1_res_prm_3;
    AudioUnitParameterValue previous_filter2_cut_prm_1;
    AudioUnitParameterValue previous_filter2_bw_prm_2;
    AudioUnitParameterValue previous_filter2_res_prm_3;
    AudioUnitParameterValue previous_seriell_parallel;
    AudioUnitParameterValue previous_insert1_dw_prm_1;
    AudioUnitParameterValue previous_insert1_prm_2;
    AudioUnitParameterValue previous_insert2_dw_prm_1;
    AudioUnitParameterValue previous_insert2_prm_2;
    AudioUnitParameterValue previous_master_fx1_dry_wet;
    AudioUnitParameterValue previous_master_fx1_prm_2;
    AudioUnitParameterValue previous_master_fx1_prm_3;
    AudioUnitParameterValue previous_master_fx1_prm_4;
    AudioUnitParameterValue previous_master_fx2_dry_wet;
    AudioUnitParameterValue previous_master_fx2_prm_2;
    AudioUnitParameterValue previous_master_fx2_prm_3;
    AudioUnitParameterValue previous_master_fx2_prm_4;
    AudioUnitParameterValue previous_filter1_out_gain;
    AudioUnitParameterValue previous_filter2_out_gain;
    AudioUnitParameterValue previous_filter_1_2_crossfade;
    AudioUnitParameterValue previous_bypass_gain;
    AudioUnitParameterValue previous_pan_fltr_path_;
    AudioUnitParameterValue previous_master_volume;
    AudioUnitParameterValue previous_modulator5_rate;
    AudioUnitParameterValue previous_modulator6_rate;
    AudioUnitParameterValue previous_modulator7_rate;
    AudioUnitParameterValue previous_modulator8_rate;
    AudioUnitParameterValue previous_modulator5_amp;
    AudioUnitParameterValue previous_modulator6_amp;
    AudioUnitParameterValue previous_modulator7_amp;
    AudioUnitParameterValue previous_modulator8_amp;
    AudioUnitParameterValue previous_modulator5_crossf_glide;
    AudioUnitParameterValue previous_modulator6_crossf_glide;
    AudioUnitParameterValue previous_modulator7_crossf_glide;
    AudioUnitParameterValue previous_modulator8_crossf_glide;
    AudioUnitParameterValue previous_modulator5_ind_lev;
    AudioUnitParameterValue previous_modulator6_ind_lev;
    AudioUnitParameterValue previous_modulator7_ind_lev;
    AudioUnitParameterValue previous_modulator8_ind_lev;
    AudioUnitParameterValue previous_modulator15_sync_on;
    AudioUnitParameterValue previous_modulator26_sync_on;
    AudioUnitParameterValue previous_modulator37_sync_on;
    AudioUnitParameterValue previous_modulator48_sync_on;
    AudioUnitParameterValue previous_modulator5_restart_on;
    AudioUnitParameterValue previous_modulator6_restart_on;
    AudioUnitParameterValue previous_modulator7_restart_on;
    AudioUnitParameterValue previous_modulator8_restart_on;
    AudioUnitParameterValue previous_envelope1_velocity;
    AudioUnitParameterValue previous_envelope2_velocity;
    AudioUnitParameterValue previous_envelope3_velocity;
    AudioUnitParameterValue previous_envelope4_velocity;
    AudioUnitParameterValue previous_envelope1_keytracking;
    AudioUnitParameterValue previous_envelope2_keytracking;
    AudioUnitParameterValue previous_envelope3_keytracking;
    AudioUnitParameterValue previous_envelope4_keytracking;
    AudioUnitParameterValue previous_envelope1_delay;
    AudioUnitParameterValue previous_envelope2_delay;
    AudioUnitParameterValue previous_envelope3_delay;
    AudioUnitParameterValue previous_envelope4_delay;
    AudioUnitParameterValue previous_envelope1_att_tme;
    AudioUnitParameterValue previous_envelope2_att_tme;
    AudioUnitParameterValue previous_envelope3_att_tme;
    AudioUnitParameterValue previous_envelope4_att_tme;
    AudioUnitParameterValue previous_envelope1_att_lev;
    AudioUnitParameterValue previous_envelope2_att_lev;
    AudioUnitParameterValue previous_envelope3_att_lev;
    AudioUnitParameterValue previous_envelope4_att_lev;
    AudioUnitParameterValue previous_envelope1_dec_tme;
    AudioUnitParameterValue previous_envelope2_dec_tme;
    AudioUnitParameterValue previous_envelope3_dec_tme;
    AudioUnitParameterValue previous_envelope4_dec_tme;
    AudioUnitParameterValue previous_envelope1_dec_lev;
    AudioUnitParameterValue previous_envelope2_dec_lev;
    AudioUnitParameterValue previous_envelope3_dec_lev;
    AudioUnitParameterValue previous_envelope4_dec_lev;
    AudioUnitParameterValue previous_envelope1_sust_tme;
    AudioUnitParameterValue previous_envelope2_sust_tme;
    AudioUnitParameterValue previous_envelope3_sust_tme;
    AudioUnitParameterValue previous_envelope4_sust_tme;
    AudioUnitParameterValue previous_envelope1_sust_lev;
    AudioUnitParameterValue previous_envelope2_sust_lev;
    AudioUnitParameterValue previous_envelope3_sust_lev;
    AudioUnitParameterValue previous_envelope4_sust_lev;
    AudioUnitParameterValue previous_envelope1_loop_morph;
    AudioUnitParameterValue previous_envelope2_loop_morph;
    AudioUnitParameterValue previous_envelope3_loop_morph;
    AudioUnitParameterValue previous_envelope4_loop_morph;
    AudioUnitParameterValue previous_envelope1_rel_tme;
    AudioUnitParameterValue previous_envelope2_rel_tme;
    AudioUnitParameterValue previous_envelope3_rel_tme;
    AudioUnitParameterValue previous_envelope4_rel_tme;
    AudioUnitParameterValue previous_glide_time;
    AudioUnitParameterValue previous_vibrato_rate;
    AudioUnitParameterValue previous_vibrato_depth;
    AudioUnitParameterValue previous_uni_pitch_crossfade;
    AudioUnitParameterValue previous_uni_wt_pos_crossfade;
    AudioUnitParameterValue previous_uni_pan_crossfade;
    AudioUnitParameterValue previous_eq_loshelf_boost;
    AudioUnitParameterValue previous_eq_peak_boost;
    AudioUnitParameterValue previous_eq_peak_freq;
    AudioUnitParameterValue previous_eq_hishelf_boost;
    AudioUnitParameterValue previous_env_hold_reset;
    AudioUnitParameterValue previous_modulator5_num;
    AudioUnitParameterValue previous_modulator6_num;
    AudioUnitParameterValue previous_modulator7_num;
    AudioUnitParameterValue previous_modulator8_num;
    AudioUnitParameterValue previous_modulator5_den;
    AudioUnitParameterValue previous_modulator6_den;
    AudioUnitParameterValue previous_modulator7_den;
    AudioUnitParameterValue previous_modulator8_den;
    AudioUnitParameterValue previous_modulator5_sncpos_on;
    AudioUnitParameterValue previous_modulator6_sncpos_on;
    AudioUnitParameterValue previous_modulator7_sncpos_on;
    AudioUnitParameterValue previous_modulator8_sncpos_on;

    void setup(string _unitName) {
        aumManagedAudioUnit::setup(_unitName, 'aumu', 'NiMa', '-NI-', "aumUnit_Massive");
    }

    void doPrintChanges() {
        compareAndPrint("macro_1", previous_macro_1, get(macro_1));
        compareAndPrint("macro_2", previous_macro_2, get(macro_2));
        compareAndPrint("macro_3", previous_macro_3, get(macro_3));
        compareAndPrint("macro_4", previous_macro_4, get(macro_4));
        compareAndPrint("macro_5", previous_macro_5, get(macro_5));
        compareAndPrint("macro_6", previous_macro_6, get(macro_6));
        compareAndPrint("macro_7", previous_macro_7, get(macro_7));
        compareAndPrint("macro_8", previous_macro_8, get(macro_8));
        compareAndPrint("osc1_pitch", previous_osc1_pitch, get(osc1_pitch));
        compareAndPrint("osc1_position", previous_osc1_position, get(osc1_position));
        compareAndPrint("osc1_param2", previous_osc1_param2, get(osc1_param2));
        compareAndPrint("osc1_amp", previous_osc1_amp, get(osc1_amp));
        compareAndPrint("osc1_flt_routing", previous_osc1_flt_routing, get(osc1_flt_routing));
        compareAndPrint("osc2_pitch", previous_osc2_pitch, get(osc2_pitch));
        compareAndPrint("osc2_position", previous_osc2_position, get(osc2_position));
        compareAndPrint("osc2_param2", previous_osc2_param2, get(osc2_param2));
        compareAndPrint("osc2_amp", previous_osc2_amp, get(osc2_amp));
        compareAndPrint("osc2_flt_routing", previous_osc2_flt_routing, get(osc2_flt_routing));
        compareAndPrint("osc3_pitch", previous_osc3_pitch, get(osc3_pitch));
        compareAndPrint("osc3_position", previous_osc3_position, get(osc3_position));
        compareAndPrint("osc3_param2", previous_osc3_param2, get(osc3_param2));
        compareAndPrint("osc3_amp", previous_osc3_amp, get(osc3_amp));
        compareAndPrint("osc3_flt_routing", previous_osc3_flt_routing, get(osc3_flt_routing));
        compareAndPrint("noise_color", previous_noise_color, get(noise_color));
        compareAndPrint("noise_amp", previous_noise_amp, get(noise_amp));
        compareAndPrint("noise_fltr_routing", previous_noise_fltr_routing, get(noise_fltr_routing));
        compareAndPrint("feedback_amp", previous_feedback_amp, get(feedback_amp));
        compareAndPrint("feedback_flt_routing", previous_feedback_flt_routing, get(feedback_flt_routing));
        compareAndPrint("mod_osc_pitch", previous_mod_osc_pitch, get(mod_osc_pitch));
        compareAndPrint("mod_osc_rngmod", previous_mod_osc_rngmod, get(mod_osc_rngmod));
        compareAndPrint("mod_osc_phase", previous_mod_osc_phase, get(mod_osc_phase));
        compareAndPrint("mod_osc_position", previous_mod_osc_position, get(mod_osc_position));
        compareAndPrint("mod_osc_fltr_fm", previous_mod_osc_fltr_fm, get(mod_osc_fltr_fm));
        compareAndPrint("filter1_cut_prm_1", previous_filter1_cut_prm_1, get(filter1_cut_prm_1));
        compareAndPrint("filter1_bw_prm_2", previous_filter1_bw_prm_2, get(filter1_bw_prm_2));
        compareAndPrint("filter1_res_prm_3", previous_filter1_res_prm_3, get(filter1_res_prm_3));
        compareAndPrint("filter2_cut_prm_1", previous_filter2_cut_prm_1, get(filter2_cut_prm_1));
        compareAndPrint("filter2_bw_prm_2", previous_filter2_bw_prm_2, get(filter2_bw_prm_2));
        compareAndPrint("filter2_res_prm_3", previous_filter2_res_prm_3, get(filter2_res_prm_3));
        compareAndPrint("seriell_parallel", previous_seriell_parallel, get(seriell_parallel));
        compareAndPrint("insert1_dw_prm_1", previous_insert1_dw_prm_1, get(insert1_dw_prm_1));
        compareAndPrint("insert1_prm_2", previous_insert1_prm_2, get(insert1_prm_2));
        compareAndPrint("insert2_dw_prm_1", previous_insert2_dw_prm_1, get(insert2_dw_prm_1));
        compareAndPrint("insert2_prm_2", previous_insert2_prm_2, get(insert2_prm_2));
        compareAndPrint("master_fx1_dry_wet", previous_master_fx1_dry_wet, get(master_fx1_dry_wet));
        compareAndPrint("master_fx1_prm_2", previous_master_fx1_prm_2, get(master_fx1_prm_2));
        compareAndPrint("master_fx1_prm_3", previous_master_fx1_prm_3, get(master_fx1_prm_3));
        compareAndPrint("master_fx1_prm_4", previous_master_fx1_prm_4, get(master_fx1_prm_4));
        compareAndPrint("master_fx2_dry_wet", previous_master_fx2_dry_wet, get(master_fx2_dry_wet));
        compareAndPrint("master_fx2_prm_2", previous_master_fx2_prm_2, get(master_fx2_prm_2));
        compareAndPrint("master_fx2_prm_3", previous_master_fx2_prm_3, get(master_fx2_prm_3));
        compareAndPrint("master_fx2_prm_4", previous_master_fx2_prm_4, get(master_fx2_prm_4));
        compareAndPrint("filter1_out_gain", previous_filter1_out_gain, get(filter1_out_gain));
        compareAndPrint("filter2_out_gain", previous_filter2_out_gain, get(filter2_out_gain));
        compareAndPrint("filter_1_2_crossfade", previous_filter_1_2_crossfade, get(filter_1_2_crossfade));
        compareAndPrint("bypass_gain", previous_bypass_gain, get(bypass_gain));
        compareAndPrint("pan_fltr_path_", previous_pan_fltr_path_, get(pan_fltr_path_));
        compareAndPrint("master_volume", previous_master_volume, get(master_volume));
        compareAndPrint("modulator5_rate", previous_modulator5_rate, get(modulator5_rate));
        compareAndPrint("modulator6_rate", previous_modulator6_rate, get(modulator6_rate));
        compareAndPrint("modulator7_rate", previous_modulator7_rate, get(modulator7_rate));
        compareAndPrint("modulator8_rate", previous_modulator8_rate, get(modulator8_rate));
        compareAndPrint("modulator5_amp", previous_modulator5_amp, get(modulator5_amp));
        compareAndPrint("modulator6_amp", previous_modulator6_amp, get(modulator6_amp));
        compareAndPrint("modulator7_amp", previous_modulator7_amp, get(modulator7_amp));
        compareAndPrint("modulator8_amp", previous_modulator8_amp, get(modulator8_amp));
        compareAndPrint("modulator5_crossf_glide", previous_modulator5_crossf_glide, get(modulator5_crossf_glide));
        compareAndPrint("modulator6_crossf_glide", previous_modulator6_crossf_glide, get(modulator6_crossf_glide));
        compareAndPrint("modulator7_crossf_glide", previous_modulator7_crossf_glide, get(modulator7_crossf_glide));
        compareAndPrint("modulator8_crossf_glide", previous_modulator8_crossf_glide, get(modulator8_crossf_glide));
        compareAndPrint("modulator5_ind_lev", previous_modulator5_ind_lev, get(modulator5_ind_lev));
        compareAndPrint("modulator6_ind_lev", previous_modulator6_ind_lev, get(modulator6_ind_lev));
        compareAndPrint("modulator7_ind_lev", previous_modulator7_ind_lev, get(modulator7_ind_lev));
        compareAndPrint("modulator8_ind_lev", previous_modulator8_ind_lev, get(modulator8_ind_lev));
        compareAndPrint("modulator15_sync_on", previous_modulator15_sync_on, get(modulator15_sync_on));
        compareAndPrint("modulator26_sync_on", previous_modulator26_sync_on, get(modulator26_sync_on));
        compareAndPrint("modulator37_sync_on", previous_modulator37_sync_on, get(modulator37_sync_on));
        compareAndPrint("modulator48_sync_on", previous_modulator48_sync_on, get(modulator48_sync_on));
        compareAndPrint("modulator5_restart_on", previous_modulator5_restart_on, get(modulator5_restart_on));
        compareAndPrint("modulator6_restart_on", previous_modulator6_restart_on, get(modulator6_restart_on));
        compareAndPrint("modulator7_restart_on", previous_modulator7_restart_on, get(modulator7_restart_on));
        compareAndPrint("modulator8_restart_on", previous_modulator8_restart_on, get(modulator8_restart_on));
        compareAndPrint("envelope1_velocity", previous_envelope1_velocity, get(envelope1_velocity));
        compareAndPrint("envelope2_velocity", previous_envelope2_velocity, get(envelope2_velocity));
        compareAndPrint("envelope3_velocity", previous_envelope3_velocity, get(envelope3_velocity));
        compareAndPrint("envelope4_velocity", previous_envelope4_velocity, get(envelope4_velocity));
        compareAndPrint("envelope1_keytracking", previous_envelope1_keytracking, get(envelope1_keytracking));
        compareAndPrint("envelope2_keytracking", previous_envelope2_keytracking, get(envelope2_keytracking));
        compareAndPrint("envelope3_keytracking", previous_envelope3_keytracking, get(envelope3_keytracking));
        compareAndPrint("envelope4_keytracking", previous_envelope4_keytracking, get(envelope4_keytracking));
        compareAndPrint("envelope1_delay", previous_envelope1_delay, get(envelope1_delay));
        compareAndPrint("envelope2_delay", previous_envelope2_delay, get(envelope2_delay));
        compareAndPrint("envelope3_delay", previous_envelope3_delay, get(envelope3_delay));
        compareAndPrint("envelope4_delay", previous_envelope4_delay, get(envelope4_delay));
        compareAndPrint("envelope1_att_tme", previous_envelope1_att_tme, get(envelope1_att_tme));
        compareAndPrint("envelope2_att_tme", previous_envelope2_att_tme, get(envelope2_att_tme));
        compareAndPrint("envelope3_att_tme", previous_envelope3_att_tme, get(envelope3_att_tme));
        compareAndPrint("envelope4_att_tme", previous_envelope4_att_tme, get(envelope4_att_tme));
        compareAndPrint("envelope1_att_lev", previous_envelope1_att_lev, get(envelope1_att_lev));
        compareAndPrint("envelope2_att_lev", previous_envelope2_att_lev, get(envelope2_att_lev));
        compareAndPrint("envelope3_att_lev", previous_envelope3_att_lev, get(envelope3_att_lev));
        compareAndPrint("envelope4_att_lev", previous_envelope4_att_lev, get(envelope4_att_lev));
        compareAndPrint("envelope1_dec_tme", previous_envelope1_dec_tme, get(envelope1_dec_tme));
        compareAndPrint("envelope2_dec_tme", previous_envelope2_dec_tme, get(envelope2_dec_tme));
        compareAndPrint("envelope3_dec_tme", previous_envelope3_dec_tme, get(envelope3_dec_tme));
        compareAndPrint("envelope4_dec_tme", previous_envelope4_dec_tme, get(envelope4_dec_tme));
        compareAndPrint("envelope1_dec_lev", previous_envelope1_dec_lev, get(envelope1_dec_lev));
        compareAndPrint("envelope2_dec_lev", previous_envelope2_dec_lev, get(envelope2_dec_lev));
        compareAndPrint("envelope3_dec_lev", previous_envelope3_dec_lev, get(envelope3_dec_lev));
        compareAndPrint("envelope4_dec_lev", previous_envelope4_dec_lev, get(envelope4_dec_lev));
        compareAndPrint("envelope1_sust_tme", previous_envelope1_sust_tme, get(envelope1_sust_tme));
        compareAndPrint("envelope2_sust_tme", previous_envelope2_sust_tme, get(envelope2_sust_tme));
        compareAndPrint("envelope3_sust_tme", previous_envelope3_sust_tme, get(envelope3_sust_tme));
        compareAndPrint("envelope4_sust_tme", previous_envelope4_sust_tme, get(envelope4_sust_tme));
        compareAndPrint("envelope1_sust_lev", previous_envelope1_sust_lev, get(envelope1_sust_lev));
        compareAndPrint("envelope2_sust_lev", previous_envelope2_sust_lev, get(envelope2_sust_lev));
        compareAndPrint("envelope3_sust_lev", previous_envelope3_sust_lev, get(envelope3_sust_lev));
        compareAndPrint("envelope4_sust_lev", previous_envelope4_sust_lev, get(envelope4_sust_lev));
        compareAndPrint("envelope1_loop_morph", previous_envelope1_loop_morph, get(envelope1_loop_morph));
        compareAndPrint("envelope2_loop_morph", previous_envelope2_loop_morph, get(envelope2_loop_morph));
        compareAndPrint("envelope3_loop_morph", previous_envelope3_loop_morph, get(envelope3_loop_morph));
        compareAndPrint("envelope4_loop_morph", previous_envelope4_loop_morph, get(envelope4_loop_morph));
        compareAndPrint("envelope1_rel_tme", previous_envelope1_rel_tme, get(envelope1_rel_tme));
        compareAndPrint("envelope2_rel_tme", previous_envelope2_rel_tme, get(envelope2_rel_tme));
        compareAndPrint("envelope3_rel_tme", previous_envelope3_rel_tme, get(envelope3_rel_tme));
        compareAndPrint("envelope4_rel_tme", previous_envelope4_rel_tme, get(envelope4_rel_tme));
        compareAndPrint("glide_time", previous_glide_time, get(glide_time));
        compareAndPrint("vibrato_rate", previous_vibrato_rate, get(vibrato_rate));
        compareAndPrint("vibrato_depth", previous_vibrato_depth, get(vibrato_depth));
        compareAndPrint("uni_pitch_crossfade", previous_uni_pitch_crossfade, get(uni_pitch_crossfade));
        compareAndPrint("uni_wt_pos_crossfade", previous_uni_wt_pos_crossfade, get(uni_wt_pos_crossfade));
        compareAndPrint("uni_pan_crossfade", previous_uni_pan_crossfade, get(uni_pan_crossfade));
        compareAndPrint("eq_loshelf_boost", previous_eq_loshelf_boost, get(eq_loshelf_boost));
        compareAndPrint("eq_peak_boost", previous_eq_peak_boost, get(eq_peak_boost));
        compareAndPrint("eq_peak_freq", previous_eq_peak_freq, get(eq_peak_freq));
        compareAndPrint("eq_hishelf_boost", previous_eq_hishelf_boost, get(eq_hishelf_boost));
        compareAndPrint("env_hold_reset", previous_env_hold_reset, get(env_hold_reset));
        compareAndPrint("modulator5_num", previous_modulator5_num, get(modulator5_num));
        compareAndPrint("modulator6_num", previous_modulator6_num, get(modulator6_num));
        compareAndPrint("modulator7_num", previous_modulator7_num, get(modulator7_num));
        compareAndPrint("modulator8_num", previous_modulator8_num, get(modulator8_num));
        compareAndPrint("modulator5_den", previous_modulator5_den, get(modulator5_den));
        compareAndPrint("modulator6_den", previous_modulator6_den, get(modulator6_den));
        compareAndPrint("modulator7_den", previous_modulator7_den, get(modulator7_den));
        compareAndPrint("modulator8_den", previous_modulator8_den, get(modulator8_den));
        compareAndPrint("modulator5_sncpos_on", previous_modulator5_sncpos_on, get(modulator5_sncpos_on));
        compareAndPrint("modulator6_sncpos_on", previous_modulator6_sncpos_on, get(modulator6_sncpos_on));
        compareAndPrint("modulator7_sncpos_on", previous_modulator7_sncpos_on, get(modulator7_sncpos_on));
        compareAndPrint("modulator8_sncpos_on", previous_modulator8_sncpos_on, get(modulator8_sncpos_on));
    }

    void doRecordParams() {
        previous_macro_1 = get(macro_1);
        previous_macro_2 = get(macro_2);
        previous_macro_3 = get(macro_3);
        previous_macro_4 = get(macro_4);
        previous_macro_5 = get(macro_5);
        previous_macro_6 = get(macro_6);
        previous_macro_7 = get(macro_7);
        previous_macro_8 = get(macro_8);
        previous_osc1_pitch = get(osc1_pitch);
        previous_osc1_position = get(osc1_position);
        previous_osc1_param2 = get(osc1_param2);
        previous_osc1_amp = get(osc1_amp);
        previous_osc1_flt_routing = get(osc1_flt_routing);
        previous_osc2_pitch = get(osc2_pitch);
        previous_osc2_position = get(osc2_position);
        previous_osc2_param2 = get(osc2_param2);
        previous_osc2_amp = get(osc2_amp);
        previous_osc2_flt_routing = get(osc2_flt_routing);
        previous_osc3_pitch = get(osc3_pitch);
        previous_osc3_position = get(osc3_position);
        previous_osc3_param2 = get(osc3_param2);
        previous_osc3_amp = get(osc3_amp);
        previous_osc3_flt_routing = get(osc3_flt_routing);
        previous_noise_color = get(noise_color);
        previous_noise_amp = get(noise_amp);
        previous_noise_fltr_routing = get(noise_fltr_routing);
        previous_feedback_amp = get(feedback_amp);
        previous_feedback_flt_routing = get(feedback_flt_routing);
        previous_mod_osc_pitch = get(mod_osc_pitch);
        previous_mod_osc_rngmod = get(mod_osc_rngmod);
        previous_mod_osc_phase = get(mod_osc_phase);
        previous_mod_osc_position = get(mod_osc_position);
        previous_mod_osc_fltr_fm = get(mod_osc_fltr_fm);
        previous_filter1_cut_prm_1 = get(filter1_cut_prm_1);
        previous_filter1_bw_prm_2 = get(filter1_bw_prm_2);
        previous_filter1_res_prm_3 = get(filter1_res_prm_3);
        previous_filter2_cut_prm_1 = get(filter2_cut_prm_1);
        previous_filter2_bw_prm_2 = get(filter2_bw_prm_2);
        previous_filter2_res_prm_3 = get(filter2_res_prm_3);
        previous_seriell_parallel = get(seriell_parallel);
        previous_insert1_dw_prm_1 = get(insert1_dw_prm_1);
        previous_insert1_prm_2 = get(insert1_prm_2);
        previous_insert2_dw_prm_1 = get(insert2_dw_prm_1);
        previous_insert2_prm_2 = get(insert2_prm_2);
        previous_master_fx1_dry_wet = get(master_fx1_dry_wet);
        previous_master_fx1_prm_2 = get(master_fx1_prm_2);
        previous_master_fx1_prm_3 = get(master_fx1_prm_3);
        previous_master_fx1_prm_4 = get(master_fx1_prm_4);
        previous_master_fx2_dry_wet = get(master_fx2_dry_wet);
        previous_master_fx2_prm_2 = get(master_fx2_prm_2);
        previous_master_fx2_prm_3 = get(master_fx2_prm_3);
        previous_master_fx2_prm_4 = get(master_fx2_prm_4);
        previous_filter1_out_gain = get(filter1_out_gain);
        previous_filter2_out_gain = get(filter2_out_gain);
        previous_filter_1_2_crossfade = get(filter_1_2_crossfade);
        previous_bypass_gain = get(bypass_gain);
        previous_pan_fltr_path_ = get(pan_fltr_path_);
        previous_master_volume = get(master_volume);
        previous_modulator5_rate = get(modulator5_rate);
        previous_modulator6_rate = get(modulator6_rate);
        previous_modulator7_rate = get(modulator7_rate);
        previous_modulator8_rate = get(modulator8_rate);
        previous_modulator5_amp = get(modulator5_amp);
        previous_modulator6_amp = get(modulator6_amp);
        previous_modulator7_amp = get(modulator7_amp);
        previous_modulator8_amp = get(modulator8_amp);
        previous_modulator5_crossf_glide = get(modulator5_crossf_glide);
        previous_modulator6_crossf_glide = get(modulator6_crossf_glide);
        previous_modulator7_crossf_glide = get(modulator7_crossf_glide);
        previous_modulator8_crossf_glide = get(modulator8_crossf_glide);
        previous_modulator5_ind_lev = get(modulator5_ind_lev);
        previous_modulator6_ind_lev = get(modulator6_ind_lev);
        previous_modulator7_ind_lev = get(modulator7_ind_lev);
        previous_modulator8_ind_lev = get(modulator8_ind_lev);
        previous_modulator15_sync_on = get(modulator15_sync_on);
        previous_modulator26_sync_on = get(modulator26_sync_on);
        previous_modulator37_sync_on = get(modulator37_sync_on);
        previous_modulator48_sync_on = get(modulator48_sync_on);
        previous_modulator5_restart_on = get(modulator5_restart_on);
        previous_modulator6_restart_on = get(modulator6_restart_on);
        previous_modulator7_restart_on = get(modulator7_restart_on);
        previous_modulator8_restart_on = get(modulator8_restart_on);
        previous_envelope1_velocity = get(envelope1_velocity);
        previous_envelope2_velocity = get(envelope2_velocity);
        previous_envelope3_velocity = get(envelope3_velocity);
        previous_envelope4_velocity = get(envelope4_velocity);
        previous_envelope1_keytracking = get(envelope1_keytracking);
        previous_envelope2_keytracking = get(envelope2_keytracking);
        previous_envelope3_keytracking = get(envelope3_keytracking);
        previous_envelope4_keytracking = get(envelope4_keytracking);
        previous_envelope1_delay = get(envelope1_delay);
        previous_envelope2_delay = get(envelope2_delay);
        previous_envelope3_delay = get(envelope3_delay);
        previous_envelope4_delay = get(envelope4_delay);
        previous_envelope1_att_tme = get(envelope1_att_tme);
        previous_envelope2_att_tme = get(envelope2_att_tme);
        previous_envelope3_att_tme = get(envelope3_att_tme);
        previous_envelope4_att_tme = get(envelope4_att_tme);
        previous_envelope1_att_lev = get(envelope1_att_lev);
        previous_envelope2_att_lev = get(envelope2_att_lev);
        previous_envelope3_att_lev = get(envelope3_att_lev);
        previous_envelope4_att_lev = get(envelope4_att_lev);
        previous_envelope1_dec_tme = get(envelope1_dec_tme);
        previous_envelope2_dec_tme = get(envelope2_dec_tme);
        previous_envelope3_dec_tme = get(envelope3_dec_tme);
        previous_envelope4_dec_tme = get(envelope4_dec_tme);
        previous_envelope1_dec_lev = get(envelope1_dec_lev);
        previous_envelope2_dec_lev = get(envelope2_dec_lev);
        previous_envelope3_dec_lev = get(envelope3_dec_lev);
        previous_envelope4_dec_lev = get(envelope4_dec_lev);
        previous_envelope1_sust_tme = get(envelope1_sust_tme);
        previous_envelope2_sust_tme = get(envelope2_sust_tme);
        previous_envelope3_sust_tme = get(envelope3_sust_tme);
        previous_envelope4_sust_tme = get(envelope4_sust_tme);
        previous_envelope1_sust_lev = get(envelope1_sust_lev);
        previous_envelope2_sust_lev = get(envelope2_sust_lev);
        previous_envelope3_sust_lev = get(envelope3_sust_lev);
        previous_envelope4_sust_lev = get(envelope4_sust_lev);
        previous_envelope1_loop_morph = get(envelope1_loop_morph);
        previous_envelope2_loop_morph = get(envelope2_loop_morph);
        previous_envelope3_loop_morph = get(envelope3_loop_morph);
        previous_envelope4_loop_morph = get(envelope4_loop_morph);
        previous_envelope1_rel_tme = get(envelope1_rel_tme);
        previous_envelope2_rel_tme = get(envelope2_rel_tme);
        previous_envelope3_rel_tme = get(envelope3_rel_tme);
        previous_envelope4_rel_tme = get(envelope4_rel_tme);
        previous_glide_time = get(glide_time);
        previous_vibrato_rate = get(vibrato_rate);
        previous_vibrato_depth = get(vibrato_depth);
        previous_uni_pitch_crossfade = get(uni_pitch_crossfade);
        previous_uni_wt_pos_crossfade = get(uni_wt_pos_crossfade);
        previous_uni_pan_crossfade = get(uni_pan_crossfade);
        previous_eq_loshelf_boost = get(eq_loshelf_boost);
        previous_eq_peak_boost = get(eq_peak_boost);
        previous_eq_peak_freq = get(eq_peak_freq);
        previous_eq_hishelf_boost = get(eq_hishelf_boost);
        previous_env_hold_reset = get(env_hold_reset);
        previous_modulator5_num = get(modulator5_num);
        previous_modulator6_num = get(modulator6_num);
        previous_modulator7_num = get(modulator7_num);
        previous_modulator8_num = get(modulator8_num);
        previous_modulator5_den = get(modulator5_den);
        previous_modulator6_den = get(modulator6_den);
        previous_modulator7_den = get(modulator7_den);
        previous_modulator8_den = get(modulator8_den);
        previous_modulator5_sncpos_on = get(modulator5_sncpos_on);
        previous_modulator6_sncpos_on = get(modulator6_sncpos_on);
        previous_modulator7_sncpos_on = get(modulator7_sncpos_on);
        previous_modulator8_sncpos_on = get(modulator8_sncpos_on);
    }
};